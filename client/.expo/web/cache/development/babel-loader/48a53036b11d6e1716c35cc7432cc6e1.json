{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as uuid from 'uuid';\nimport io from 'socket.io-client';\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { createServer } from \"http\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar httpServer = createServer();\nvar socket = io(httpServer, {\n  cors: {\n    origin: \"http://localhost:3000\",\n    credentials: true\n  }\n});\nexport default function Chat(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState('Chat Web'),\n      _useState2 = _slicedToArray(_useState, 1),\n      title = _useState2[0];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      messages = _useState8[0],\n      setMessages = _useState8[1];\n\n  useEffect(function () {\n    function receivedMessage(message) {\n      var newMessage = {\n        id: uuid.v4(),\n        name: message.name,\n        text: message.text\n      };\n      setMessages([].concat(_toConsumableArray(messages), [newMessage]));\n    }\n\n    socket.on('msgToClient', function (message) {\n      receivedMessage(message);\n    });\n  }, [messages, name, text]);\n\n  function validateInput() {\n    return name.length > 0 && text.length > 0;\n  }\n\n  function sendMessage() {\n    if (validateInput()) {\n      var message = {\n        name: name,\n        text: text\n      };\n      socket.emit('msgToServer', message);\n      setText('');\n    }\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      value: name,\n      onChangeText: function onChangeText(value) {\n        return setName(value);\n      },\n      placeholder: \"enter your name\"\n    }), _jsx(View, {\n      style: styles.messageCard,\n      children: messages.map(function (message) {\n        if (message.name === name) {\n          return _jsxs(Text, {\n            children: [message.name, \" \", message.text]\n          });\n        }\n\n        return _jsxs(Text, {\n          children: [message.name, \" \", message.text]\n        });\n      })\n    }), _jsx(TextInput, {\n      value: text,\n      onChangeText: function onChangeText(value) {\n        return setText(value);\n      },\n      placeholder: \"Send a message\"\n    }), _jsx(Button, {\n      title: \"Send\",\n      onPress: function onPress() {\n        return sendMessage();\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: '#222'\n  },\n  myMessage: {\n    backgroundColor: 'blue'\n  },\n  otherMessage: {\n    backgroundColor: 'gray'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","uuid","io","TextInput","Text","createServer","httpServer","socket","cors","origin","credentials","Chat","navigation","title","name","setName","text","setText","messages","setMessages","receivedMessage","message","newMessage","id","v4","on","validateInput","length","sendMessage","emit","styles","container","value","messageCard","map","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","borderWidth","borderColor","myMessage","backgroundColor","otherMessage"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/screens/chat/chat.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, StatusBar, StyleSheet, View } from \"react-native\";\nimport { RootStackScreenProps } from \"../../types\";\nimport * as uuid from 'uuid';\nimport io from 'socket.io-client';\nimport { TextInput, Text } from '../../src/components/Themed';\n\nimport { createServer } from \"http\";\nimport { Server } from \"socket.io\";\n\nconst httpServer = createServer();\nconst socket = io(httpServer, {\n  cors: {\n    origin: \"http://localhost:3000\",\n    credentials: true,\n  },\n});\n\ninterface Message {\n  id: string;\n  name: string;\n  text: string;\n}\n\ninterface Payload {\n  name: string;\n  text: string;\n}\n\nexport default function Chat({ navigation }: RootStackScreenProps<\"Chat\">) {\n  const [title] = useState('Chat Web');\n  const [name, setName] = useState('');\n  const [text, setText] = useState('');\n  const [messages, setMessages] = useState<Message[]>([]);\n\n  useEffect(() => {\n    function receivedMessage(message: Payload) {\n      const newMessage: Message = {\n        id: uuid.v4(),\n        name: message.name,\n        text: message.text,\n      };\n\n      setMessages([...messages, newMessage]);\n    }\n\n    socket.on('msgToClient', (message: Payload) => {\n      receivedMessage(message);\n    });\n  }, [messages, name, text]);\n\n  function validateInput() {\n    return name.length > 0 && text.length > 0;\n  }\n\n  function sendMessage() {\n    if (validateInput()) {\n      const message: Payload = {\n        name,\n        text,\n      };\n\n      socket.emit('msgToServer', message);\n      setText('');\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <TextInput value={name} onChangeText={(value) => setName(value)} placeholder=\"enter your name\"/>\n      <View style={styles.messageCard}>\n      {messages.map(message => {\n            if (message.name === name) {\n              return (\n                <Text>\n                  {message.name} {message.text}\n                </Text>\n              );\n            }\n\n            return (\n              <Text>\n                {message.name} {message.text}\n              </Text>\n            );\n          })}\n      </View>\n      <TextInput value={text} onChangeText={(value) => setText(value)} placeholder='Send a message'/>\n      <Button title='Send' onPress={() => sendMessage()}/>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: '#222',\n  },\n  myMessage: {\n    backgroundColor: 'blue',\n  },\n  otherMessage: {\n    backgroundColor: 'gray',\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}