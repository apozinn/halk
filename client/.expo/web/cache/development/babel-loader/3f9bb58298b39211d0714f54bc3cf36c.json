{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Socket from \"../../src/utils/socket\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Chat(_ref) {\n  var navigation = _ref.navigation,\n      id = _ref.id;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      socket = _useState2[0],\n      setSocket = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      value = _useState8[0],\n      setValue = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      name = _useState10[0],\n      setName = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      ready = _useState12[0],\n      setReady = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      otherUser = _useState14[0],\n      setOtherUser = _useState14[1];\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  useEffect(function () {\n    if (user.id) {\n      new Socket().get().then(function (socket) {\n        socket.emit(\"getMessages\", function (msgs) {\n          if (msgs.length) {\n            setMessages(msgs);\n            setOtherUser(msgs[0].author);\n          } else {\n            setMessages([{\n              text: \"Welcome to halk!\",\n              author: {\n                id: \"0\"\n              }\n            }]);\n            setOtherUser({\n              id: \"0\",\n              profile: {}\n            });\n          }\n        });\n      });\n    }\n\n    console.log(navigation, id);\n  }, [user]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.topContainer\n    }), _jsx(View, {\n      style: styles.messageContainer\n    }), _jsx(View, {\n      style: styles.bottomBar\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight\n  },\n  topContainer: {},\n  leftContent: {},\n  rightContent: {},\n  otherUserInfo: {},\n  otherUserName: {},\n  messageContainer: {},\n  bottomBar: {},\n  messageCard: {\n    borderWidth: 1,\n    borderColor: \"#222\"\n  },\n  myMessage: {\n    backgroundColor: \"blue\"\n  },\n  otherMessage: {\n    backgroundColor: \"gray\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","useContext","Socket","UserContext","Chat","navigation","id","socket","setSocket","messages","setMessages","text","setText","value","setValue","name","setName","ready","setReady","otherUser","setOtherUser","user","get","then","emit","msgs","length","author","profile","console","log","styles","container","topContainer","messageContainer","bottomBar","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","leftContent","rightContent","otherUserInfo","otherUserName","messageCard","borderWidth","borderColor","myMessage","backgroundColor","otherMessage"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/chat/chat.tsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { Button, StatusBar, StyleSheet, View } from \"react-native\";\nimport { AntDesign, Ionicons, Feather, FontAwesome } from \"@expo/vector-icons\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport Socket from \"../../src/utils/socket\";\nimport { UserContext } from \"../../src/contexts/user\";\n\nexport default function Chat({ navigation, id }: RootStackScreenProps<\"Chat\">) {\n  const [socket, setSocket] = useState();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [ready, setReady] = useState(false);\n  const [otherUser, setOtherUser] = useState();\n\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    if (user.id) {\n      new Socket().get().then((socket) => {\n        socket.emit(\"getMessages\", (msgs) => {\n          if (msgs.length) {\n            setMessages(msgs);\n            setOtherUser(msgs[0].author);\n          } else {\n            setMessages([\n              {\n                text: \"Welcome to halk!\",\n                author: {\n                  id: \"0\",\n                },\n              },\n            ]);\n\n            setOtherUser({\n              id: \"0\",\n              profile: {},\n            });\n          }\n        });\n      });\n    }\n\n    console.log(navigation, id);\n  }, [user]);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.topContainer}></View>\n\n      <View style={styles.messageContainer}></View>\n\n      <View style={styles.bottomBar}></View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n  },\n  topContainer: {},\n  leftContent: {},\n  rightContent: {},\n  otherUserInfo: {},\n  otherUserName: {},\n  messageContainer: {},\n  bottomBar: {},\n  messageCard: {\n    borderWidth: 1,\n    borderColor: \"#222\",\n  },\n  myMessage: {\n    backgroundColor: \"blue\",\n  },\n  otherMessage: {\n    backgroundColor: \"gray\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}