{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport NewChatButton from \"../../src/components/newChat\";\nimport Socket, { CreateSocketConnection } from \"../../src/utils/socket\";\nimport ChatContainer from \"../../src/components/chatContainer\";\nimport { getColors } from \"../../constants/Colors\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Chats(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      logged = _useContext.logged;\n\n  var _useContext2 = useContext(ChatsContext),\n      chats = _useContext2.chats,\n      updateChats = _useContext2.updateChats;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      removedChat = _useState2[0],\n      setRemovedChat = _useState2[1];\n\n  var socket = CreateSocketConnection({\n    userId: user.id\n  });\n  var colors = getColors();\n  useEffect(function () {\n    socket.on(\"newChat\", function (_ref2) {\n      var newChat = _ref2.newChat;\n\n      if (newChat) {\n        chats.push(newChat);\n        updateChats({\n          chats: chats\n        });\n      }\n    });\n    socket.on(\"receiveMessage\", function (msg) {\n      if (msg) {\n        var thisChat = chats.filter(function (c) {\n          return c.user.id === msg.author.id;\n        })[0];\n\n        if (thisChat) {\n          if (thisChat.messages.some(function (m) {\n            return m.id === msg.id;\n          })) return;\n          thisChat.messages.push(msg);\n          updateChats({\n            chats: chats\n          });\n        } else {\n          var newChat = {\n            id: msg.chat.id,\n            key: msg.chat.key,\n            user: msg.user,\n            messages: [msg]\n          };\n          chats.push(newChat);\n          updateChats({\n            chats: chats\n          });\n        }\n      }\n    });\n    socket.on(\"readMessage\", function (p) {\n      var thisChat = chats.filter(function (c) {\n        return c.id === p.chat;\n      })[0];\n\n      if (thisChat) {\n        thisChat.messages.filter(function (m) {\n          return !m.read;\n        }).map(function (m) {\n          return m.read = true;\n        });\n        updateChats({\n          chats: chats\n        });\n      }\n    });\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [!logged ? _jsx(_Fragment, {\n      children: navigation.navigate(\"Welcome\")\n    }) : _jsx(ScrollView, {\n      style: {\n        padding: 5\n      },\n      showsVerticalScrollIndicator: false,\n      showsHorizontalScrollIndicator: false,\n      children: !chats.length ? _jsx(ChatContainer, {\n        chat: new Socket.sendHalkMessage(),\n        user: user,\n        chats: chats,\n        navigation: navigation,\n        socket: socket,\n        colors: colors\n      }) : _jsx(_Fragment, {\n        children: chats.map(function (chat, index) {\n          return _createElement(ChatContainer, {\n            user: user,\n            chats: chats,\n            updateChats: updateChats,\n            chat: chat,\n            navigation: navigation,\n            socket: socket,\n            colors: colors,\n            key: index\n          });\n        })\n      })\n    }), _jsx(NewChatButton, {\n      navigation: navigation\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","useContext","useEffect","UserContext","ChatsContext","NewChatButton","Socket","CreateSocketConnection","ChatContainer","getColors","Chats","navigation","user","logged","chats","updateChats","useState","removedChat","setRemovedChat","socket","userId","id","colors","on","newChat","push","msg","thisChat","filter","c","author","messages","some","m","chat","key","p","read","map","styles","container","navigate","padding","length","sendHalkMessage","index","StyleSheet","create","flex"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/app/chats.tsx"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { View, StyleSheet, ScrollView } from \"react-native\";\nimport { RootTabScreenProps } from \"../../types\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport NewChatButton from \"../../src/components/newChat\";\nimport Socket, { CreateSocketConnection } from \"../../src/utils/socket\";\nimport ChatContainer from \"../../src/components/chatContainer\";\nimport { getColors } from \"../../constants/Colors\";\n\nexport default function Chats({ navigation }: RootTabScreenProps<\"Chats\">) {\n  const { user, logged } = useContext(UserContext);\n  const { chats, updateChats } = useContext(ChatsContext);\n  const [removedChat, setRemovedChat] = useState();\n  const socket = CreateSocketConnection({ userId: user.id });\n  const colors = getColors();\n\n  useEffect(() => {\n    socket.on(\"newChat\", ({ newChat }) => {\n      if (newChat) {\n        chats.push(newChat);\n        updateChats({ chats });\n      }\n    });\n\n    socket.on(\"receiveMessage\", (msg) => {\n      if (msg) {\n        const thisChat = chats.filter((c) => c.user.id === msg.author.id)[0];\n        if (thisChat) {\n          if (thisChat.messages.some((m) => m.id === msg.id)) return;\n          thisChat.messages.push(msg);\n          updateChats({ chats });\n        } else {\n          const newChat = {\n            id: msg.chat.id,\n            key: msg.chat.key,\n            user: msg.user,\n            messages: [msg],\n          };\n\n          chats.push(newChat);\n          updateChats({ chats });\n        }\n      }\n    });\n\n    socket.on(\"readMessage\", (p) => {\n      const thisChat = chats.filter((c) => c.id === p.chat)[0];\n      if (thisChat) {\n        thisChat.messages.filter((m) => !m.read).map((m) => (m.read = true));\n        updateChats({ chats });\n      }\n    });\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      {!logged ? (\n        <>{navigation.navigate(\"Welcome\")}</>\n      ) : (\n        <ScrollView\n          style={{ padding: 5 }}\n          showsVerticalScrollIndicator={false}\n          showsHorizontalScrollIndicator={false}\n        >\n          {!chats.length ? (\n            <ChatContainer\n              chat={new Socket.sendHalkMessage()}\n              {...{ user, chats, navigation, socket, colors }}\n            />\n          ) : (\n            <>\n              {chats.map((chat, index) => (\n                <ChatContainer\n                  {...{ user, chats, updateChats, chat, navigation, socket, colors }}\n                  key={index}\n                />\n              ))}\n            </>\n          )}\n        </ScrollView>\n      )}\n      <NewChatButton navigation={navigation} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;;;;AAGA,SAASC,WAAT;AACA,SAASC,YAAT;AACA,OAAOC,aAAP;AACA,OAAOC,MAAP,IAAiBC,sBAAjB;AACA,OAAOC,aAAP;AACA,SAASC,SAAT;;;;;AAEA,eAAe,SAASC,KAAT,OAA4D;EAAA,IAA3CC,UAA2C,QAA3CA,UAA2C;;EACzE,kBAAyBV,UAAU,CAACE,WAAD,CAAnC;EAAA,IAAQS,IAAR,eAAQA,IAAR;EAAA,IAAcC,MAAd,eAAcA,MAAd;;EACA,mBAA+BZ,UAAU,CAACG,YAAD,CAAzC;EAAA,IAAQU,KAAR,gBAAQA,KAAR;EAAA,IAAeC,WAAf,gBAAeA,WAAf;;EACA,gBAAsCC,QAAQ,EAA9C;EAAA;EAAA,IAAOC,WAAP;EAAA,IAAoBC,cAApB;;EACA,IAAMC,MAAM,GAAGZ,sBAAsB,CAAC;IAAEa,MAAM,EAAER,IAAI,CAACS;EAAf,CAAD,CAArC;EACA,IAAMC,MAAM,GAAGb,SAAS,EAAxB;EAEAP,SAAS,CAAC,YAAM;IACdiB,MAAM,CAACI,EAAP,CAAU,SAAV,EAAqB,iBAAiB;MAAA,IAAdC,OAAc,SAAdA,OAAc;;MACpC,IAAIA,OAAJ,EAAa;QACXV,KAAK,CAACW,IAAN,CAAWD,OAAX;QACAT,WAAW,CAAC;UAAED,KAAK,EAALA;QAAF,CAAD,CAAX;MACD;IACF,CALD;IAOAK,MAAM,CAACI,EAAP,CAAU,gBAAV,EAA4B,UAACG,GAAD,EAAS;MACnC,IAAIA,GAAJ,EAAS;QACP,IAAMC,QAAQ,GAAGb,KAAK,CAACc,MAAN,CAAa,UAACC,CAAD;UAAA,OAAOA,CAAC,CAACjB,IAAF,CAAOS,EAAP,KAAcK,GAAG,CAACI,MAAJ,CAAWT,EAAhC;QAAA,CAAb,EAAiD,CAAjD,CAAjB;;QACA,IAAIM,QAAJ,EAAc;UACZ,IAAIA,QAAQ,CAACI,QAAT,CAAkBC,IAAlB,CAAuB,UAACC,CAAD;YAAA,OAAOA,CAAC,CAACZ,EAAF,KAASK,GAAG,CAACL,EAApB;UAAA,CAAvB,CAAJ,EAAoD;UACpDM,QAAQ,CAACI,QAAT,CAAkBN,IAAlB,CAAuBC,GAAvB;UACAX,WAAW,CAAC;YAAED,KAAK,EAALA;UAAF,CAAD,CAAX;QACD,CAJD,MAIO;UACL,IAAMU,OAAO,GAAG;YACdH,EAAE,EAAEK,GAAG,CAACQ,IAAJ,CAASb,EADC;YAEdc,GAAG,EAAET,GAAG,CAACQ,IAAJ,CAASC,GAFA;YAGdvB,IAAI,EAAEc,GAAG,CAACd,IAHI;YAIdmB,QAAQ,EAAE,CAACL,GAAD;UAJI,CAAhB;UAOAZ,KAAK,CAACW,IAAN,CAAWD,OAAX;UACAT,WAAW,CAAC;YAAED,KAAK,EAALA;UAAF,CAAD,CAAX;QACD;MACF;IACF,CAnBD;IAqBAK,MAAM,CAACI,EAAP,CAAU,aAAV,EAAyB,UAACa,CAAD,EAAO;MAC9B,IAAMT,QAAQ,GAAGb,KAAK,CAACc,MAAN,CAAa,UAACC,CAAD;QAAA,OAAOA,CAAC,CAACR,EAAF,KAASe,CAAC,CAACF,IAAlB;MAAA,CAAb,EAAqC,CAArC,CAAjB;;MACA,IAAIP,QAAJ,EAAc;QACZA,QAAQ,CAACI,QAAT,CAAkBH,MAAlB,CAAyB,UAACK,CAAD;UAAA,OAAO,CAACA,CAAC,CAACI,IAAV;QAAA,CAAzB,EAAyCC,GAAzC,CAA6C,UAACL,CAAD;UAAA,OAAQA,CAAC,CAACI,IAAF,GAAS,IAAjB;QAAA,CAA7C;QACAtB,WAAW,CAAC;UAAED,KAAK,EAALA;QAAF,CAAD,CAAX;MACD;IACF,CAND;EAOD,CApCQ,EAoCN,EApCM,CAAT;EAsCA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEyB,MAAM,CAACC,SAApB;IAAA,WACG,CAAC3B,MAAD,GACC;MAAA,UAAGF,UAAU,CAAC8B,QAAX,CAAoB,SAApB;IAAH,EADD,GAGC,KAAC,UAAD;MACE,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAX,CADT;MAEE,4BAA4B,EAAE,KAFhC;MAGE,8BAA8B,EAAE,KAHlC;MAAA,UAKG,CAAC5B,KAAK,CAAC6B,MAAP,GACC,KAAC,aAAD;QACE,IAAI,EAAE,IAAIrC,MAAM,CAACsC,eAAX,EADR;QAEQhC,IAAI,EAAJA,IAFR;QAEcE,KAAK,EAALA,KAFd;QAEqBH,UAAU,EAAVA,UAFrB;QAEiCQ,MAAM,EAANA,MAFjC;QAEyCG,MAAM,EAANA;MAFzC,EADD,GAMC;QAAA,UACGR,KAAK,CAACwB,GAAN,CAAU,UAACJ,IAAD,EAAOW,KAAP;UAAA,OACT,eAAC,aAAD;YACQjC,IAAI,EAAJA,IADR;YACcE,KAAK,EAALA,KADd;YACqBC,WAAW,EAAXA,WADrB;YACkCmB,IAAI,EAAJA,IADlC;YACwCvB,UAAU,EAAVA,UADxC;YACoDQ,MAAM,EAANA,MADpD;YAC4DG,MAAM,EAANA,MAD5D;YAEE,GAAG,EAAEuB;UAFP,EADS;QAAA,CAAV;MADH;IAXJ,EAJJ,EA0BE,KAAC,aAAD;MAAe,UAAU,EAAElC;IAA3B,EA1BF;EAAA,EADF;AA8BD;AAED,IAAM4B,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE;EADG;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}