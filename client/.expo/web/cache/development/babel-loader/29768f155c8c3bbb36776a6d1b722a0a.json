{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { AntDesign, Ionicons, Feather, FontAwesome, MaterialIcons, Fontisto } from \"@expo/vector-icons\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport Socket from \"../../src/utils/socket\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Chat(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      chat = _useState2[0],\n      setChat = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      socket = _useState4[0],\n      setSocket = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messages = _useState6[0],\n      setMessages = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      text = _useState8[0],\n      setText = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      value = _useState10[0],\n      setValue = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      name = _useState12[0],\n      setName = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      ready = _useState14[0],\n      setReady = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      otherUser = _useState16[0],\n      setOtherUser = _useState16[1];\n\n  var scrollViewRef = useRef();\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var _useContext2 = useContext(ChatsContext),\n      chats = _useContext2.chats;\n\n  useEffect(function () {\n    var chatId = route.params.id;\n\n    if (chatId) {\n      if (chatId === \"0\" || !chats.length) {\n        new Socket().sendHalkMessage().then(function (newChat) {\n          setChat(newChat);\n        });\n      } else {\n        var thisChat = chats.filter(function (c) {\n          return c.id === chatId;\n        });\n\n        if (thisChat) {\n          setChat(thisChat);\n        } else navigation.navigate(\"Root\");\n      }\n    } else navigation.navigate(\"Root\");\n  }, [user]);\n  useEffect(function () {\n    return console.log(chat);\n  }, [chat]);\n  return _jsx(View, {\n    style: styles.container,\n    children: !chat ? _jsx(_Fragment, {}) : _jsxs(_Fragment, {\n      children: [_jsxs(View, {\n        style: styles.topContainer,\n        children: [_jsxs(View, {\n          style: styles.topContainerLeft,\n          children: [_jsx(Pressable, {\n            style: function style(_ref2) {\n              var pressed = _ref2.pressed;\n              return [styles.backButton, {\n                backgroundColor: pressed ? \"#333\" : \"transparent\"\n              }];\n            },\n            onPress: function onPress() {\n              return navigation.navigate(\"Root\");\n            },\n            children: _jsx(AntDesign, {\n              name: \"arrowleft\",\n              size: 25,\n              color: \"white\"\n            })\n          }), _jsxs(Pressable, {\n            onPress: function onPress() {},\n            style: styles.userProfile,\n            children: [_jsx(Image, {\n              source: chat.user.profile.avatar ? {\n                uri: chat.user.profile.avatar\n              } : require(\"../../assets/images/userIcon.png\"),\n              style: styles.userIcon\n            }), _jsx(Text, {\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: chat.user.profile.name\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.topContainerRight,\n          children: [_jsx(Pressable, {\n            style: function style(_ref3) {\n              var pressed = _ref3.pressed;\n              return [styles.backButton, {\n                backgroundColor: pressed ? \"#333\" : \"transparent\"\n              }];\n            },\n            onPress: function onPress() {},\n            children: _jsx(Ionicons, {\n              name: \"call\",\n              size: 24,\n              color: \"white\"\n            })\n          }), _jsx(Pressable, {\n            style: function style(_ref4) {\n              var pressed = _ref4.pressed;\n              return [styles.backButton, {\n                backgroundColor: pressed ? \"#333\" : \"transparent\"\n              }];\n            },\n            onPress: function onPress() {},\n            children: _jsx(FontAwesome, {\n              name: \"video-camera\",\n              size: 24,\n              color: \"white\"\n            })\n          }), _jsx(Pressable, {\n            style: function style(_ref5) {\n              var pressed = _ref5.pressed;\n              return [styles.backButton, {\n                backgroundColor: pressed ? \"#333\" : \"transparent\"\n              }];\n            },\n            onPress: function onPress() {},\n            children: _jsx(Feather, {\n              name: \"more-vertical\",\n              size: 24,\n              color: \"white\"\n            })\n          })]\n        })]\n      }), _jsx(ScrollView, {\n        style: styles.messageContainer,\n        ref: scrollViewRef,\n        onContentSizeChange: function onContentSizeChange() {\n          return scrollViewRef.current.scrollToEnd({\n            animated: true\n          });\n        },\n        children: chat.messages.map(function (message, index) {\n          var itsMyMessage = message.author.id === user.id ? true : false;\n          return _jsx(View, {\n            style: itsMyMessage ? styles.myMessage : styles.otherMessage,\n            children: _jsxs(Pressable, {\n              style: [itsMyMessage ? {\n                backgroundColor: \"blue\",\n                maxWidth: \"85%\"\n              } : {\n                backgroundColor: \"gray\"\n              }, styles.message],\n              onPress: function onPress() {\n                return alert(JSON.stringify(message));\n              },\n              children: [_jsx(Text, {\n                style: {\n                  maxWidth: \"85%\"\n                },\n                children: message.content\n              }), _jsx(Text, {\n                style: styles.messageCreatedAt,\n                children: message.createdAt\n              })]\n            })\n          }, index);\n        })\n      }), _jsxs(View, {\n        style: styles.bottomContainer,\n        children: [_jsx(Pressable, {\n          style: function style(_ref6) {\n            var pressed = _ref6.pressed;\n            return [styles.openCamera, {\n              opacity: pressed ? 0.5 : 1\n            }];\n          },\n          onPress: function onPress() {},\n          children: _jsx(Fontisto, {\n            name: \"camera\",\n            size: 18,\n            color: \"white\"\n          })\n        }), _jsx(TextInput, {\n          style: styles.inputMessage,\n          placeholder: \"Mensagem...\"\n        }), _jsxs(View, {\n          style: styles.othersMedias,\n          children: [_jsx(Pressable, {\n            style: function style(_ref7) {\n              var pressed = _ref7.pressed;\n              return [{\n                marginRight: 5\n              }, {\n                opacity: pressed ? 0.5 : 1\n              }];\n            },\n            onPress: function onPress() {},\n            children: _jsx(MaterialIcons, {\n              name: \"keyboard-voice\",\n              size: 24,\n              color: \"white\"\n            })\n          }), _jsx(Pressable, {\n            style: function style(_ref8) {\n              var pressed = _ref8.pressed;\n              return [{\n                opacity: pressed ? 0.5 : 1\n              }];\n            },\n            onPress: function onPress() {},\n            children: _jsx(Ionicons, {\n              name: \"ios-add-circle-outline\",\n              size: 24,\n              color: \"white\"\n            })\n          })]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight\n  },\n  topContainer: {\n    backgroundColor: \"#222\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 5,\n    justifyContent: \"space-between\"\n  },\n  topContainerLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  topContainerRight: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  otherUserInfo: {},\n  otherUserName: {},\n  messageContainer: {\n    flex: 1,\n    marginHorizontal: 10,\n    flexDirection: \"column-reverse\",\n    marginBottom: 50\n  },\n  bottomContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    bottom: 0,\n    backgroundColor: \"#222\",\n    padding: 5,\n    borderRadius: 50,\n    margin: 10\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: \"#222\"\n  },\n  myMessage: {\n    justifyContent: \"flex-end\",\n    flexDirection: \"revert\"\n  },\n  otherMessage: {\n    width: \"fit-content\",\n    maxWidth: \"85%\"\n  },\n  userIcon: {\n    width: 40,\n    height: 40,\n    borderRadius: 100,\n    marginHorizontal: 5\n  },\n  userProfile: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  backButton: {\n    padding: 5,\n    borderRadius: 100\n  },\n  openCamera: {\n    backgroundColor: \"#2f95dc\",\n    padding: 5,\n    borderRadius: 100,\n    marginRight: 10\n  },\n  othersMedias: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  inputMessage: {},\n  message: {\n    padding: 7,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    marginBottom: 10,\n    alignItems: \"flex-end\",\n    flexWrap: \"wrap\"\n  },\n  messageCreatedAt: {\n    fontSize: 10,\n    marginLeft: 5\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","useContext","useRef","AntDesign","Ionicons","Feather","FontAwesome","MaterialIcons","Fontisto","TextInput","Text","UserContext","ChatsContext","Socket","Chat","navigation","route","chat","setChat","socket","setSocket","messages","setMessages","text","setText","value","setValue","name","setName","ready","setReady","otherUser","setOtherUser","scrollViewRef","user","chats","chatId","params","id","length","sendHalkMessage","then","newChat","thisChat","filter","c","navigate","console","log","styles","container","topContainer","topContainerLeft","pressed","backButton","backgroundColor","userProfile","profile","avatar","uri","require","userIcon","fontWeight","topContainerRight","messageContainer","current","scrollToEnd","animated","map","message","index","itsMyMessage","author","myMessage","otherMessage","maxWidth","alert","JSON","stringify","content","messageCreatedAt","createdAt","bottomContainer","openCamera","opacity","inputMessage","othersMedias","marginRight","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","flexDirection","alignItems","padding","justifyContent","otherUserInfo","otherUserName","marginHorizontal","marginBottom","position","bottom","borderRadius","margin","messageCard","borderWidth","borderColor","width","height","flexWrap","fontSize","marginLeft"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/chat/chat.tsx"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport {\n  Button,\n  StatusBar,\n  StyleSheet,\n  View,\n  Image,\n  Pressable,\n  ScrollView,\n} from \"react-native\";\nimport {\n  AntDesign,\n  Ionicons,\n  Feather,\n  FontAwesome,\n  MaterialIcons,\n  Fontisto,\n} from \"@expo/vector-icons\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport Socket from \"../../src/utils/socket\";\n\nexport default function Chat({\n  navigation,\n  route,\n}: RootStackScreenProps<\"Chat\">) {\n  const [chat, setChat] = useState();\n  const [socket, setSocket] = useState();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [ready, setReady] = useState(false);\n  const [otherUser, setOtherUser] = useState();\n\n  const scrollViewRef = useRef();\n\n  const { user } = useContext(UserContext);\n  const { chats } = useContext(ChatsContext);\n\n  useEffect(() => {\n    const chatId = route.params.id;\n\n    if (chatId) {\n      if (chatId === \"0\" || !chats.length) {\n        new Socket().sendHalkMessage().then((newChat) => {\n          setChat(newChat);\n        });\n      } else {\n        const thisChat = chats.filter((c) => c.id === chatId);\n        if (thisChat) {\n          setChat(thisChat);\n        } else navigation.navigate(\"Root\");\n      }\n    } else navigation.navigate(\"Root\");\n  }, [user]);\n\n  useEffect(() => console.log(chat), [chat]);\n\n  return (\n    <View style={styles.container}>\n      {!chat ? (\n        <></>\n      ) : (\n        <>\n          <View style={styles.topContainer}>\n            <View style={styles.topContainerLeft}>\n              <Pressable\n                style={({ pressed }) => [\n                  styles.backButton,\n                  { backgroundColor: pressed ? \"#333\" : \"transparent\" },\n                ]}\n                onPress={() => navigation.navigate(\"Root\")}\n              >\n                <AntDesign name=\"arrowleft\" size={25} color=\"white\" />\n              </Pressable>\n\n              <Pressable onPress={() => {}} style={styles.userProfile}>\n                <Image\n                  source={\n                    chat.user.profile.avatar\n                      ? { uri: chat.user.profile.avatar }\n                      : require(\"../../assets/images/userIcon.png\")\n                  }\n                  style={styles.userIcon}\n                />\n                <Text style={{ fontWeight: \"bold\" }}>\n                  {chat.user.profile.name}\n                </Text>\n              </Pressable>\n            </View>\n\n            <View style={styles.topContainerRight}>\n              <Pressable\n                style={({ pressed }) => [\n                  styles.backButton,\n                  { backgroundColor: pressed ? \"#333\" : \"transparent\" },\n                ]}\n                onPress={() => {}}\n              >\n                <Ionicons name=\"call\" size={24} color=\"white\" />\n              </Pressable>\n              <Pressable\n                style={({ pressed }) => [\n                  styles.backButton,\n                  { backgroundColor: pressed ? \"#333\" : \"transparent\" },\n                ]}\n                onPress={() => {}}\n              >\n                <FontAwesome name=\"video-camera\" size={24} color=\"white\" />\n              </Pressable>\n              <Pressable\n                style={({ pressed }) => [\n                  styles.backButton,\n                  { backgroundColor: pressed ? \"#333\" : \"transparent\" },\n                ]}\n                onPress={() => {}}\n              >\n                <Feather name=\"more-vertical\" size={24} color=\"white\" />\n              </Pressable>\n            </View>\n          </View>\n\n          <ScrollView\n            style={styles.messageContainer}\n            ref={scrollViewRef}\n            onContentSizeChange={() =>\n              scrollViewRef.current.scrollToEnd({ animated: true })\n            }\n          >\n            {chat.messages.map((message, index) => {\n              const itsMyMessage = message.author.id === user.id ? true : false;\n\n              return (\n                <View\n                  style={itsMyMessage ? styles.myMessage : styles.otherMessage}\n                  key={index}\n                >\n                  <Pressable\n                    style={[\n                      itsMyMessage\n                        ? { backgroundColor: \"blue\", maxWidth: \"85%\" }\n                        : { backgroundColor: \"gray\" },\n                      styles.message,\n                    ]}\n                    onPress={() => alert(JSON.stringify(message))}\n                  >\n                    <Text style={{ maxWidth: \"85%\" }}>{message.content}</Text>\n                    <Text style={styles.messageCreatedAt}>\n                      {message.createdAt}\n                    </Text>\n                  </Pressable>\n                </View>\n              );\n            })}\n          </ScrollView>\n\n          <View style={styles.bottomContainer}>\n            <Pressable\n              style={({ pressed }) => [\n                styles.openCamera,\n                { opacity: pressed ? 0.5 : 1 },\n              ]}\n              onPress={() => {}}\n            >\n              <Fontisto name=\"camera\" size={18} color=\"white\" />\n            </Pressable>\n            <TextInput style={styles.inputMessage} placeholder=\"Mensagem...\" />\n            <View style={styles.othersMedias}>\n              <Pressable\n                style={({ pressed }) => [\n                  { marginRight: 5 },\n                  { opacity: pressed ? 0.5 : 1 },\n                ]}\n                onPress={() => {}}\n              >\n                <MaterialIcons name=\"keyboard-voice\" size={24} color=\"white\" />\n              </Pressable>\n              <Pressable\n                style={({ pressed }) => [{ opacity: pressed ? 0.5 : 1 }]}\n                onPress={() => {}}\n              >\n                <Ionicons\n                  name=\"ios-add-circle-outline\"\n                  size={24}\n                  color=\"white\"\n                />\n              </Pressable>\n            </View>\n          </View>\n        </>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n  },\n  topContainer: {\n    backgroundColor: \"#222\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 5,\n    justifyContent: \"space-between\",\n  },\n  topContainerLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  topContainerRight: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  otherUserInfo: {},\n  otherUserName: {},\n  messageContainer: {\n    flex: 1,\n    marginHorizontal: 10,\n    flexDirection: \"column-reverse\",\n    marginBottom: 50,\n  },\n  bottomContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    bottom: 0,\n    backgroundColor: \"#222\",\n    padding: 5,\n    borderRadius: 50,\n    margin: 10,\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: \"#222\",\n  },\n  myMessage: {\n    justifyContent: \"flex-end\",\n    flexDirection: \"revert\",\n  },\n  otherMessage: {\n    width: \"fit-content\",\n    maxWidth: \"85%\",\n  },\n  userIcon: {\n    width: 40,\n    height: 40,\n    borderRadius: 100,\n    marginHorizontal: 5,\n  },\n  userProfile: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  backButton: {\n    padding: 5,\n    borderRadius: 100,\n  },\n  openCamera: {\n    backgroundColor: \"#2f95dc\",\n    padding: 5,\n    borderRadius: 100,\n    marginRight: 10,\n  },\n  othersMedias: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  inputMessage: {},\n  message: {\n    padding: 7,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    marginBottom: 10,\n    alignItems: \"flex-end\",\n    flexWrap: \"wrap\",\n  },\n  messageCreatedAt: {\n    fontSize: 10,\n    marginLeft: 5,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}