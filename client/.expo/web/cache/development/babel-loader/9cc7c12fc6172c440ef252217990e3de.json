{"ast":null,"code":"import React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport { useTheme } from \"./CountryTheme\";\nvar styles = StyleSheet.create({\n  container: {\n    height: 48,\n    width: '15%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  imageStyle: {\n    height: 25,\n    width: 25,\n    resizeMode: 'contain'\n  }\n});\nvar CloseButtonAndroid = function CloseButtonAndroid(props) {\n  var closeImage = require(\"./assets/images/close.android.png\");\n  if (props.image) {\n    closeImage = props.image;\n  }\n  var _useTheme = useTheme(),\n    onBackgroundTextColor = _useTheme.onBackgroundTextColor;\n  return React.createElement(View, {\n    style: [styles.container, props.style]\n  }, React.createElement(TouchableNativeFeedback, {\n    background: Platform.Version < 21 ? TouchableNativeFeedback.SelectableBackground() : TouchableNativeFeedback.SelectableBackgroundBorderless(),\n    onPress: props.onPress\n  }, React.createElement(View, null, React.createElement(Image, {\n    source: closeImage,\n    style: [styles.imageStyle, props.imageStyle, {\n      tintColor: onBackgroundTextColor\n    }]\n  }))));\n};\nvar CloseButtonIOS = function CloseButtonIOS(props) {\n  var closeImage = require(\"./assets/images/close.ios.png\");\n  if (props.image) {\n    closeImage = props.image;\n  }\n  var _useTheme2 = useTheme(),\n    onBackgroundTextColor = _useTheme2.onBackgroundTextColor;\n  return React.createElement(View, {\n    style: [styles.container, props.style]\n  }, React.createElement(TouchableOpacity, {\n    onPress: props.onPress\n  }, React.createElement(Image, {\n    source: closeImage,\n    style: [styles.imageStyle, props.imageStyle, {\n      tintColor: onBackgroundTextColor\n    }]\n  })));\n};\nvar propTypes = {\n  onPress: PropTypes.func,\n  image: PropTypes.any\n};\nCloseButtonIOS.prototype = propTypes;\nCloseButtonAndroid.prototype = propTypes;\nexport default Platform.select({\n  ios: CloseButtonIOS,\n  android: CloseButtonAndroid,\n  web: CloseButtonIOS\n});","map":{"version":3,"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAazB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ;AAEjB,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,KAAK;IACZC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;GACjB;EACDC,UAAU,EAAE;IACVJ,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTI,UAAU,EAAE;;CAEf,CAAC;AASF,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIC,KAAuB,EAAI;EACrD,IAAIC,UAAU,GAAGC,OAAO,qCAAqC;EAE7D,IAAIF,KAAK,CAACG,KAAK,EAAE;IACfF,UAAU,GAAGD,KAAK,CAACG,KAAK;;EAE1B,gBAAkCf,QAAQ,EAAE;IAApCgB,qBAAqB,aAArBA,qBAAqB;EAC7B,OACElB,oBAACmB,IAAI;IAACC,KAAK,EAAE,CAACjB,MAAM,CAACG,SAAS,EAAEQ,KAAK,CAACM,KAAK;EAAC,GAC1CpB,oBAACqB,uBAAuB;IACtBC,UAAU,EACRC,QAAQ,CAACC,OAAO,GAAG,EAAE,GACjBH,uBAAuB,CAACI,oBAAoB,EAAE,GAC9CJ,uBAAuB,CAACK,8BAA8B,EAAE;IAE9DC,OAAO,EAAEb,KAAK,CAACa;EAAO,GAEtB3B,oBAACmB,IAAI,QACHnB,oBAAC4B,KAAK;IACJC,MAAM,EAAEd,UAAU;IAClBK,KAAK,EAAE,CACLjB,MAAM,CAACQ,UAAU,EACjBG,KAAK,CAACH,UAAU,EAChB;MAAEmB,SAAS,EAAEZ;IAAqB,CAAE;EACrC,EACD,CACG,CACiB,CACrB;AAEX,CAAC;AAED,IAAMa,cAAc,GAAG,SAAjBA,cAAc,CAAIjB,KAAuB,EAAI;EACjD,IAAIC,UAAU,GAAGC,OAAO,iCAAiC;EAEzD,IAAIF,KAAK,CAACG,KAAK,EAAE;IACfF,UAAU,GAAGD,KAAK,CAACG,KAAK;;EAE1B,iBAAkCf,QAAQ,EAAE;IAApCgB,qBAAqB,cAArBA,qBAAqB;EAC7B,OACElB,oBAACmB,IAAI;IAACC,KAAK,EAAE,CAACjB,MAAM,CAACG,SAAS,EAAEQ,KAAK,CAACM,KAAK;EAAC,GAC1CpB,oBAACgC,gBAAgB;IAACL,OAAO,EAAEb,KAAK,CAACa;EAAO,GACtC3B,oBAAC4B,KAAK;IACJC,MAAM,EAAEd,UAAU;IAClBK,KAAK,EAAE,CACLjB,MAAM,CAACQ,UAAU,EACjBG,KAAK,CAACH,UAAU,EAChB;MAAEmB,SAAS,EAAEZ;IAAqB,CAAE;EACrC,EACD,CACe,CACd;AAEX,CAAC;AAED,IAAMe,SAAS,GAAG;EAChBN,OAAO,EAAE1B,SAAS,CAACiC,IAAI;EACvBjB,KAAK,EAAEhB,SAAS,CAACkC;CAClB;AACDJ,cAAc,CAACK,SAAS,GAAGH,SAAS;AACpCpB,kBAAkB,CAACuB,SAAS,GAAGH,SAAS;AAExC,eAAeV,QAAQ,CAACc,MAAM,CAAC;EAC7BC,GAAG,EAAEP,cAAc;EACnBQ,OAAO,EAAE1B,kBAAkB;EAC3B2B,GAAG,EAAET;CACN,CAAC","names":["React","PropTypes","useTheme","styles","StyleSheet","create","container","height","width","alignItems","justifyContent","imageStyle","resizeMode","CloseButtonAndroid","props","closeImage","require","image","onBackgroundTextColor","View","style","TouchableNativeFeedback","background","Platform","Version","SelectableBackground","SelectableBackgroundBorderless","onPress","Image","source","tintColor","CloseButtonIOS","TouchableOpacity","propTypes","func","any","prototype","select","ios","android","web"],"sourceRoot":"","sources":["../src/CloseButton.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}