{"ast":null,"code":"import React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PropTypes from 'prop-types';\nimport { useTheme } from \"./CountryTheme\";\nvar styles = StyleSheet.create({\n  container: {\n    height: 48,\n    width: '15%',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  imageStyle: {\n    height: 25,\n    width: 25,\n    resizeMode: 'contain'\n  }\n});\n\nvar CloseButtonAndroid = function CloseButtonAndroid(props) {\n  var closeImage = require(\"./assets/images/close.android.png\");\n\n  if (props.image) {\n    closeImage = props.image;\n  }\n\n  var _useTheme = useTheme(),\n      onBackgroundTextColor = _useTheme.onBackgroundTextColor;\n\n  return React.createElement(View, {\n    style: [styles.container, props.style]\n  }, React.createElement(TouchableNativeFeedback, {\n    background: Platform.Version < 21 ? TouchableNativeFeedback.SelectableBackground() : TouchableNativeFeedback.SelectableBackgroundBorderless(),\n    onPress: props.onPress\n  }, React.createElement(View, null, React.createElement(Image, {\n    source: closeImage,\n    style: [styles.imageStyle, props.imageStyle, {\n      tintColor: onBackgroundTextColor\n    }]\n  }))));\n};\n\nvar CloseButtonIOS = function CloseButtonIOS(props) {\n  var closeImage = require(\"./assets/images/close.ios.png\");\n\n  if (props.image) {\n    closeImage = props.image;\n  }\n\n  var _useTheme2 = useTheme(),\n      onBackgroundTextColor = _useTheme2.onBackgroundTextColor;\n\n  return React.createElement(View, {\n    style: [styles.container, props.style]\n  }, React.createElement(TouchableOpacity, {\n    onPress: props.onPress\n  }, React.createElement(Image, {\n    source: closeImage,\n    style: [styles.imageStyle, props.imageStyle, {\n      tintColor: onBackgroundTextColor\n    }]\n  })));\n};\n\nvar propTypes = {\n  onPress: PropTypes.func,\n  image: PropTypes.any\n};\nCloseButtonIOS.prototype = propTypes;\nCloseButtonAndroid.prototype = propTypes;\nexport default Platform.select({\n  ios: CloseButtonIOS,\n  android: CloseButtonAndroid,\n  web: CloseButtonIOS\n});","map":{"version":3,"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAaA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,MAAM,EAAE,EADC;IAETC,KAAK,EAAE,KAFE;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP,CADoB;EAO/BC,UAAU,EAAE;IACVJ,MAAM,EAAE,EADE;IAEVC,KAAK,EAAE,EAFG;IAGVI,UAAU,EAAE;EAHF;AAPmB,CAAlB,CAAf;;AAqBA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAA4B;EACrD,IAAIC,UAAU,GAAGC,OAAO,qCAAxB;;EAEA,IAAIF,KAAK,CAACG,KAAV,EAAiB;IACfF,UAAU,GAAGD,KAAK,CAACG,KAAnB;EACD;;EACD,gBAAkCf,QAAQ,EAA1C;EAAA,IAAQgB,qBAAR,aAAQA,qBAAR;;EACA,OACElB,oBAACmB,IAAD,EAAK;IAACC,KAAK,EAAE,CAACjB,MAAM,CAACG,SAAR,EAAmBQ,KAAK,CAACM,KAAzB;EAAR,CAAL,EACEpB,oBAACqB,uBAAD,EAAwB;IACtBC,UAAU,EACRC,QAAQ,CAACC,OAAT,GAAmB,EAAnB,GACIH,uBAAuB,CAACI,oBAAxB,EADJ,GAEIJ,uBAAuB,CAACK,8BAAxB,EAJgB;IAMtBC,OAAO,EAAEb,KAAK,CAACa;EANO,CAAxB,EAQE3B,oBAACmB,IAAD,EAAK,IAAL,EACEnB,oBAAC4B,KAAD,EAAM;IACJC,MAAM,EAAEd,UADJ;IAEJK,KAAK,EAAE,CACLjB,MAAM,CAACQ,UADF,EAELG,KAAK,CAACH,UAFD,EAGL;MAAEmB,SAAS,EAAEZ;IAAb,CAHK;EAFH,CAAN,CADF,CARF,CADF,CADF;AAuBD,CA9BD;;AAgCA,IAAMa,cAAc,GAAG,SAAjBA,cAAiB,CAACjB,KAAD,EAA4B;EACjD,IAAIC,UAAU,GAAGC,OAAO,iCAAxB;;EAEA,IAAIF,KAAK,CAACG,KAAV,EAAiB;IACfF,UAAU,GAAGD,KAAK,CAACG,KAAnB;EACD;;EACD,iBAAkCf,QAAQ,EAA1C;EAAA,IAAQgB,qBAAR,cAAQA,qBAAR;;EACA,OACElB,oBAACmB,IAAD,EAAK;IAACC,KAAK,EAAE,CAACjB,MAAM,CAACG,SAAR,EAAmBQ,KAAK,CAACM,KAAzB;EAAR,CAAL,EACEpB,oBAACgC,gBAAD,EAAiB;IAACL,OAAO,EAAEb,KAAK,CAACa;EAAhB,CAAjB,EACE3B,oBAAC4B,KAAD,EAAM;IACJC,MAAM,EAAEd,UADJ;IAEJK,KAAK,EAAE,CACLjB,MAAM,CAACQ,UADF,EAELG,KAAK,CAACH,UAFD,EAGL;MAAEmB,SAAS,EAAEZ;IAAb,CAHK;EAFH,CAAN,CADF,CADF,CADF;AAcD,CArBD;;AAuBA,IAAMe,SAAS,GAAG;EAChBN,OAAO,EAAE1B,SAAS,CAACiC,IADH;EAEhBjB,KAAK,EAAEhB,SAAS,CAACkC;AAFD,CAAlB;AAIAJ,cAAc,CAACK,SAAf,GAA2BH,SAA3B;AACApB,kBAAkB,CAACuB,SAAnB,GAA+BH,SAA/B;AAEA,eAAeV,QAAQ,CAACc,MAAT,CAAgB;EAC7BC,GAAG,EAAEP,cADwB;EAE7BQ,OAAO,EAAE1B,kBAFoB;EAG7B2B,GAAG,EAAET;AAHwB,CAAhB,CAAf","names":["React","PropTypes","useTheme","styles","StyleSheet","create","container","height","width","alignItems","justifyContent","imageStyle","resizeMode","CloseButtonAndroid","props","closeImage","require","image","onBackgroundTextColor","View","style","TouchableNativeFeedback","background","Platform","Version","SelectableBackground","SelectableBackgroundBorderless","onPress","Image","source","tintColor","CloseButtonIOS","TouchableOpacity","propTypes","func","any","prototype","select","ios","android","web"],"sourceRoot":"","sources":["../src/CloseButton.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}