{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text } from \"./Themed\";\nimport { isPossiblePhoneNumber, isValidPhoneNumber } from 'libphonenumber-js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function VerifyPhoneFormat(_ref) {\n  var phone = _ref.phone,\n      navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  function Verify() {\n    if (!phone || !navigation) return null;\n\n    if (isPossiblePhoneNumber(phone) && isValidPhoneNumber(phone)) {\n      return _jsx(View, {\n        style: styles.centeredView,\n        children: _jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: modalVisible,\n          onRequestClose: function onRequestClose() {\n            setModalVisible(!modalVisible);\n          },\n          children: _jsx(View, {\n            style: styles.centeredView,\n            children: _jsxs(View, {\n              style: styles.modalView,\n              children: [_jsx(Text, {\n                style: styles.modalText,\n                children: \"N\\xFAmero inval\\xEDdo, tente novamente.\"\n              }), _jsx(View, {\n                style: styles.buttonsContainer,\n                children: _jsx(Pressable, {\n                  onPress: function onPress() {\n                    return setModalVisible(!modalVisible);\n                  },\n                  children: _jsx(Text, {\n                    children: \"Ok\"\n                  })\n                })\n              })]\n            })\n          })\n        })\n      });\n    } else {\n      return _jsx(View, {\n        style: styles.centeredView,\n        children: _jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: modalVisible,\n          onRequestClose: function onRequestClose() {\n            setModalVisible(!modalVisible);\n          },\n          children: _jsx(View, {\n            style: styles.centeredView,\n            children: _jsxs(View, {\n              style: styles.modalView,\n              children: [_jsxs(Text, {\n                style: styles.modalText,\n                children: [\"Voc\\xEA confirma \", phone, \" como seu n\\xFAmero?\"]\n              }), _jsxs(View, {\n                style: styles.buttonsContainer,\n                children: [_jsx(Pressable, {\n                  children: _jsx(Text, {\n                    children: \"Cancel\"\n                  })\n                }), _jsx(Pressable, {\n                  children: _jsx(Text, {\n                    children: \"Confirmar\"\n                  })\n                })]\n              })]\n            })\n          })\n        })\n      });\n    }\n  }\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(Pressable, {\n      style: [styles.nextButton, {\n        opacity: !phone ? 0.5 : 1\n      }],\n      onPress: function onPress() {\n        return setModalVisible(modalVisible ? false : true);\n      },\n      children: _jsx(Text, {\n        children: \"Continue\"\n      })\n    }), _jsx(Verify, {})]\n  });\n}\nvar styles = StyleSheet.create({\n  nextButton: {\n    backgroundColor: \"#2f95dc\",\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    position: \"absolute\",\n    borderRadius: 100,\n    bottom: 20\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }\n});","map":{"version":3,"names":["React","useState","Text","isPossiblePhoneNumber","isValidPhoneNumber","VerifyPhoneFormat","phone","navigation","modalVisible","setModalVisible","Verify","styles","centeredView","modalView","modalText","buttonsContainer","nextButton","opacity","StyleSheet","create","backgroundColor","paddingVertical","paddingHorizontal","position","borderRadius","bottom","flex","justifyContent","alignItems","marginTop","margin","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","button","buttonOpen","buttonClose","textStyle","color","fontWeight","textAlign","marginBottom","flexDirection"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/src/components/verifyPhoneFormat.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, Modal, Pressable, StyleSheet } from \"react-native\";\nimport { Text } from \"./Themed\";\nimport {\n    isPossiblePhoneNumber,\n    isValidPhoneNumber,\n    validatePhoneNumberLength\n  } from 'libphonenumber-js'\n\nexport default function VerifyPhoneFormat({phone, navigation}:any) {\n    const [modalVisible, setModalVisible] = useState(false);\n    \n  function Verify() {\n    if(!phone || !navigation) return null;\n\n    if(isPossiblePhoneNumber(phone) && isValidPhoneNumber(phone)) {\n        return (\n            <View style={styles.centeredView}>\n              <Modal\n                animationType=\"slide\"\n                transparent={true}\n                visible={modalVisible}\n                onRequestClose={() => {\n                  setModalVisible(!modalVisible);\n                }}\n              >\n                <View style={styles.centeredView}>\n                  <View style={styles.modalView}>\n                    <Text style={styles.modalText}>Número invalído, tente novamente.</Text>\n                    <View style={styles.buttonsContainer}>\n                        <Pressable onPress={() => setModalVisible(!modalVisible)}>\n                            <Text >Ok</Text>\n                        </Pressable>\n                    </View>\n                  </View>\n                </View>\n              </Modal>\n            </View>\n          );\n    } else {\n        return (\n            <View style={styles.centeredView}>\n              <Modal\n                animationType=\"slide\"\n                transparent={true}\n                visible={modalVisible}\n                onRequestClose={() => {\n                  setModalVisible(!modalVisible);\n                }}\n              >\n                <View style={styles.centeredView}>\n                  <View style={styles.modalView}>\n                    <Text style={styles.modalText}>Você confirma {phone} como seu número?</Text>\n                    <View style={styles.buttonsContainer}>\n                        <Pressable>\n                            <Text>Cancel</Text>\n                        </Pressable>\n                        <Pressable>\n                            <Text>Confirmar</Text>\n                        </Pressable>\n                    </View>\n                  </View>\n                </View>\n              </Modal>\n            </View>\n          );\n    }\n  }\n\n  return (\n    <>\n    <Pressable\n      style={[styles.nextButton, { opacity: !phone ? 0.5 : 1 }]}\n      onPress={() => setModalVisible(modalVisible ? false : true)}>\n      <Text>Continue</Text>\n    </Pressable>\n    <Verify/>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  nextButton: {\n    backgroundColor: \"#2f95dc\",\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    position: \"absolute\",\n    borderRadius: 100,\n    bottom: 20,\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\",\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\",\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}