{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"borderRadius\", \"name\", \"email\", \"colorize\", \"source\", \"defaultSource\", \"style\", \"textStyle\", \"imageStyle\", \"badge\", \"badgeColor\", \"badgeProps\", \"badgePosition\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport md5 from 'js-md5';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Badge } from \"./Badge\";\nimport { getInitials, getStringColor, getRadius, useLayout, colorScheme } from \"./helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var Userpic = function Userpic(_ref) {\n  var _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 50 : _ref$size,\n      _ref$borderRadius = _ref.borderRadius,\n      borderRadius = _ref$borderRadius === void 0 ? '50%' : _ref$borderRadius,\n      name = _ref.name,\n      email = _ref.email,\n      _ref$colorize = _ref.colorize,\n      colorize = _ref$colorize === void 0 ? false : _ref$colorize,\n      source = _ref.source,\n      _ref$defaultSource = _ref.defaultSource,\n      defaultSource = _ref$defaultSource === void 0 ? require(\"./assets/default.png\") : _ref$defaultSource,\n      style = _ref.style,\n      textStyle = _ref.textStyle,\n      imageStyle = _ref.imageStyle,\n      badge = _ref.badge,\n      badgeColor = _ref.badgeColor,\n      badgeProps = _ref.badgeProps,\n      _ref$badgePosition = _ref.badgePosition,\n      badgePosition = _ref$badgePosition === void 0 ? 'top-right' : _ref$badgePosition,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var getImageSource = useCallback(function () {\n    if (source) {\n      return source;\n    } else if (email) {\n      var emailHash = md5(email.toLowerCase().trim());\n      var pixelSize = PixelRatio.getPixelSizeForLayoutSize(size);\n      return {\n        uri: \"https://www.gravatar.com/avatar/\" + emailHash + \"?s=\" + pixelSize + \"&d=404\"\n      };\n    }\n\n    return defaultSource;\n  }, [source, email, size, defaultSource]);\n\n  var _useLayout = useLayout({\n    height: 10\n  }),\n      _useLayout2 = _slicedToArray(_useLayout, 2),\n      badgeHeight = _useLayout2[0].height,\n      onBadgeLayout = _useLayout2[1];\n\n  var _useLayout3 = useLayout({\n    height: size\n  }),\n      _useLayout4 = _slicedToArray(_useLayout3, 2),\n      imageHeight = _useLayout4[0].height,\n      onImageLayout = _useLayout4[1];\n\n  var _useState = useState(getImageSource),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageSource = _useState2[0],\n      setImageSource = _useState2[1];\n\n  useEffect(function () {\n    setImageSource(getImageSource());\n  }, [getImageSource, setImageSource]);\n  var onError = useCallback(function () {\n    return setImageSource(defaultSource);\n  }, [defaultSource]);\n  var initials = useMemo(function () {\n    return name && imageSource === defaultSource && {\n      color: colorize ? getStringColor(name) : undefined,\n      text: getInitials(name)\n    };\n  }, [name, colorize, imageSource, defaultSource]);\n  var radius = getRadius(borderRadius, size);\n  var badgeOffset = useMemo(function () {\n    var selfOffset = badgeHeight * (0.25 + radius / (size * 2));\n    var edgeOffset = radius * (1 - Math.sin(45 * Math.PI / 180));\n    return PixelRatio.roundToNearestPixel(edgeOffset - selfOffset);\n  }, [badgeHeight, radius, size]);\n  var rootStyles = [{\n    width: size,\n    height: size,\n    borderRadius: radius\n  }, styles.root, style];\n  var content = [];\n\n  if (initials) {\n    var fontSize = PixelRatio.roundToNearestPixel(size / 2.5);\n    content.push(_jsx(Text, {\n      style: [{\n        fontSize: fontSize\n      }, styles.text, textStyle],\n      numberOfLines: 1,\n      children: initials.text\n    }, \"text\"));\n\n    if (initials.color) {\n      rootStyles.push({\n        backgroundColor: initials.color\n      });\n    }\n  } else {\n    var imageRadius = radius - (size - imageHeight) / 2;\n    content.push(_jsx(Image, {\n      style: [{\n        borderRadius: imageRadius\n      }, styles.image, imageStyle],\n      source: imageSource,\n      onLayout: onImageLayout,\n      onError: onError\n    }, \"image\"));\n  }\n\n  if (badge) {\n    var _ref2;\n\n    var _badgePosition$split = badgePosition.split('-'),\n        _badgePosition$split2 = _slicedToArray(_badgePosition$split, 2),\n        badgeY = _badgePosition$split2[0],\n        badgeX = _badgePosition$split2[1];\n\n    var badgeStyles = [(_ref2 = {}, _defineProperty(_ref2, badgeY, badgeOffset), _defineProperty(_ref2, badgeX, badgeOffset), _ref2), styles.badge, badgeProps == null ? void 0 : badgeProps.style];\n    content.push(_jsx(Badge, _objectSpread(_objectSpread({\n      value: badge,\n      color: badgeColor\n    }, badgeProps), {}, {\n      style: badgeStyles,\n      onLayout: onBadgeLayout\n    }), \"badge\"));\n  }\n\n  return _jsx(View, _objectSpread(_objectSpread({}, props), {}, {\n    style: rootStyles,\n    children: content\n  }));\n};\nvar styles = StyleSheet.create({\n  root: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colorScheme('#aeaeb2', '#636366')\n  },\n  image: {\n    width: '100%',\n    height: '100%'\n  },\n  text: {\n    fontWeight: '700',\n    fontFamily: 'System',\n    includeFontPadding: false,\n    textAlignVertical: 'center',\n    backgroundColor: 'transparent',\n    color: '#fff'\n  },\n  badge: {\n    zIndex: 1,\n    position: 'absolute',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1,\n    elevation: 1\n  }\n});","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","md5","Badge","getInitials","getStringColor","getRadius","useLayout","colorScheme","Userpic","size","borderRadius","name","email","colorize","source","defaultSource","require","style","textStyle","imageStyle","badge","badgeColor","badgeProps","badgePosition","props","getImageSource","emailHash","toLowerCase","trim","pixelSize","PixelRatio","getPixelSizeForLayoutSize","uri","height","badgeHeight","onBadgeLayout","imageHeight","onImageLayout","imageSource","setImageSource","onError","initials","color","undefined","text","radius","badgeOffset","selfOffset","edgeOffset","Math","sin","PI","roundToNearestPixel","rootStyles","width","styles","root","content","fontSize","push","backgroundColor","imageRadius","image","split","badgeY","badgeX","badgeStyles","StyleSheet","create","alignSelf","alignItems","justifyContent","fontWeight","fontFamily","includeFontPadding","textAlignVertical","zIndex","position","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/node_modules/react-native-userpic/src/Userpic.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport md5 from 'js-md5';\nimport {\n  Image,\n  ImageStyle,\n  ImageSourcePropType,\n  PixelRatio,\n  StyleSheet,\n  StyleProp,\n  Text,\n  TextStyle,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { Badge, BadgeProps } from './Badge';\nimport { getInitials, getStringColor, getRadius, useLayout, colorScheme } from './helpers';\n\nexport interface UserpicProps extends ViewProps {\n  size?: number;\n  borderRadius?: number | string;\n  name?: string;\n  email?: string;\n  colorize?: boolean;\n  source?: ImageSourcePropType;\n  defaultSource?: ImageSourcePropType;\n  style?: StyleProp<ViewStyle>;\n  textStyle?: StyleProp<TextStyle>;\n  imageStyle?: StyleProp<ImageStyle>;\n  badge?: BadgeProps['value'];\n  badgeColor?: BadgeProps['color'];\n  badgeProps?: Omit<BadgeProps, 'value' | 'color'>;\n  badgePosition?: 'top-right' | 'bottom-right' | 'bottom-left' | 'top-left';\n}\n\nexport const Userpic: React.FC<UserpicProps> = ({\n  size = 50,\n  borderRadius = '50%',\n  name,\n  email,\n  colorize = false,\n  source,\n  defaultSource = require('./assets/default.png'),\n  style,\n  textStyle,\n  imageStyle,\n  badge,\n  badgeColor,\n  badgeProps,\n  badgePosition = 'top-right',\n  ...props\n}) => {\n  const getImageSource = useCallback(() => {\n    if (source) {\n      return source;\n    } else if (email) {\n      const emailHash = md5(email.toLowerCase().trim());\n      const pixelSize = PixelRatio.getPixelSizeForLayoutSize(size);\n\n      return { uri: `https://www.gravatar.com/avatar/${emailHash}?s=${pixelSize}&d=404` };\n    }\n\n    return defaultSource;\n  }, [source, email, size, defaultSource]);\n\n  const [{ height: badgeHeight }, onBadgeLayout] = useLayout({ height: 10 });\n  const [{ height: imageHeight }, onImageLayout] = useLayout({ height: size });\n  const [imageSource, setImageSource] = useState(getImageSource);\n\n  useEffect(() => {\n    setImageSource(getImageSource());\n  }, [getImageSource, setImageSource]);\n\n  const onError = useCallback(() => setImageSource(defaultSource), [defaultSource]);\n\n  const initials = useMemo(\n    () =>\n      name &&\n      imageSource === defaultSource && {\n        color: colorize ? getStringColor(name) : undefined,\n        text: getInitials(name),\n      },\n    [name, colorize, imageSource, defaultSource],\n  );\n\n  const radius = getRadius(borderRadius, size);\n\n  const badgeOffset = useMemo(() => {\n    // We want to place the badge at the point with polar coordinates (r,45°)\n    // thus we need to find the distance from the containing square top right corner\n    // which can be calculated as x = r - r × sin(45°)\n    // Self offset is how much we’ll shift the badge from the edge point,\n    // its value ranges from badgeHeight / 4 (square) to badgeHeight / 2 (circle)\n    const selfOffset = badgeHeight * (0.25 + radius / (size * 2));\n    const edgeOffset = radius * (1 - Math.sin((45 * Math.PI) / 180));\n\n    return PixelRatio.roundToNearestPixel(edgeOffset - selfOffset);\n  }, [badgeHeight, radius, size]);\n\n  const rootStyles = [\n    {\n      width: size,\n      height: size,\n      borderRadius: radius,\n    },\n    styles.root,\n    style,\n  ];\n\n  let content = [];\n\n  if (initials) {\n    const fontSize = PixelRatio.roundToNearestPixel(size / 2.5);\n\n    content.push(\n      <Text key=\"text\" style={[{ fontSize }, styles.text, textStyle]} numberOfLines={1}>\n        {initials.text}\n      </Text>,\n    );\n\n    if (initials.color) {\n      rootStyles.push({ backgroundColor: initials.color });\n    }\n  } else {\n    const imageRadius = radius - (size - imageHeight) / 2;\n\n    content.push(\n      <Image\n        key=\"image\"\n        style={[{ borderRadius: imageRadius }, styles.image, imageStyle]}\n        source={imageSource}\n        onLayout={onImageLayout}\n        onError={onError}\n      />,\n    );\n  }\n\n  if (badge) {\n    const [badgeY, badgeX] = badgePosition.split('-');\n    const badgeStyles = [\n      {\n        [badgeY]: badgeOffset,\n        [badgeX]: badgeOffset,\n      },\n      styles.badge,\n      badgeProps?.style,\n    ];\n\n    content.push(\n      <Badge\n        key=\"badge\"\n        value={badge}\n        color={badgeColor}\n        {...badgeProps}\n        style={badgeStyles}\n        onLayout={onBadgeLayout}\n      />,\n    );\n  }\n\n  return (\n    <View {...props} style={rootStyles}>\n      {content}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  root: {\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colorScheme('#aeaeb2', '#636366'),\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n  },\n  text: {\n    fontWeight: '700',\n    fontFamily: 'System',\n    includeFontPadding: false,\n    textAlignVertical: 'center',\n    backgroundColor: 'transparent',\n    color: '#fff',\n  },\n  badge: {\n    zIndex: 1,\n    position: 'absolute',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.2,\n    shadowRadius: 1,\n    elevation: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}