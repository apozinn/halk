{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as RNLocalize from \"react-native-localize\";\nimport CountryPicker, { getCallingCode } from \"react-native-country-picker-modal\";\nimport { Text } from \"../../src/components/Themed\";\nimport VerifyPhoneFormat from \"../../src/components/verifyPhoneFormat\";\nimport { AsYouType } from 'libphonenumber-js';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      phone = _useState2[0],\n      setPhone = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      callingCode = _useState4[0],\n      setCallingCode = _useState4[1];\n\n  var _useState5 = useState(RNLocalize.getCountry()),\n      _useState6 = _slicedToArray(_useState5, 2),\n      country = _useState6[0],\n      setCountry = _useState6[1];\n\n  useEffect(function () {\n    getCallingCode(country).then(function (c) {\n      return console.log(c);\n    });\n    setCallingCode(getCallingCode(country));\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"../../assets/images/icon.png\"),\n      style: styles.logo\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Se registe com seu numero\"\n    }), _jsxs(View, {\n      style: styles.numberContainer,\n      children: [_jsx(CountryPicker, {\n        countryCode: country,\n        containerButtonStyle: styles.countryButton,\n        withAlphaFilter: true,\n        withCallingCode: true,\n        withCloseButton: true,\n        withCurrency: true,\n        withEmoji: true,\n        withFilter: true,\n        withFlag: true,\n        withFlagButton: true,\n        withModal: true,\n        onSelect: function onSelect(c) {\n          setCountry(c.cca2);\n          setCallingCode(c.callingCode[0]);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Seu numero\",\n        style: styles.input,\n        onChangeText: function onChangeText(value) {\n          console.log(callingCode);\n\n          if (phone.includes(callingCode)) {\n            setPhone(value);\n          } else setPhone(\"\" + callingCode + value);\n        },\n        value: new AsYouType(country).input(phone),\n        textContentType: \"telephoneNumber\",\n        keyboardType: \"number-pad\"\n      })]\n    }), _jsx(Text, {\n      style: styles.description,\n      children: \"Ap\\xF3s a confirma\\xE7\\xE3o, ser\\xE1 enviado um c\\xF3digo de verifica\\xE7\\xE3o para o seu n\\xFAmero.\"\n    }), _jsx(VerifyPhoneFormat, {\n      phone: phone,\n      navigation: navigation\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n    alignItems: \"center\"\n  },\n  logo: {\n    width: 150,\n    height: 150,\n    marginTop: 20\n  },\n  title: {\n    fontSize: 12,\n    fontWeight: \"bold\"\n  },\n  numberContainer: {\n    borderWidth: 1,\n    borderColor: \"#222\",\n    borderRadius: 10,\n    width: \"70%\",\n    height: 40,\n    marginTop: 5,\n    flexDirection: \"row\"\n  },\n  input: {\n    width: \"100%\",\n    height: \"100%\",\n    borderLeftWidth: 1,\n    borderLeftColor: \"#222\",\n    paddingLeft: 10\n  },\n  countryButton: {\n    width: 35,\n    height: 0,\n    marginLeft: 5,\n    marginTop: 3\n  },\n  description: {\n    fontSize: 11,\n    textAlign: \"center\",\n    width: 250,\n    opacity: 0.8,\n    marginTop: 3\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","RNLocalize","CountryPicker","getCallingCode","Text","VerifyPhoneFormat","AsYouType","Register","navigation","phone","setPhone","callingCode","setCallingCode","getCountry","country","setCountry","then","c","console","log","styles","container","require","logo","title","numberContainer","countryButton","cca2","input","value","includes","description","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","alignItems","width","height","fontSize","fontWeight","borderWidth","borderColor","borderRadius","flexDirection","borderLeftWidth","borderLeftColor","paddingLeft","marginLeft","textAlign","opacity"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/screens/register/register.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Image,\n  Pressable,\n  StatusBar,\n  StyleSheet,\n  TextInput,\n  View,\n} from \"react-native\";\nimport { RootStackScreenProps } from \"../../types\";\nimport * as RNLocalize from \"react-native-localize\";\nimport CountryPicker, { getCallingCode } from \"react-native-country-picker-modal\";\nimport { Text } from \"../../src/components/Themed\";\nimport VerifyPhoneFormat from \"../../src/components/verifyPhoneFormat\";\nimport { AsYouType } from 'libphonenumber-js';\n\nexport default function Register({\n  navigation,\n}: RootStackScreenProps<\"Register\">) {\n  const [phone, setPhone] = useState<any>(\"\");\n  const [callingCode, setCallingCode] = useState<any>(\"\");\n  const [country, setCountry] = useState<any>(RNLocalize.getCountry());\n\n  useEffect(() => {\n    getCallingCode(country).then(c => console.log(c));\n    \n    setCallingCode(getCallingCode(country));\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require(\"../../assets/images/icon.png\")}\n        style={styles.logo}\n      />\n      <Text style={styles.title}>Se registe com seu numero</Text>\n      <View style={styles.numberContainer}>\n        <CountryPicker\n          countryCode={country}\n          containerButtonStyle={styles.countryButton}\n          withAlphaFilter\n          withCallingCode\n          withCloseButton\n          withCurrency\n          withEmoji\n          withFilter\n          withFlag\n          withFlagButton\n          withModal\n          onSelect={(c) => {\n            setCountry(c.cca2);\n            setCallingCode(c.callingCode[0]);\n          }}\n        />\n        <TextInput\n          placeholder=\"Seu numero\"\n          style={styles.input}\n          onChangeText={(value) => {\n            console.log(callingCode);\n            if(phone.includes(callingCode)) {\n              setPhone(value);\n            } else setPhone(`${callingCode}${value}`);\n          }}\n          value={new AsYouType(country).input(phone)}\n          textContentType={\"telephoneNumber\"}\n          keyboardType={\"number-pad\"}\n        />\n      </View>\n      <Text style={styles.description}>\n        Após a confirmação, será enviado um código de verificação para o seu\n        número.\n      </Text>\n      <VerifyPhoneFormat phone={phone} navigation={navigation}/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n    alignItems: \"center\",\n  },\n  logo: {\n    width: 150,\n    height: 150,\n    marginTop: 20,\n  },\n  title: {\n    fontSize: 12,\n    fontWeight: \"bold\",\n  },\n  numberContainer: {\n    borderWidth: 1,\n    borderColor: \"#222\",\n    borderRadius: 10,\n    width: \"70%\",\n    height: 40,\n    marginTop: 5,\n    flexDirection: \"row\",\n  },\n  input: {\n    width: \"100%\",\n    height: \"100%\",\n    borderLeftWidth: 1,\n    borderLeftColor: \"#222\",\n    paddingLeft: 10,\n  },\n  countryButton: {\n    width: 35,\n    height: 0,\n    marginLeft: 5,\n    marginTop: 3,\n  },\n  description: {\n    fontSize: 11,\n    textAlign: \"center\",\n    width: 250,\n    opacity: 0.8,\n    marginTop: 3,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}