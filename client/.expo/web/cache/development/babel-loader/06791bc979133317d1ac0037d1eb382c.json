{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text } from \"./Themed\";\nimport { isPossiblePhoneNumber, isValidPhoneNumber } from \"libphonenumber-js\";\nimport { sendSms } from \"../../middleware/api\";\nimport { UserContext } from \"../contexts/user\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function VerifyPhoneFormat(_ref) {\n  var phone = _ref.phone,\n    navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useContext = useContext(UserContext),\n    user = _useContext.user,\n    logged = _useContext.logged,\n    updateUser = _useContext.updateUser;\n  function Verify() {\n    if (!phone || !navigation) return null;\n    if (isPossiblePhoneNumber(phone) && isValidPhoneNumber(phone)) {\n      return _jsx(View, {\n        style: styles.centeredView,\n        children: _jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: modalVisible,\n          onRequestClose: function onRequestClose() {\n            setModalVisible(!modalVisible);\n          },\n          children: _jsx(View, {\n            style: styles.centeredView,\n            children: _jsxs(View, {\n              style: styles.modalView,\n              children: [_jsxs(Text, {\n                style: styles.modalText,\n                children: [\"Voc\\xEA confirma \", phone, \" como seu n\\xFAmero?\"]\n              }), _jsxs(View, {\n                style: styles.buttonsContainer,\n                children: [_jsx(Pressable, {\n                  onPress: function onPress() {\n                    return setModalVisible(!modalVisible);\n                  },\n                  children: _jsx(Text, {\n                    style: [styles.button, {\n                      color: \"red\"\n                    }],\n                    children: \"Cancel\"\n                  })\n                }), _jsx(Pressable, {\n                  onPress: function onPress() {\n                    setModalVisible(!modalVisible);\n                    sendSms(phone).then(function (data) {\n                      if (data.codeSend) {\n                        updateUser({\n                          logged: logged,\n                          user: {\n                            id: data.id,\n                            phone: phone,\n                            profile: user.profile\n                          }\n                        });\n                        navigation.navigate(\"ReceiveCode\");\n                      } else alert(\"Não foi possivel enviar o codigo para o seu numero\");\n                    });\n                  },\n                  children: _jsx(Text, {\n                    style: [styles.button, {\n                      color: \"lime\"\n                    }],\n                    children: \"Confirmar\"\n                  })\n                })]\n              })]\n            })\n          })\n        })\n      });\n    } else {\n      return _jsx(View, {\n        style: styles.centeredView,\n        children: _jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: modalVisible,\n          onRequestClose: function onRequestClose() {\n            setModalVisible(!modalVisible);\n          },\n          children: _jsx(View, {\n            style: styles.centeredView,\n            children: _jsxs(View, {\n              style: styles.modalView,\n              children: [_jsx(Text, {\n                style: styles.modalText,\n                children: \"N\\xFAmero inval\\xEDdo, tente novamente.\"\n              }), _jsx(View, {\n                style: styles.buttonsContainer,\n                children: _jsx(Pressable, {\n                  onPress: function onPress() {\n                    return setModalVisible(!modalVisible);\n                  },\n                  children: _jsx(Text, {\n                    style: [styles.button, {\n                      color: \"lime\"\n                    }],\n                    children: \"Ok\"\n                  })\n                })\n              })]\n            })\n          })\n        })\n      });\n    }\n  }\n  return _jsxs(_Fragment, {\n    children: [_jsx(Pressable, {\n      style: [styles.nextButton, {\n        opacity: !phone ? 0.5 : 1\n      }],\n      onPress: function onPress() {\n        return setModalVisible(modalVisible ? false : true);\n      },\n      children: _jsx(Text, {\n        children: \"Continue\"\n      })\n    }), _jsx(Verify, {})]\n  });\n}\nvar styles = StyleSheet.create({\n  nextButton: {\n    backgroundColor: \"#2f95dc\",\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    position: \"absolute\",\n    borderRadius: 100,\n    bottom: 20\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  modalView: {\n    margin: 20,\n    borderRadius: 20,\n    padding: 15,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    borderColor: \"#222\",\n    borderWidth: 1\n  },\n  title: {\n    fontSize: 14\n  },\n  button: {\n    fontSize: 12\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"names":["React","useState","useContext","Text","isPossiblePhoneNumber","isValidPhoneNumber","sendSms","UserContext","VerifyPhoneFormat","phone","navigation","modalVisible","setModalVisible","user","logged","updateUser","Verify","styles","centeredView","modalView","modalText","buttonsContainer","button","color","then","data","codeSend","id","profile","navigate","alert","nextButton","opacity","StyleSheet","create","backgroundColor","paddingVertical","paddingHorizontal","position","borderRadius","bottom","flex","justifyContent","alignItems","margin","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","borderColor","borderWidth","title","fontSize","marginBottom","textAlign","flexDirection"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/src/components/verifyPhoneFormat.tsx"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { View, Modal, Pressable, StyleSheet } from \"react-native\";\nimport { Text } from \"./Themed\";\nimport { isPossiblePhoneNumber, isValidPhoneNumber } from \"libphonenumber-js\";\nimport { sendSms } from \"../../middleware/api\";\nimport { UserContext } from \"../contexts/user\";\n\nexport default function VerifyPhoneFormat({ phone, navigation }: any) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const { user, logged, updateUser } = useContext(UserContext);\n\n  function Verify() {\n    if (!phone || !navigation) return null;\n\n    if (isPossiblePhoneNumber(phone) && isValidPhoneNumber(phone)) {\n      return (\n        <View style={styles.centeredView}>\n          <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={modalVisible}\n            onRequestClose={() => {\n              setModalVisible(!modalVisible);\n            }}\n          >\n            <View style={styles.centeredView}>\n              <View style={styles.modalView}>\n                <Text style={styles.modalText}>\n                  Você confirma {phone} como seu número?\n                </Text>\n                <View style={styles.buttonsContainer}>\n                  <Pressable onPress={() => setModalVisible(!modalVisible)}>\n                    <Text style={[styles.button, { color: \"red\" }]}>\n                      Cancel\n                    </Text>\n                  </Pressable>\n                  <Pressable\n                    onPress={() => {\n                      setModalVisible(!modalVisible);\n                      sendSms(phone).then((data) => {\n                        if (data.codeSend) {\n                          updateUser({\n                            logged: logged,\n                            user: {\n                              id: data.id,\n                              phone: phone,\n                              profile: user.profile,\n                            },\n                          });\n                          navigation.navigate(\"ReceiveCode\");\n                        } else\n                          alert(\n                            \"Não foi possivel enviar o codigo para o seu numero\"\n                          );\n                      });\n                    }}\n                  >\n                    <Text style={[styles.button, { color: \"lime\" }]}>\n                      Confirmar\n                    </Text>\n                  </Pressable>\n                </View>\n              </View>\n            </View>\n          </Modal>\n        </View>\n      );\n    } else {\n      return (\n        <View style={styles.centeredView}>\n          <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={modalVisible}\n            onRequestClose={() => {\n              setModalVisible(!modalVisible);\n            }}\n          >\n            <View style={styles.centeredView}>\n              <View style={styles.modalView}>\n                <Text style={styles.modalText}>\n                  Número invalído, tente novamente.\n                </Text>\n                <View style={styles.buttonsContainer}>\n                  <Pressable onPress={() => setModalVisible(!modalVisible)}>\n                    <Text style={[styles.button, { color: \"lime\" }]}>Ok</Text>\n                  </Pressable>\n                </View>\n              </View>\n            </View>\n          </Modal>\n        </View>\n      );\n    }\n  }\n\n  return (\n    <>\n      <Pressable\n        style={[styles.nextButton, { opacity: !phone ? 0.5 : 1 }]}\n        onPress={() => setModalVisible(modalVisible ? false : true)}\n      >\n        <Text>Continue</Text>\n      </Pressable>\n      <Verify />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  nextButton: {\n    backgroundColor: \"#2f95dc\",\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    position: \"absolute\",\n    borderRadius: 100,\n    bottom: 20,\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  modalView: {\n    margin: 20,\n    borderRadius: 20,\n    padding: 15,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    borderColor: \"#222\",\n    borderWidth: 1,\n  },\n  title: {\n    fontSize: 14,\n  },\n  button: {\n    fontSize: 12,\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}