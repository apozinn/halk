{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport { Text } from \"../src/components/Themed\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ErrorBoundary = function (_React$Component) {\n  _inherits(ErrorBoundary, _React$Component);\n\n  var _super = _createSuper(ErrorBoundary);\n\n  function ErrorBoundary(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    _this = _super.call(this, props);\n    _this.errorInfo = \"Tivemos um erro em nosso sistema, tente novamente.\";\n    _this.state = {\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(ErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, errorInfo) {\n      this.errorInfo = errorInfo;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Text, {\n          style: {\n            color: \"white\"\n          },\n          children: \"Oops!\"\n        }), _jsx(Text, {\n          style: {\n            color: \"white\"\n          },\n          children: \"There's an error\"\n        }), _jsx(Text, {\n          style: {\n            color: \"white\"\n          },\n          children: this.errorInfo\n        }), _jsx(Pressable, {\n          children: _jsx(Text, {\n            style: {\n              color: \"white\"\n            },\n            children: \"Try again\"\n          })\n        })]\n      });\n\n      if (this.state.hasError) {}\n\n      return this.props.children;\n    }\n  }], [{\n    key: \"getDerivedStateFromError\",\n    value: function getDerivedStateFromError(error) {\n      return {\n        hasError: true\n      };\n    }\n  }]);\n\n  return ErrorBoundary;\n}(React.Component);\n\nexport { ErrorBoundary as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#1e1e1e\",\n    padding: 10,\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","Text","ErrorBoundary","props","errorInfo","state","hasError","error","styles","container","color","children","Component","StyleSheet","create","flex","backgroundColor","padding","alignItems"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/errorBoundary.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Text } from \"../src/components/Themed\";\nimport { View, StyleSheet, Pressable } from \"react-native\";\n\nexport default class ErrorBoundary extends React.Component {\n  private errorInfo = \"Tivemos um erro em nosso sistema, tente novamente.\";\n\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.errorInfo = errorInfo;\n  }\n\n  render() {\n    return (<View style={styles.container}>\n      <Text style={{color: \"white\"}}>Oops!</Text>\n      <Text style={{color: \"white\"}}>There's an error</Text>\n      <Text style={{color: \"white\"}}>{this.errorInfo}</Text>\n      <Pressable>\n        <Text style={{color: \"white\"}}>Try again</Text>\n      </Pressable>\n        </View>);\n\n    if (this.state.hasError) {}\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#1e1e1e\",\n    padding: 10,\n    alignItems: 'center',\n  },\n});\n"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT;;;;;;;IAGqBC,a;;;;;EAGnB,uBAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,0BAAMA,KAAN;IADiB,MAFXC,SAEW,GAFC,oDAED;IAEjB,MAAKC,KAAL,GAAa;MAAEC,QAAQ,EAAE;IAAZ,CAAb;IAFiB;EAGlB;;;;WAMD,2BAAkBC,KAAlB,EAAyBH,SAAzB,EAAoC;MAClC,KAAKA,SAAL,GAAiBA,SAAjB;IACD;;;WAED,kBAAS;MACP,OAAQ,MAAC,IAAD;QAAM,KAAK,EAAEI,MAAM,CAACC,SAApB;QAAA,WACN,KAAC,IAAD;UAAM,KAAK,EAAE;YAACC,KAAK,EAAE;UAAR,CAAb;UAAA;QAAA,EADM,EAEN,KAAC,IAAD;UAAM,KAAK,EAAE;YAACA,KAAK,EAAE;UAAR,CAAb;UAAA;QAAA,EAFM,EAGN,KAAC,IAAD;UAAM,KAAK,EAAE;YAACA,KAAK,EAAE;UAAR,CAAb;UAAA,UAAgC,KAAKN;QAArC,EAHM,EAIN,KAAC,SAAD;UAAA,UACE,KAAC,IAAD;YAAM,KAAK,EAAE;cAACM,KAAK,EAAE;YAAR,CAAb;YAAA;UAAA;QADF,EAJM;MAAA,EAAR;;MASA,IAAI,KAAKL,KAAL,CAAWC,QAAf,EAAyB,CAAE;;MAC3B,OAAO,KAAKH,KAAL,CAAWQ,QAAlB;IACD;;;WApBD,kCAAgCJ,KAAhC,EAAuC;MACrC,OAAO;QAAED,QAAQ,EAAE;MAAZ,CAAP;IACD;;;;EAVwCN,KAAK,CAACY,S;;SAA5BV,a;AA+BrB,IAAMM,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BL,SAAS,EAAE;IACTM,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,SAFR;IAGTC,OAAO,EAAE,EAHA;IAITC,UAAU,EAAE;EAJH;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}