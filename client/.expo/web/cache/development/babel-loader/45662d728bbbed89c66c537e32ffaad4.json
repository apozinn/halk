{"ast":null,"code":"import React, { useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport NewChatButton from \"../../src/components/newChat\";\nimport Socket, { CreateSocketConnection } from \"../../src/utils/socket\";\nimport ChatContainer from \"../../src/components/chat/chatContainer\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Chats(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      logged = _useContext.logged;\n\n  var _useContext2 = useContext(ChatsContext),\n      chats = _useContext2.chats,\n      updateChats = _useContext2.updateChats;\n\n  var socket = CreateSocketConnection({\n    userId: user.id\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [!logged ? _jsx(_Fragment, {\n      children: navigation.navigate(\"Welcome\")\n    }) : _jsx(ScrollView, {\n      style: {\n        padding: 5\n      },\n      showsVerticalScrollIndicator: false,\n      showsHorizontalScrollIndicator: false,\n      children: !chats.length ? _jsx(ChatContainer, {\n        chat: new Socket.sendHalkMessage(),\n        user: user,\n        chats: chats,\n        chat: chat,\n        navigation: navigation,\n        socket: socket\n      }) : _jsx(_Fragment, {\n        children: chats.map(function (chat, index) {\n          return _createElement(ChatContainer, {\n            user: user,\n            chats: chats,\n            updateChats: updateChats,\n            chat: chat,\n            navigation: navigation,\n            socket: socket,\n            key: index\n          });\n        })\n      })\n    }), _jsx(NewChatButton, {\n      navigation: navigation\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","useContext","UserContext","ChatsContext","NewChatButton","Socket","CreateSocketConnection","ChatContainer","Chats","navigation","user","logged","chats","updateChats","socket","userId","id","styles","container","navigate","padding","length","sendHalkMessage","chat","map","index","StyleSheet","create","flex"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/app/chats.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport { View, StyleSheet, ScrollView } from \"react-native\";\nimport { RootTabScreenProps } from \"../../types\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport NewChatButton from \"../../src/components/newChat\";\nimport Socket, { CreateSocketConnection } from \"../../src/utils/socket\";\nimport ChatContainer from \"../../src/components/chat/chatContainer\";\n\nexport default function Chats({ navigation }: RootTabScreenProps<\"Chats\">) {\n  const { user, logged } = useContext(UserContext);\n  const { chats, updateChats } = useContext(ChatsContext);\n  const socket = CreateSocketConnection({ userId: user.id });\n\n  return (\n    <View style={styles.container}>\n      {!logged ? (\n        <>{navigation.navigate(\"Welcome\")}</>\n      ) : (\n        <ScrollView\n          style={{ padding: 5 }}\n          showsVerticalScrollIndicator={false}\n          showsHorizontalScrollIndicator={false}\n        >\n          {!chats.length ? (\n            <ChatContainer\n              chat={new Socket.sendHalkMessage()}\n              {...{ user, chats, chat, navigation, socket }}\n            />\n          ) : (\n            <>\n              {chats.map((chat, index) => (\n                <ChatContainer\n                  {...{ user, chats, updateChats, chat, navigation, socket }}\n                  key={index}\n                />\n              ))}\n            </>\n          )}\n        </ScrollView>\n      )}\n      <NewChatButton navigation={navigation} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;AAGA,SAASC,WAAT;AACA,SAASC,YAAT;AACA,OAAOC,aAAP;AACA,OAAOC,MAAP,IAAiBC,sBAAjB;AACA,OAAOC,aAAP;;;;;AAEA,eAAe,SAASC,KAAT,OAA4D;EAAA,IAA3CC,UAA2C,QAA3CA,UAA2C;;EACzE,kBAAyBR,UAAU,CAACC,WAAD,CAAnC;EAAA,IAAQQ,IAAR,eAAQA,IAAR;EAAA,IAAcC,MAAd,eAAcA,MAAd;;EACA,mBAA+BV,UAAU,CAACE,YAAD,CAAzC;EAAA,IAAQS,KAAR,gBAAQA,KAAR;EAAA,IAAeC,WAAf,gBAAeA,WAAf;;EACA,IAAMC,MAAM,GAAGR,sBAAsB,CAAC;IAAES,MAAM,EAAEL,IAAI,CAACM;EAAf,CAAD,CAArC;EAEA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACG,CAACP,MAAD,GACC;MAAA,UAAGF,UAAU,CAACU,QAAX,CAAoB,SAApB;IAAH,EADD,GAGC,KAAC,UAAD;MACE,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAX,CADT;MAEE,4BAA4B,EAAE,KAFhC;MAGE,8BAA8B,EAAE,KAHlC;MAAA,UAKG,CAACR,KAAK,CAACS,MAAP,GACC,KAAC,aAAD;QACE,IAAI,EAAE,IAAIhB,MAAM,CAACiB,eAAX,EADR;QAEQZ,IAAI,EAAJA,IAFR;QAEcE,KAAK,EAALA,KAFd;QAEqBW,IAAI,EAAJA,IAFrB;QAE2Bd,UAAU,EAAVA,UAF3B;QAEuCK,MAAM,EAANA;MAFvC,EADD,GAMC;QAAA,UACGF,KAAK,CAACY,GAAN,CAAU,UAACD,IAAD,EAAOE,KAAP;UAAA,OACT,eAAC,aAAD;YACQf,IAAI,EAAJA,IADR;YACcE,KAAK,EAALA,KADd;YACqBC,WAAW,EAAXA,WADrB;YACkCU,IAAI,EAAJA,IADlC;YACwCd,UAAU,EAAVA,UADxC;YACoDK,MAAM,EAANA,MADpD;YAEE,GAAG,EAAEW;UAFP,EADS;QAAA,CAAV;MADH;IAXJ,EAJJ,EA0BE,KAAC,aAAD;MAAe,UAAU,EAAEhB;IAA3B,EA1BF;EAAA,EADF;AA8BD;AAED,IAAMQ,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE;EADG;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}