{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AntDesign, Ionicons, Feather, FontAwesome, MaterialIcons, Fontisto } from \"@expo/vector-icons\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { SocketContext } from \"../../src/contexts/socket\";\nimport { SocketController } from \"../../src/utils/socket\";\nimport { getColors } from \"../../constants/Colors\";\nimport { Cipher, Decipher } from \"../../middleware/crypto\";\nimport { Userpic } from \"react-native-userpic\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar badgeProps = {\n  size: 25,\n  borderRadius: 50,\n  animate: true\n};\nexport default function Chat(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      chat = _useState6[0],\n      setChat = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      online = _useState8[0],\n      setOnline = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userTyping = _useState10[0],\n      setUserTyping = _useState10[1];\n\n  var colors = getColors();\n  var scrollViewRef = useRef();\n\n  var _useContext = useContext(ChatsContext),\n      chats = _useContext.chats,\n      updateChats = _useContext.updateChats;\n\n  var _useContext2 = useContext(UserContext),\n      user = _useContext2.user;\n\n  var socket = useContext(SocketContext);\n  useEffect(function () {\n    var chatId = route.params.id;\n\n    if (chatId) {\n      var thisChat = chats.filter(function (c) {\n        return c.id === chatId;\n      })[0];\n\n      if (thisChat) {\n        setChat(thisChat);\n      } else {\n        setChat(new SocketController.sendHalkMessage());\n      }\n    }\n  }, [user, chats]);\n  useEffect(function () {\n    if (chat && socket) {\n      socket.emit(\"joinRoom\", {\n        room: chat.id,\n        otherUser: chat.user.id\n      });\n      socket.emit(\"verifyIfUserIsOnline\", {\n        userId: chat.user.id\n      });\n      socket.on(\"receiveIfUserIsOnline\", function (callback) {\n        return setOnline(callback);\n      });\n      setMessages(function (oldMessages) {\n        return [].concat(_toConsumableArray(oldMessages), _toConsumableArray(chat.messages));\n      });\n      socket.on(\"readMessage\", function (p) {\n        var thisChat = chats.filter(function (c) {\n          return c.id === p.chat;\n        })[0];\n\n        if (thisChat) {\n          thisChat.messages.filter(function (m) {\n            return !m.read;\n          }).map(function (m) {\n            return m.read = true;\n          });\n          updateChats({\n            chats: chats\n          });\n        }\n      });\n    }\n  }, [chat]);\n  useEffect(function () {\n    if (!socket || !chat) return;\n\n    if (text.length === 0) {\n      socket.emit(\"userTyping\", {\n        room: chat.id,\n        typing: false,\n        userId: user.id\n      });\n    } else {\n      socket.emit(\"userTyping\", {\n        room: chat.id,\n        typing: true,\n        userId: user.id\n      });\n    }\n\n    socket.on(\"userTyping\", function (t) {\n      if (t.userId === user.id) return;\n      setUserTyping(t.typing);\n    });\n  }, [text]);\n\n  function sendMessage() {\n    if (!text) return;\n    var timeNow = new Date().getTime();\n    var message = {\n      chat: {\n        id: chat.id,\n        key: chat.key\n      },\n      author: user,\n      read: false,\n      createdAt: timeNow,\n      content: Cipher(text, chat.key),\n      id: \"\" + timeNow + Math.floor(Math.random() * (100000000 - 1000000 + 1) + 1000000)\n    };\n\n    if (chat.newChat) {\n      socket.emit(\"sendMessage\", {\n        room: chat.id,\n        toUser: chat.user.id,\n        message: message,\n        newChat: true,\n        key: chat.key\n      });\n      var thisChat = chats.filter(function (c) {\n        return c.id === chat.id;\n      })[0];\n      delete thisChat.newChat;\n      updateChats({\n        chats: chats\n      });\n    } else {\n      socket.emit(\"sendMessage\", {\n        room: chat.id,\n        toUser: chat.user.id,\n        message: message\n      });\n    }\n\n    setMessages(function (oldMessages) {\n      return [].concat(_toConsumableArray(oldMessages), [message]);\n    });\n    setText(\"\");\n  }\n\n  useEffect(function () {\n    if (!chat) return;\n    var thisChat = chats.filter(function (c) {\n      return c.id === chat.id;\n    })[0];\n    console.log(thisChat);\n  }, [chats]);\n  return _jsx(View, {\n    style: styles.container,\n    children: !chat ? _jsx(_Fragment, {}) : _jsxs(_Fragment, {\n      children: [_jsxs(View, {\n        style: [styles.topContainer, {\n          backgroundColor: colors.defaultColors.card\n        }],\n        children: [_jsxs(View, {\n          style: styles.topContainerLeft,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {\n              return navigation.navigate(\"Root\");\n            },\n            children: _jsx(AntDesign, {\n              name: \"arrowleft\",\n              size: 25,\n              color: colors.tint\n            })\n          }), _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate(\"Profile\", {\n                id: chat.user.id\n              });\n            },\n            style: styles.userProfile,\n            children: [_jsx(Userpic, {\n              size: 40,\n              name: chat.user.profile.name,\n              source: {\n                uri: chat.user.profile.avatar\n              },\n              colorize: true,\n              borderRadius: \"50%\",\n              badge: true,\n              badgeColor: online ? \"#00ff0d\" : \"#919191\",\n              badgePosition: \"bottom-right\",\n              badgeProps: badgeProps,\n              style: {\n                marginRight: 10\n              }\n            }), _jsxs(View, {\n              style: {\n                alignItems: \"flex-start\"\n              },\n              children: [_jsx(Text, {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: chat.user.profile.name\n              }), userTyping ? _jsx(Text, {\n                style: styles.isOnline,\n                children: \"Digitando...\"\n              }) : _jsx(Text, {\n                style: styles.isOnline,\n                children: online ? \"online\" : \"\"\n              })]\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.topContainerRight,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {},\n            children: _jsx(Ionicons, {\n              name: \"call\",\n              size: 24,\n              color: colors.tint\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {},\n            children: _jsx(FontAwesome, {\n              name: \"video-camera\",\n              size: 24,\n              color: colors.tint\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {},\n            children: _jsx(Feather, {\n              name: \"more-vertical\",\n              size: 24,\n              color: colors.tint\n            })\n          })]\n        })]\n      }), _jsx(ScrollView, {\n        style: styles.messageContainer,\n        ref: scrollViewRef,\n        showsVerticalScrollIndicator: false,\n        showsHorizontalScrollIndicator: false,\n        children: messages.map(function (message, index) {\n          var _messages, _messages2;\n\n          var itsMyMessage = message.author.id === user.id ? true : false;\n          var content = chat.key ? Decipher(message.content, chat.key) : \"Nova mensagem\";\n          var messageTime = new Date(message.createdAt).toLocaleTimeString();\n          var previousMessageIsMy = ((_messages = messages[index - 1]) == null ? void 0 : _messages.author.id) === message.author.id;\n          var nextMessageIsMy = ((_messages2 = messages[index + 1]) == null ? void 0 : _messages2.author.id) === message.author.id;\n          var borders = {};\n\n          if (itsMyMessage) {\n            borders.borderTopRightRadius = previousMessageIsMy && !nextMessageIsMy ? 5 : 20;\n            borders.borderBottomRightRadius = !previousMessageIsMy && nextMessageIsMy ? 5 : 20;\n\n            if (previousMessageIsMy && nextMessageIsMy) {\n              borders.borderTopRightRadius = 5;\n              borders.borderBottomRightRadius = 5;\n            }\n          } else {\n            borders.borderTopLeftRadius = previousMessageIsMy && !nextMessageIsMy ? 5 : 20;\n            borders.borderBottomLeftRadius = !previousMessageIsMy && nextMessageIsMy ? 5 : 20;\n\n            if (previousMessageIsMy && nextMessageIsMy) {\n              borders.borderTopLeftRadius = 10;\n              borders.borderBottomLeftRadius = 10;\n            }\n          }\n\n          return _jsx(View, {\n            style: [itsMyMessage ? styles.myMessage : styles.otherMessage, index === 0 ? {\n              margintop: 10\n            } : {}],\n            children: _jsxs(View, {\n              style: itsMyMessage ? {\n                maxWidth: \"75%\"\n              } : {},\n              children: [_jsx(Pressable, {\n                style: [styles.message, borders, {\n                  backgroundColor: itsMyMessage ? \"#2f95dc\" : colors.defaultColors.card\n                }],\n                onLongPress: function onLongPress() {},\n                children: _jsx(Text, {\n                  style: {\n                    maxWidth: \"100%\",\n                    color: itsMyMessage ? \"white\" : colors.defaultColors.text\n                  },\n                  children: content\n                })\n              }), _jsx(View, {\n                style: [styles.messageProps, {\n                  justifyContent: itsMyMessage ? \"flex-end\" : \"flex-start\"\n                }],\n                children: nextMessageIsMy ? _jsx(_Fragment, {}) : _jsxs(_Fragment, {\n                  children: [_jsx(Text, {\n                    style: styles.messageCreatedAt,\n                    children: messageTime.slice(0, 5)\n                  }), itsMyMessage ? _jsx(Ionicons, {\n                    name: \"checkmark-done\",\n                    size: 20,\n                    color: message.read ? \"#04f500\" : \"gray\",\n                    style: {\n                      marginRight: 2\n                    }\n                  }) : _jsx(_Fragment, {})]\n                })\n              })]\n            })\n          }, index);\n        })\n      }), _jsxs(View, {\n        style: [styles.bottomContainer, {\n          backgroundColor: colors.defaultColors.card\n        }],\n        children: [_jsxs(View, {\n          style: styles.buttonContentLeft,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.blueButton,\n            onPress: function onPress() {},\n            children: _jsx(Fontisto, {\n              name: \"camera\",\n              size: 20,\n              color: \"white\"\n            })\n          }), _jsx(TextInput, {\n            style: styles.inputMessage,\n            placeholder: \"Mensagem...\",\n            value: text,\n            onChangeText: function onChangeText(value) {\n              return setText(value);\n            },\n            onSubmitEditing: function onSubmitEditing() {\n              return sendMessage();\n            }\n          })]\n        }), text ? _jsx(TouchableOpacity, {\n          style: styles.blueButton,\n          onPress: function onPress() {\n            return sendMessage();\n          },\n          children: _jsx(FontAwesome, {\n            name: \"send\",\n            size: 24,\n            color: \"white\"\n          })\n        }) : _jsxs(View, {\n          style: styles.othersMedias,\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {},\n            children: _jsx(Ionicons, {\n              name: \"ios-add-circle-outline\",\n              size: 26,\n              color: colors.tint\n            })\n          }), _jsx(TouchableOpacity, {\n            style: {\n              marginLeft: 8\n            },\n            onPress: function onPress() {},\n            children: _jsx(MaterialIcons, {\n              name: \"keyboard-voice\",\n              size: 26,\n              color: colors.tint\n            })\n          })]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight\n  },\n  topContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 5,\n    justifyContent: \"space-between\"\n  },\n  topContainerLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  topContainerRight: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  messageContainer: {\n    flex: 1,\n    marginHorizontal: 10,\n    flexDirection: \"column-reverse\",\n    marginBottom: 55\n  },\n  bottomContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    backgroundColor: \"rgb(18, 18, 18)\",\n    justifyContent: \"space-between\",\n    borderRadius: 50,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: 5,\n    margin: 5\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: \"#222\"\n  },\n  myMessage: {\n    justifyContent: \"flex-end\",\n    flexDirection: \"revert\"\n  },\n  otherMessage: {\n    width: \"fit-content\",\n    maxWidth: \"75%\"\n  },\n  userIcon: {\n    width: 40,\n    height: 40,\n    borderRadius: 100,\n    marginHorizontal: 5\n  },\n  userProfile: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  button: {\n    padding: 5\n  },\n  blueButton: {\n    backgroundColor: \"#2f95dc\",\n    padding: 8,\n    borderRadius: 100\n  },\n  othersMedias: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  inputMessage: {\n    paddingVertical: 8,\n    width: \"100%\",\n    marginLeft: 10\n  },\n  message: {\n    padding: 7,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    marginBottom: 2,\n    alignItems: \"baseline\",\n    flexWrap: \"wrap\"\n  },\n  messageCreatedAt: {\n    fontSize: 10,\n    marginHorizontal: 5,\n    marginTop: 5\n  },\n  buttonContentLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"80%\"\n  },\n  isOnline: {\n    fontSize: 13\n  },\n  messageProps: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","useContext","useRef","AntDesign","Ionicons","Feather","FontAwesome","MaterialIcons","Fontisto","TextInput","Text","UserContext","ChatsContext","SocketContext","SocketController","getColors","Cipher","Decipher","Userpic","badgeProps","size","borderRadius","animate","Chat","navigation","route","messages","setMessages","text","setText","chat","setChat","online","setOnline","userTyping","setUserTyping","colors","scrollViewRef","chats","updateChats","user","socket","chatId","params","id","thisChat","filter","c","sendHalkMessage","emit","room","otherUser","userId","on","callback","oldMessages","p","m","read","map","length","typing","t","sendMessage","timeNow","Date","getTime","message","key","author","createdAt","content","Math","floor","random","newChat","toUser","console","log","styles","container","topContainer","backgroundColor","defaultColors","card","topContainerLeft","button","navigate","tint","userProfile","profile","name","uri","avatar","marginRight","alignItems","fontWeight","isOnline","topContainerRight","messageContainer","index","itsMyMessage","messageTime","toLocaleTimeString","previousMessageIsMy","nextMessageIsMy","borders","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","myMessage","otherMessage","margintop","maxWidth","color","messageProps","justifyContent","messageCreatedAt","slice","bottomContainer","buttonContentLeft","blueButton","inputMessage","value","othersMedias","marginLeft","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","flexDirection","padding","marginHorizontal","marginBottom","position","bottom","left","right","margin","messageCard","borderWidth","borderColor","width","userIcon","height","paddingVertical","flexWrap","fontSize"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/chat/chat.tsx"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport {\n  Button,\n  StatusBar,\n  StyleSheet,\n  View,\n  Image,\n  Pressable,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport {\n  AntDesign,\n  Ionicons,\n  Feather,\n  FontAwesome,\n  MaterialIcons,\n  Fontisto,\n} from \"@expo/vector-icons\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { SocketContext } from \"../../src/contexts/socket\";\nimport { SocketController } from \"../../src/utils/socket\";\nimport { getColors } from \"../../constants/Colors\";\nimport { Cipher, Decipher } from \"../../middleware/crypto\";\nimport { Userpic } from \"react-native-userpic\";\n\nconst badgeProps = {\n  size: 25,\n  borderRadius: 50,\n  animate: true,\n};\n\nexport default function Chat({\n  navigation,\n  route,\n}: RootStackScreenProps<\"Chat\">) {\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [chat, setChat] = useState();\n  const [online, setOnline] = useState(false);\n  const [userTyping, setUserTyping] = useState(false);\n\n  const colors = getColors();\n  const scrollViewRef = useRef();\n\n  const { chats, updateChats } = useContext(ChatsContext);\n  const { user } = useContext(UserContext);\n  const socket = useContext(SocketContext);\n\n  useEffect(() => {\n    const chatId = route.params.id;\n    if (chatId) {\n      const thisChat = chats.filter((c) => c.id === chatId)[0];\n      if (thisChat) {\n        setChat(thisChat);\n      } else {\n        setChat(new SocketController.sendHalkMessage());\n      }\n\n      // socket.on(\"receiveMessage\", (msg) => {\n      //   if (thisChat) {\n      //     if (thisChat.messages.some((m) => m.id === msg.id)) return;\n      //     thisChat.messages.push(msg);\n      //     updateChats({ chats });\n      //   }\n      //\n      //   setMessages((oldMessages) => [...oldMessages, msg]);\n      // });\n    }\n  }, [user, chats]);\n\n  useEffect(() => {\n    if (chat && socket) {\n      socket.emit(\"joinRoom\", { room: chat.id, otherUser: chat.user.id });\n      socket.emit(\"verifyIfUserIsOnline\", { userId: chat.user.id });\n      socket.on(\"receiveIfUserIsOnline\", (callback) => setOnline(callback));\n      setMessages((oldMessages) => [...oldMessages, ...chat.messages]);\n      socket.on(\"readMessage\", (p) => {\n        const thisChat = chats.filter((c) => c.id === p.chat)[0];\n        if (thisChat) {\n          thisChat.messages.filter((m) => !m.read).map((m) => (m.read = true));\n          updateChats({ chats });\n        }\n      });\n    }\n  }, [chat]);\n\n  useEffect(() => {\n    if (!socket || !chat) return;\n\n    if (text.length === 0) {\n      socket.emit(\"userTyping\", {\n        room: chat.id,\n        typing: false,\n        userId: user.id,\n      });\n    } else {\n      socket.emit(\"userTyping\", {\n        room: chat.id,\n        typing: true,\n        userId: user.id,\n      });\n    }\n\n    socket.on(\"userTyping\", (t) => {\n      if (t.userId === user.id) return;\n      setUserTyping(t.typing);\n    });\n  }, [text]);\n\n  function sendMessage() {\n    if (!text) return;\n    const timeNow = new Date().getTime();\n    const message = {\n      chat: {\n        id: chat.id,\n        key: chat.key,\n      },\n      author: user,\n      read: false,\n      createdAt: timeNow,\n      content: Cipher(text, chat.key),\n      id: `${timeNow}${Math.floor(\n        Math.random() * (100000000 - 1000000 + 1) + 1000000\n      )}`,\n    };\n\n    if (chat.newChat) {\n      socket.emit(\"sendMessage\", {\n        room: chat.id,\n        toUser: chat.user.id,\n        message,\n        newChat: true,\n        key: chat.key,\n      });\n      const thisChat = chats.filter((c) => c.id === chat.id)[0];\n      delete thisChat.newChat;\n      updateChats({ chats });\n    } else {\n      socket.emit(\"sendMessage\", {\n        room: chat.id,\n        toUser: chat.user.id,\n        message,\n      });\n    }\n\n    setMessages((oldMessages) => [...oldMessages, message]);\n    setText(\"\");\n  }\n\n  useEffect(() => {\n    if (!chat) return;\n    const thisChat = chats.filter((c) => c.id === chat.id)[0];\n    console.log(thisChat);\n  }, [chats]);\n\n  return (\n    <View style={styles.container}>\n      {!chat ? (\n        <></>\n      ) : (\n        <>\n          <View\n            style={[\n              styles.topContainer,\n              { backgroundColor: colors.defaultColors.card },\n            ]}\n          >\n            <View style={styles.topContainerLeft}>\n              <TouchableOpacity\n                style={styles.button}\n                onPress={() => navigation.navigate(\"Root\")}\n              >\n                <AntDesign name=\"arrowleft\" size={25} color={colors.tint} />\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                onPress={() =>\n                  navigation.navigate(\"Profile\", {\n                    id: chat.user.id,\n                  })\n                }\n                style={styles.userProfile}\n              >\n                <Userpic\n                  size={40}\n                  name={chat.user.profile.name}\n                  source={{ uri: chat.user.profile.avatar }}\n                  colorize={true}\n                  borderRadius=\"50%\"\n                  badge={true}\n                  badgeColor={online ? \"#00ff0d\" : \"#919191\"}\n                  badgePosition={\"bottom-right\"}\n                  badgeProps={badgeProps}\n                  style={{ marginRight: 10 }}\n                />\n                <View style={{ alignItems: \"flex-start\" }}>\n                  <Text style={{ fontWeight: \"bold\" }}>\n                    {chat.user.profile.name}\n                  </Text>\n                  {userTyping ? (\n                    <Text style={styles.isOnline}>Digitando...</Text>\n                  ) : (\n                    <Text style={styles.isOnline}>\n                      {online ? \"online\" : \"\"}\n                    </Text>\n                  )}\n                </View>\n              </TouchableOpacity>\n            </View>\n\n            <View style={styles.topContainerRight}>\n              <TouchableOpacity style={styles.button} onPress={() => {}}>\n                <Ionicons name=\"call\" size={24} color={colors.tint} />\n              </TouchableOpacity>\n              <TouchableOpacity style={styles.button} onPress={() => {}}>\n                <FontAwesome\n                  name=\"video-camera\"\n                  size={24}\n                  color={colors.tint}\n                />\n              </TouchableOpacity>\n              <TouchableOpacity style={styles.button} onPress={() => {}}>\n                <Feather name=\"more-vertical\" size={24} color={colors.tint} />\n              </TouchableOpacity>\n            </View>\n          </View>\n\n          <ScrollView\n            style={styles.messageContainer}\n            ref={scrollViewRef}\n            showsVerticalScrollIndicator={false}\n            showsHorizontalScrollIndicator={false}\n          >\n            {messages.map((message, index) => {\n              const itsMyMessage = message.author.id === user.id ? true : false;\n              let content = chat.key\n                ? Decipher(message.content, chat.key)\n                : \"Nova mensagem\";\n              const messageTime = new Date(\n                message.createdAt\n              ).toLocaleTimeString();\n\n              let previousMessageIsMy =\n                messages[index - 1]?.author.id === message.author.id;\n              let nextMessageIsMy =\n                messages[index + 1]?.author.id === message.author.id;\n\n              let borders = {};\n\n              if (itsMyMessage) {\n                borders.borderTopRightRadius =\n                  previousMessageIsMy && !nextMessageIsMy ? 5 : 20;\n                borders.borderBottomRightRadius =\n                  !previousMessageIsMy && nextMessageIsMy ? 5 : 20;\n\n                if (previousMessageIsMy && nextMessageIsMy) {\n                  borders.borderTopRightRadius = 5;\n                  borders.borderBottomRightRadius = 5;\n                }\n              } else {\n                borders.borderTopLeftRadius =\n                  previousMessageIsMy && !nextMessageIsMy ? 5 : 20;\n                borders.borderBottomLeftRadius =\n                  !previousMessageIsMy && nextMessageIsMy ? 5 : 20;\n\n                if (previousMessageIsMy && nextMessageIsMy) {\n                  borders.borderTopLeftRadius = 10;\n                  borders.borderBottomLeftRadius = 10;\n                }\n              }\n\n              return (\n                <View\n                  style={[\n                    itsMyMessage ? styles.myMessage : styles.otherMessage,\n                    index === 0 ? { margintop: 10 } : {},\n                  ]}\n                  key={index}\n                >\n                  <View style={itsMyMessage ? { maxWidth: \"75%\" } : {}}>\n                    <Pressable\n                      style={[\n                        styles.message,\n                        borders,\n                        {\n                          backgroundColor: itsMyMessage\n                            ? \"#2f95dc\"\n                            : colors.defaultColors.card,\n                        },\n                      ]}\n                      onLongPress={() => {}}\n                    >\n                      <Text\n                        style={{\n                          maxWidth: \"100%\",\n                          color: itsMyMessage\n                            ? \"white\"\n                            : colors.defaultColors.text,\n                        }}\n                      >\n                        {content}\n                      </Text>\n                    </Pressable>\n                    <View\n                      style={[\n                        styles.messageProps,\n                        {\n                          justifyContent: itsMyMessage\n                            ? \"flex-end\"\n                            : \"flex-start\",\n                        },\n                      ]}\n                    >\n                      {nextMessageIsMy ? (\n                        <></>\n                      ) : (\n                        <>\n                          <Text style={styles.messageCreatedAt}>\n                            {messageTime.slice(0, 5)}\n                          </Text>\n                          {itsMyMessage ? (\n                            <Ionicons\n                              name=\"checkmark-done\"\n                              size={20}\n                              color={message.read ? \"#04f500\" : \"gray\"}\n                              style={{ marginRight: 2 }}\n                            />\n                          ) : (\n                            <></>\n                          )}\n                        </>\n                      )}\n                    </View>\n                  </View>\n                </View>\n              );\n            })}\n          </ScrollView>\n\n          <View\n            style={[\n              styles.bottomContainer,\n              { backgroundColor: colors.defaultColors.card },\n            ]}\n          >\n            <View style={styles.buttonContentLeft}>\n              <TouchableOpacity style={styles.blueButton} onPress={() => {}}>\n                <Fontisto name=\"camera\" size={20} color=\"white\" />\n              </TouchableOpacity>\n              <TextInput\n                style={styles.inputMessage}\n                placeholder=\"Mensagem...\"\n                value={text}\n                onChangeText={(value) => setText(value)}\n                onSubmitEditing={() => sendMessage()}\n              />\n            </View>\n\n            {text ? (\n              <TouchableOpacity\n                style={styles.blueButton}\n                onPress={() => sendMessage()}\n              >\n                <FontAwesome name=\"send\" size={24} color=\"white\" />\n              </TouchableOpacity>\n            ) : (\n              <View style={styles.othersMedias}>\n                <TouchableOpacity onPress={() => {}}>\n                  <Ionicons\n                    name=\"ios-add-circle-outline\"\n                    size={26}\n                    color={colors.tint}\n                  />\n                </TouchableOpacity>\n                <TouchableOpacity style={{ marginLeft: 8 }} onPress={() => {}}>\n                  <MaterialIcons\n                    name=\"keyboard-voice\"\n                    size={26}\n                    color={colors.tint}\n                  />\n                </TouchableOpacity>\n              </View>\n            )}\n          </View>\n        </>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n  },\n  topContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 5,\n    justifyContent: \"space-between\",\n  },\n  topContainerLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  topContainerRight: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  messageContainer: {\n    flex: 1,\n    marginHorizontal: 10,\n    flexDirection: \"column-reverse\",\n    marginBottom: 55,\n  },\n  bottomContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    backgroundColor: \"rgb(18, 18, 18)\",\n    justifyContent: \"space-between\",\n    borderRadius: 50,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: 5,\n    margin: 5,\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: \"#222\",\n  },\n  myMessage: {\n    justifyContent: \"flex-end\",\n    flexDirection: \"revert\",\n  },\n  otherMessage: {\n    width: \"fit-content\",\n    maxWidth: \"75%\",\n  },\n  userIcon: {\n    width: 40,\n    height: 40,\n    borderRadius: 100,\n    marginHorizontal: 5,\n  },\n  userProfile: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  button: {\n    padding: 5,\n  },\n  blueButton: {\n    backgroundColor: \"#2f95dc\",\n    padding: 8,\n    borderRadius: 100,\n  },\n  othersMedias: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  inputMessage: {\n    paddingVertical: 8,\n    width: \"100%\",\n    marginLeft: 10,\n  },\n  message: {\n    padding: 7,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    marginBottom: 2,\n    alignItems: \"baseline\",\n    flexWrap: \"wrap\",\n  },\n  messageCreatedAt: {\n    fontSize: 10,\n    marginHorizontal: 5,\n    marginTop: 5,\n  },\n  buttonContentLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"80%\",\n  },\n  isOnline: {\n    fontSize: 13,\n  },\n  messageProps: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}