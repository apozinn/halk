{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useContext, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { TextInput } from \"../../src/components/Themed\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { getColors } from \"../../constants/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NewChat(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useContext = useContext(ChatsContext),\n      chats = _useContext.chats;\n\n  var colors = getColors();\n  useEffect(function () {\n    console.log(search);\n  }, [search]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(AntDesign, {\n        name: \"arrowleft\",\n        size: 25,\n        color: colors.tint\n      }), _jsx(TextInput, {\n        style: [styles.input, {\n          backgroundColor: colors.defaultColors.card\n        }],\n        placeholder: \"Pesquisar\",\n        onChangeText: function onChangeText(value) {\n          return setSearch(value);\n        },\n        value: search\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.results\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10\n  },\n  input: {\n    padding: 5,\n    borderRadius: 10,\n    marginLeft: 10,\n    width: \"100%\"\n  },\n  results: {\n    flex: 1,\n    margin: 10\n  }\n});","map":{"version":3,"names":["useState","useContext","useEffect","ChatsContext","TextInput","AntDesign","getColors","NewChat","navigation","search","setSearch","chats","colors","console","log","styles","container","inputContainer","tint","input","backgroundColor","defaultColors","card","value","results","StyleSheet","create","flex","flexDirection","alignItems","padding","borderRadius","marginLeft","width","margin"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/app/newChat.tsx"],"sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport { View, StyleSheet, ScrollView } from \"react-native\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { getColors } from \"../../constants/Colors\";\n\nexport default function NewChat({\n  navigation,\n}: RootStackScreenProps<\"NewChat\">) {\n  const [search, setSearch] = useState(\"\");\n  const { chats } = useContext(ChatsContext);\n  const colors = getColors();\n\n  useEffect(() => {\n    console.log(search);\n  }, [search]);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.inputContainer}>\n        <AntDesign name=\"arrowleft\" size={25} color={colors.tint} />\n        <TextInput\n          style={[styles.input, { backgroundColor: colors.defaultColors.card }]}\n          placeholder=\"Pesquisar\"\n          onChangeText={(value) => setSearch(value)}\n          value={search}\n        />\n      </View>\n      <ScrollView style={styles.results}></ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  input: {\n    padding: 5,\n    borderRadius: 10,\n    marginLeft: 10,\n    width: \"100%\",\n  },\n  results: {\n    flex: 1,\n    margin: 10,\n  },\n});\n"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,OAAhD;;;;AAGA,SAASC,YAAT;AACA,SAASC,SAAT;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT;;;AAEA,eAAe,SAASC,OAAT,OAEqB;EAAA,IADlCC,UACkC,QADlCA,UACkC;;EAClC,gBAA4BR,QAAQ,CAAC,EAAD,CAApC;EAAA;EAAA,IAAOS,MAAP;EAAA,IAAeC,SAAf;;EACA,kBAAkBT,UAAU,CAACE,YAAD,CAA5B;EAAA,IAAQQ,KAAR,eAAQA,KAAR;;EACA,IAAMC,MAAM,GAAGN,SAAS,EAAxB;EAEAJ,SAAS,CAAC,YAAM;IACdW,OAAO,CAACC,GAAR,CAAYL,MAAZ;EACD,CAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;EAIA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEM,MAAM,CAACC,SAApB;IAAA,WACE,MAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,cAApB;MAAA,WACE,KAAC,SAAD;QAAW,IAAI,EAAC,WAAhB;QAA4B,IAAI,EAAE,EAAlC;QAAsC,KAAK,EAAEL,MAAM,CAACM;MAApD,EADF,EAEE,KAAC,SAAD;QACE,KAAK,EAAE,CAACH,MAAM,CAACI,KAAR,EAAe;UAAEC,eAAe,EAAER,MAAM,CAACS,aAAP,CAAqBC;QAAxC,CAAf,CADT;QAEE,WAAW,EAAC,WAFd;QAGE,YAAY,EAAE,sBAACC,KAAD;UAAA,OAAWb,SAAS,CAACa,KAAD,CAApB;QAAA,CAHhB;QAIE,KAAK,EAAEd;MAJT,EAFF;IAAA,EADF,EAUE,KAAC,UAAD;MAAY,KAAK,EAAEM,MAAM,CAACS;IAA1B,EAVF;EAAA,EADF;AAcD;AAED,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;EAC/BV,SAAS,EAAE;IACTW,IAAI,EAAE;EADG,CADoB;EAI/BV,cAAc,EAAE;IACdW,aAAa,EAAE,KADD;IAEdC,UAAU,EAAE,QAFE;IAGdC,OAAO,EAAE;EAHK,CAJe;EAS/BX,KAAK,EAAE;IACLW,OAAO,EAAE,CADJ;IAELC,YAAY,EAAE,EAFT;IAGLC,UAAU,EAAE,EAHP;IAILC,KAAK,EAAE;EAJF,CATwB;EAe/BT,OAAO,EAAE;IACPG,IAAI,EAAE,CADC;IAEPO,MAAM,EAAE;EAFD;AAfsB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}