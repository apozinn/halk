{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { CountryModal } from \"./CountryModal\";\nimport { HeaderModal } from \"./HeaderModal\";\nimport { FlagType } from \"./types\";\nimport { CountryFilter } from \"./CountryFilter\";\nimport { FlagButton } from \"./FlagButton\";\nimport { useContext } from \"./CountryContext\";\nimport { CountryList } from \"./CountryList\";\n\nvar renderFlagButton = function renderFlagButton(props) {\n  return props.renderFlagButton ? props.renderFlagButton(props) : React.createElement(FlagButton, Object.assign({}, props));\n};\n\nvar _renderFilter = function renderFilter(props) {\n  return props.renderCountryFilter ? props.renderCountryFilter(props) : React.createElement(CountryFilter, Object.assign({}, props));\n};\n\nexport var CountryPicker = function CountryPicker(props) {\n  var countryCode = props.countryCode,\n      region = props.region,\n      subregion = props.subregion,\n      countryCodes = props.countryCodes,\n      renderButton = props.renderFlagButton,\n      renderCountryFilter = props.renderCountryFilter,\n      filterProps = props.filterProps,\n      modalProps = props.modalProps,\n      flatListProps = props.flatListProps,\n      onSelect = props.onSelect,\n      withEmoji = props.withEmoji,\n      withFilter = props.withFilter,\n      withCloseButton = props.withCloseButton,\n      withCountryNameButton = props.withCountryNameButton,\n      withCallingCodeButton = props.withCallingCodeButton,\n      withCurrencyButton = props.withCurrencyButton,\n      containerButtonStyle = props.containerButtonStyle,\n      withAlphaFilter = props.withAlphaFilter,\n      withCallingCode = props.withCallingCode,\n      withCurrency = props.withCurrency,\n      withFlag = props.withFlag,\n      withModal = props.withModal,\n      disableNativeModal = props.disableNativeModal,\n      withFlagButton = props.withFlagButton,\n      handleClose = props.onClose,\n      handleOpen = props.onOpen,\n      closeButtonImage = props.closeButtonImage,\n      closeButtonStyle = props.closeButtonStyle,\n      closeButtonImageStyle = props.closeButtonImageStyle,\n      excludeCountries = props.excludeCountries,\n      placeholder = props.placeholder,\n      preferredCountries = props.preferredCountries;\n\n  var _useState = useState({\n    visible: props.visible || false,\n    countries: [],\n    filter: '',\n    filterFocus: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var _useContext = useContext(),\n      translation = _useContext.translation,\n      getCountriesAsync = _useContext.getCountriesAsync;\n\n  var visible = state.visible,\n      filter = state.filter,\n      countries = state.countries,\n      filterFocus = state.filterFocus;\n  useEffect(function () {\n    if (state.visible !== props.visible) {\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        visible: props.visible || false\n      }));\n    }\n  }, [props.visible]);\n\n  var onOpen = function onOpen() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      visible: true\n    }));\n\n    if (handleOpen) {\n      handleOpen();\n    }\n  };\n\n  var onClose = function onClose() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      filter: '',\n      visible: false\n    }));\n\n    if (handleClose) {\n      handleClose();\n    }\n  };\n\n  var setFilter = function setFilter(filter) {\n    return setState(_objectSpread(_objectSpread({}, state), {}, {\n      filter: filter\n    }));\n  };\n\n  var setCountries = function setCountries(countries) {\n    return setState(_objectSpread(_objectSpread({}, state), {}, {\n      countries: countries\n    }));\n  };\n\n  var onSelectClose = function onSelectClose(country) {\n    onSelect(country);\n    onClose();\n  };\n\n  var onFocus = function onFocus() {\n    return setState(_objectSpread(_objectSpread({}, state), {}, {\n      filterFocus: true\n    }));\n  };\n\n  var onBlur = function onBlur() {\n    return setState(_objectSpread(_objectSpread({}, state), {}, {\n      filterFocus: false\n    }));\n  };\n\n  var flagProp = {\n    countryCode: countryCode,\n    withEmoji: withEmoji,\n    withCountryNameButton: withCountryNameButton,\n    withCallingCodeButton: withCallingCodeButton,\n    withCurrencyButton: withCurrencyButton,\n    withFlagButton: withFlagButton,\n    renderFlagButton: renderButton,\n    onOpen: onOpen,\n    containerButtonStyle: containerButtonStyle,\n    placeholder: placeholder\n  };\n  useEffect(function () {\n    getCountriesAsync(withEmoji ? FlagType.EMOJI : FlagType.FLAT, translation, region, subregion, countryCodes, excludeCountries, preferredCountries, withAlphaFilter).then(setCountries).catch(console.warn);\n  }, [translation, withEmoji]);\n  return React.createElement(React.Fragment, null, withModal && renderFlagButton(flagProp), React.createElement(CountryModal, Object.assign({}, _objectSpread({\n    visible: visible,\n    withModal: withModal,\n    disableNativeModal: disableNativeModal\n  }, modalProps), {\n    onRequestClose: onClose,\n    onDismiss: onClose\n  }), React.createElement(HeaderModal, Object.assign({}, {\n    withFilter: withFilter,\n    onClose: onClose,\n    closeButtonImage: closeButtonImage,\n    closeButtonImageStyle: closeButtonImageStyle,\n    closeButtonStyle: closeButtonStyle,\n    withCloseButton: withCloseButton\n  }, {\n    renderFilter: function renderFilter(props) {\n      return _renderFilter(_objectSpread(_objectSpread({}, props), {}, {\n        renderCountryFilter: renderCountryFilter,\n        onChangeText: setFilter,\n        value: filter,\n        onFocus: onFocus,\n        onBlur: onBlur\n      }, filterProps));\n    }\n  })), React.createElement(CountryList, Object.assign({}, {\n    onSelect: onSelectClose,\n    data: countries,\n    letters: [],\n    withAlphaFilter: withAlphaFilter && filter === '',\n    withCallingCode: withCallingCode,\n    withCurrency: withCurrency,\n    withFlag: withFlag,\n    withEmoji: withEmoji,\n    filter: filter,\n    filterFocus: filterFocus,\n    flatListProps: flatListProps\n  }))));\n};\nCountryPicker.defaultProps = {\n  withModal: true,\n  withAlphaFilter: false,\n  withCallingCode: false,\n  placeholder: 'Select Country'\n};","map":{"version":3,"mappings":"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","names":["React","useState","useEffect","CountryModal","HeaderModal","FlagType","CountryFilter","FlagButton","useContext","CountryList","renderFlagButton","props","Object","renderFilter","renderCountryFilter","CountryPicker","countryCode","region","subregion","countryCodes","renderButton","filterProps","modalProps","flatListProps","onSelect","withEmoji","withFilter","withCloseButton","withCountryNameButton","withCallingCodeButton","withCurrencyButton","containerButtonStyle","withAlphaFilter","withCallingCode","withCurrency","withFlag","withModal","disableNativeModal","withFlagButton","handleClose","onClose","handleOpen","onOpen","closeButtonImage","closeButtonStyle","closeButtonImageStyle","excludeCountries","placeholder","preferredCountries","visible","countries","filter","filterFocus","state","setState","translation","getCountriesAsync","setFilter","setCountries","onSelectClose","country","onFocus","onBlur","flagProp","EMOJI","FLAT","then","catch","console","warn","onRequestClose","onDismiss","onChangeText","value","data","letters","defaultProps"],"sourceRoot":"","sources":["../src/CountryPicker.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}