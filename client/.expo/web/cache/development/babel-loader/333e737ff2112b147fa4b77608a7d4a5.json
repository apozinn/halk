{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useEffect, useState, useContext } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from \"../../src/components/Themed\";\nimport { CodeField, Cursor, useBlurOnFulfill, useClearByFocusCell } from \"react-native-confirmation-code-field\";\nimport useColorScheme from \"../../src/hooks/useColorScheme\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { verifyCode } from \"../../middleware/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ReceiveCode(_ref) {\n  var navigation = _ref.navigation;\n  var theme = useColorScheme();\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var ref = useBlurOnFulfill({\n    value: value,\n    cellCount: 6\n  });\n  var _useClearByFocusCell = useClearByFocusCell({\n      value: value,\n      setValue: setValue\n    }),\n    _useClearByFocusCell2 = _slicedToArray(_useClearByFocusCell, 2),\n    props = _useClearByFocusCell2[0],\n    getCellOnLayoutHandler = _useClearByFocusCell2[1];\n  var _useContext = useContext(UserContext),\n    user = _useContext.user;\n  useEffect(function () {\n    if (value.length === 6) {\n      verifyCode(user.id, value).then(function (data) {\n        if (data.verify) {\n          navigation.navigate(\"CreateProfile\");\n        } else alert(\"codigo invalido, tente novamente.\");\n      });\n    }\n  }, [value]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"../../assets/images/verificationCode.png\"),\n      style: styles.image\n    }), _jsx(Text, {\n      style: styles.description,\n      children: \"Ins\\xEDra abaixo com o c\\xF3digo de verifica\\xE7\\xE3o enviado para o seu n\\xFAmero\"\n    }), _jsx(View, {\n      style: styles.codeContainer,\n      children: _jsx(CodeField, _objectSpread(_objectSpread({\n        ref: ref\n      }, props), {}, {\n        value: value,\n        onChangeText: function onChangeText(code) {\n          return setValue(code);\n        },\n        cellCount: 6,\n        rootStyle: _objectSpread(_objectSpread({}, styles.codeFieldRoot), {}, {\n          borderColor: theme === \"dark\" ? \"#333\" : \"#00000030\"\n        }),\n        keyboardType: \"number-pad\",\n        textContentType: \"oneTimeCode\",\n        renderCell: function renderCell(_ref2) {\n          var index = _ref2.index,\n            symbol = _ref2.symbol,\n            isFocused = _ref2.isFocused;\n          return _jsx(Text, {\n            style: [_objectSpread(_objectSpread({}, styles.cell), {}, {\n              borderColor: theme === \"dark\" ? \"#333\" : \"#00000030\"\n            })],\n            onLayout: getCellOnLayoutHandler(index),\n            children: symbol || (isFocused ? _jsx(Cursor, {}) : null)\n          }, index);\n        }\n      }))\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n    alignItems: \"center\"\n  },\n  image: {\n    width: 100,\n    height: 100,\n    marginTop: 100,\n    marginBottom: 10\n  },\n  codeFieldRoot: {\n    marginTop: 20\n  },\n  cell: {\n    width: 40,\n    height: 50,\n    lineHeight: 50,\n    fontSize: 24,\n    borderWidth: 2,\n    textAlign: \"center\",\n    borderRadius: 5,\n    marginRight: 5\n  },\n  codeContainer: {\n    marginHorizontal: 10\n  },\n  description: {\n    fontSize: 12,\n    textAlign: \"center\",\n    width: 290,\n    opacity: 0.9\n  }\n});","map":{"version":3,"names":["useEffect","useState","useContext","Text","CodeField","Cursor","useBlurOnFulfill","useClearByFocusCell","useColorScheme","UserContext","verifyCode","ReceiveCode","navigation","theme","value","setValue","ref","cellCount","props","getCellOnLayoutHandler","user","length","id","then","data","verify","navigate","alert","styles","container","require","image","description","codeContainer","code","codeFieldRoot","borderColor","index","symbol","isFocused","cell","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","alignItems","width","height","marginBottom","lineHeight","fontSize","borderWidth","textAlign","borderRadius","marginRight","marginHorizontal","opacity"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/register/receiveCode.tsx"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\nimport { Image, StatusBar, StyleSheet, View } from \"react-native\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { Text } from \"../../src/components/Themed\";\nimport {\n  CodeField,\n  Cursor,\n  useBlurOnFulfill,\n  useClearByFocusCell,\n} from \"react-native-confirmation-code-field\";\nimport useColorScheme from \"../../src/hooks/useColorScheme\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { verifyCode } from \"../../middleware/api\";\n\nexport default function ReceiveCode({\n  navigation,\n}: RootStackScreenProps<\"ReceiveCode\">) {\n  const theme = useColorScheme();\n  const [value, setValue] = useState(\"\");\n  const ref = useBlurOnFulfill({ value, cellCount: 6 });\n  const [props, getCellOnLayoutHandler] = useClearByFocusCell({\n    value,\n    setValue,\n  });\n\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    if (value.length === 6) {\n      verifyCode(user.id, value).then((data) => {\n        if (data.verify) {\n          navigation.navigate(\"CreateProfile\");\n        } else alert(\"codigo invalido, tente novamente.\");\n      });\n    }\n  }, [value]);\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require(\"../../assets/images/verificationCode.png\")}\n        style={styles.image}\n      />\n      <Text style={styles.description}>\n        Insíra abaixo com o código de verificação enviado para o seu número\n      </Text>\n      <View style={styles.codeContainer}>\n        <CodeField\n          ref={ref}\n          {...props}\n          value={value}\n          onChangeText={(code) => setValue(code)}\n          cellCount={6}\n          rootStyle={{\n            ...styles.codeFieldRoot,\n            borderColor: theme === \"dark\" ? \"#333\" : \"#00000030\",\n          }}\n          keyboardType=\"number-pad\"\n          textContentType=\"oneTimeCode\"\n          renderCell={({ index, symbol, isFocused }) => (\n            <Text\n              key={index}\n              style={[\n                {\n                  ...styles.cell,\n                  borderColor: theme === \"dark\" ? \"#333\" : \"#00000030\",\n                },\n              ]}\n              onLayout={getCellOnLayoutHandler(index)}\n            >\n              {symbol || (isFocused ? <Cursor /> : null)}\n            </Text>\n          )}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n    alignItems: \"center\",\n  },\n  image: {\n    width: 100,\n    height: 100,\n    marginTop: 100,\n    marginBottom: 10,\n  },\n  codeFieldRoot: { marginTop: 20 },\n  cell: {\n    width: 40,\n    height: 50,\n    lineHeight: 50,\n    fontSize: 24,\n    borderWidth: 2,\n    textAlign: \"center\",\n    borderRadius: 5,\n    marginRight: 5,\n  },\n  codeContainer: {\n    marginHorizontal: 10,\n  },\n  description: {\n    fontSize: 12,\n    textAlign: \"center\",\n    width: 290,\n    opacity: 0.9,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}