{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, createRef } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text } from \"./Themed\";\nimport { Userpic } from \"react-native-userpic\";\nimport { Decipher } from \"../../middleware/crypto\";\nimport { Ionicons, FontAwesome } from \"@expo/vector-icons\";\nimport Modal from \"react-native-modal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Chat = function (_Component) {\n  _inherits(Chat, _Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this, props);\n    _this.scrollViewRef = createRef();\n    _this.badgeProps = {\n      size: 25,\n      borderRadius: 50,\n      animate: true\n    };\n\n    _this.open = function () {\n      return _this.setState({\n        visible: true\n      });\n    };\n\n    _this.close = function () {\n      return _this.setState({\n        visible: false\n      });\n    };\n\n    _this.isVisible = function () {\n      return _this.state.visible;\n    };\n\n    _this.state = {\n      visible: false,\n      isOnline: false,\n      scrollOffset: null\n    };\n    _this.user = props.user;\n    _this.chats = props.chats;\n    _this.updateChats = props.updateChats;\n    _this.chat = props.chat;\n    _this.navigation = props.navigation;\n    _this.socket = props.socket;\n    _this.colors = props.colors;\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"handleOnScroll\",\n    value: function handleOnScroll(event) {\n      this.setState({\n        scrollOffset: event.nativeEvent.contentOffset.y\n      });\n    }\n  }, {\n    key: \"handleScrollTo\",\n    value: function handleScrollTo(p) {}\n  }, {\n    key: \"ModalChat\",\n    value: function ModalChat() {\n      var _this2 = this;\n\n      console.log(this.colors);\n      return _jsx(Modal, {\n        testID: \"ModalChat\",\n        isVisible: this.isVisible(),\n        onSwipeComplete: function onSwipeComplete() {\n          return _this2.close();\n        },\n        swipeDirection: [\"down\"],\n        scrollTo: this.handleScrollTo,\n        scrollOffset: this.state.scrollOffset,\n        scrollOffsetMax: 400 - 300,\n        propagateSwipe: true,\n        style: styles.modal,\n        children: _jsx(View, {\n          style: styles.scrollableModal,\n          children: _jsx(ScrollView, {\n            onScroll: this.handleOnScroll,\n            scrollEventThrottle: 16,\n            children: _jsxs(View, {\n              style: [styles.modalContent, {\n                backgroundColor: this.colors.defaultColors.background\n              }],\n              children: [_jsx(View, {\n                style: styles.modalTopProfile\n              }), _jsx(View, {\n                style: styles.modalLinks,\n                children: _jsxs(TouchableOpacity, {\n                  style: styles.modalLink,\n                  children: [_jsx(FontAwesome, {\n                    name: \"user-circle\",\n                    size: 26,\n                    color: this.colors.tint\n                  }), _jsx(Text, {\n                    style: styles.modalLinkText,\n                    children: \"Perfil\"\n                  })]\n                })\n              })]\n            })\n          })\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var lastMessage = this.chat.messages[this.chat.messages.length - 1];\n      if (!lastMessage) return null;\n      var unredMessages = this.chat.messages.filter(function (m) {\n        return m.read === false;\n      });\n      var messageTime = new Date(lastMessage.createdAt).toLocaleTimeString();\n\n      if (this.socket) {\n        this.socket.emit(\"verifyIfUserIsOnline\", {\n          userId: this.chat.user.id\n        });\n        this.socket.on(\"receiveIfUserIsOnline\", function (callback) {\n          return _this3.state.isOnline = callback;\n        });\n      }\n\n      var content = this.chat.key ? Decipher(lastMessage.content, this.chat.key) : \"Nova mensagem\";\n      return _jsxs(TouchableOpacity, {\n        style: styles.chatContainer,\n        onPress: function onPress() {\n          _this3.navigation.navigate(\"Chat\", {\n            id: _this3.chat.id\n          });\n        },\n        onLongPress: function onLongPress() {\n          return _this3.open();\n        },\n        children: [_jsx(_Fragment, {\n          children: this.ModalChat()\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Userpic, {\n            size: 40,\n            name: this.chat.user.profile.name,\n            source: {\n              uri: this.chat.user.profile.avatar\n            },\n            colorize: true,\n            borderRadius: \"50%\",\n            badge: true,\n            badgeColor: this.state.isOnline ? \"#00ff0d\" : \"#919191\",\n            badgePosition: \"bottom-right\",\n            badgeProps: this.badgeProps,\n            style: {\n              marginRight: 10\n            }\n          }), _jsxs(View, {\n            style: {\n              justifyContent: \"center\"\n            },\n            children: [_jsx(Text, {\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: this.chat.user.profile.name\n            }), lastMessage.author.id === this.user.id ? _jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                alignItems: \"center\"\n              },\n              children: [_jsx(Ionicons, {\n                name: \"checkmark-done\",\n                size: 20,\n                color: lastMessage.read ? \"#2f95dc\" : \"gray\",\n                style: {\n                  marginRight: 2\n                }\n              }), _jsx(Text, {\n                style: styles.messageContent,\n                children: content.length > 28 ? content.slice(0, 28) + \"...\" : content\n              })]\n            }) : _jsx(Text, {\n              children: content.length > 30 ? content.slice(0, 30) + \"...\" : content\n            })]\n          })]\n        }), _jsxs(View, {\n          style: {\n            alignItems: \"center\"\n          },\n          children: [_jsx(Text, {\n            style: styles.messageDate,\n            children: messageTime.slice(0, 5)\n          }), !unredMessages.length ? _jsx(_Fragment, {}) : _jsx(Text, {\n            style: styles.unread,\n            children: unredMessages.length\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nvar styles = StyleSheet.create({\n  chatContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    padding: 5\n  },\n  messageContent: {\n    fontSize: 13,\n    opacity: 0.7,\n    alignItems: \"center\"\n  },\n  messageDate: {\n    fontSize: 11,\n    marginBottom: 3\n  },\n  unread: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    minWidth: 15,\n    minHeight: 15,\n    textAlign: \"center\",\n    color: \"white\"\n  },\n  modal: {\n    justifyContent: \"flex-end\",\n    margin: 0\n  },\n  scrollableModal: {\n    minHeight: 500\n  },\n  modalContent: {\n    height: 500,\n    padding: 10,\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10\n  },\n  modalTopProfile: {},\n  modalLinks: {},\n  modalLink: {\n    padding: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  modalLinkText: {\n    marginLeft: 10,\n    fontSize: 17\n  }\n});\nexport default Chat;","map":{"version":3,"names":["React","Component","createRef","Text","Userpic","Decipher","Ionicons","FontAwesome","Modal","Chat","props","scrollViewRef","badgeProps","size","borderRadius","animate","open","setState","visible","close","isVisible","state","isOnline","scrollOffset","user","chats","updateChats","chat","navigation","socket","colors","event","nativeEvent","contentOffset","y","p","console","log","handleScrollTo","styles","modal","scrollableModal","handleOnScroll","modalContent","backgroundColor","defaultColors","background","modalTopProfile","modalLinks","modalLink","tint","modalLinkText","lastMessage","messages","length","unredMessages","filter","m","read","messageTime","Date","createdAt","toLocaleTimeString","emit","userId","id","on","callback","content","key","chatContainer","navigate","ModalChat","flexDirection","profile","name","uri","avatar","marginRight","justifyContent","fontWeight","author","alignItems","messageContent","slice","messageDate","unread","StyleSheet","create","padding","fontSize","opacity","marginBottom","minWidth","minHeight","textAlign","color","margin","height","borderTopLeftRadius","borderTopRightRadius","marginLeft"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/src/components/chat.tsx"],"sourcesContent":["import React, { Component, ReactElement, createRef } from \"react\";\nimport { StyleSheet, TouchableOpacity, View, ScrollView } from \"react-native\";\nimport { Text } from \"./Themed\";\nimport { Userpic } from \"react-native-userpic\";\nimport CreateSocketConnectio from \"../utils/socket\";\nimport { Cipher, Decipher } from \"../../middleware/crypto\";\nimport { Ionicons, FontAwesome } from \"@expo/vector-icons\";\nimport Modal from \"react-native-modal\";\n\nclass Chat extends Component {\n  public scrollViewRef: React.RefObject<ScrollView> = createRef();\n  public badgeProps = {\n    size: 25,\n    borderRadius: 50,\n    animate: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      isOnline: false,\n      scrollOffset: null,\n    };\n\n    this.user = props.user;\n    this.chats = props.chats;\n    this.updateChats = props.updateChats;\n\n    this.chat = props.chat;\n    this.navigation = props.navigation;\n    this.socket = props.socket;\n    this.colors = props.colors;\n  }\n\n  handleOnScroll(event) {\n    this.setState({ scrollOffset: event.nativeEvent.contentOffset.y });\n  }\n\n  handleScrollTo(p) {}\n\n  open = () => this.setState({ visible: true } as any);\n  close = () => this.setState({ visible: false } as any);\n  isVisible = () => this.state.visible;\n\n  ModalChat() {\n    console.log(this.colors);\n\n    return (\n      <Modal\n        testID={\"ModalChat\"}\n        isVisible={this.isVisible()}\n        onSwipeComplete={() => this.close()}\n        swipeDirection={[\"down\"]}\n        scrollTo={this.handleScrollTo}\n        scrollOffset={this.state.scrollOffset}\n        scrollOffsetMax={400 - 300}\n        propagateSwipe={true}\n        style={styles.modal}\n      >\n        <View style={styles.scrollableModal}>\n          <ScrollView onScroll={this.handleOnScroll} scrollEventThrottle={16}>\n            <View style={[styles.modalContent, {backgroundColor: this.colors.defaultColors.background}]}>\n              <View style={styles.modalTopProfile}></View>\n              <View style={styles.modalLinks}>\n                <TouchableOpacity style={styles.modalLink}>\n                  <FontAwesome name=\"user-circle\" size={26} color={this.colors.tint} />\n                  <Text style={styles.modalLinkText}>Perfil</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </ScrollView>\n        </View>\n      </Modal>\n    );\n  }\n\n  render() {\n    const lastMessage = this.chat.messages[this.chat.messages.length - 1];\n    if (!lastMessage) return null;\n    const unredMessages = this.chat.messages.filter((m) => m.read === false);\n    const messageTime = new Date(lastMessage.createdAt).toLocaleTimeString();\n\n    if (this.socket) {\n      this.socket.emit(\"verifyIfUserIsOnline\", { userId: this.chat.user.id });\n      this.socket.on(\n        \"receiveIfUserIsOnline\",\n        (callback) => (this.state.isOnline = callback)\n      );\n    }\n\n    let content = this.chat.key\n      ? Decipher(lastMessage.content, this.chat.key)\n      : \"Nova mensagem\";\n\n    return (\n      <TouchableOpacity\n        style={styles.chatContainer}\n        onPress={() => {\n          this.navigation.navigate(\"Chat\", {\n            id: this.chat.id,\n          });\n        }}\n        onLongPress={() => this.open()}\n      >\n        <>{this.ModalChat()}</>\n        <View style={{ flexDirection: \"row\" }}>\n          <Userpic\n            size={40}\n            name={this.chat.user.profile.name}\n            source={{ uri: this.chat.user.profile.avatar }}\n            colorize={true}\n            borderRadius=\"50%\"\n            badge={true}\n            badgeColor={this.state.isOnline ? \"#00ff0d\" : \"#919191\"}\n            badgePosition={\"bottom-right\"}\n            badgeProps={this.badgeProps}\n            style={{ marginRight: 10 }}\n          />\n          <View style={{ justifyContent: \"center\" }}>\n            <Text style={{ fontWeight: \"bold\" }}>\n              {this.chat.user.profile.name}\n            </Text>\n            {lastMessage.author.id === this.user.id ? (\n              <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                <Ionicons\n                  name=\"checkmark-done\"\n                  size={20}\n                  color={lastMessage.read ? \"#2f95dc\" : \"gray\"}\n                  style={{ marginRight: 2 }}\n                />\n                <Text style={styles.messageContent}>\n                  {content.length > 28 ? content.slice(0, 28) + \"...\" : content}\n                </Text>\n              </View>\n            ) : (\n              <Text>\n                {content.length > 30 ? content.slice(0, 30) + \"...\" : content}\n              </Text>\n            )}\n          </View>\n        </View>\n        <View style={{ alignItems: \"center\" }}>\n          <Text style={styles.messageDate}>{messageTime.slice(0, 5)}</Text>\n          {!unredMessages.length ? (\n            <></>\n          ) : (\n            <Text style={styles.unread}>{unredMessages.length}</Text>\n          )}\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  chatContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    padding: 5,\n  },\n  messageContent: {\n    fontSize: 13,\n    opacity: 0.7,\n    alignItems: \"center\",\n  },\n  messageDate: {\n    fontSize: 11,\n    marginBottom: 3,\n  },\n  unread: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    minWidth: 15,\n    minHeight: 15,\n    textAlign: \"center\",\n    color: \"white\",\n  },\n  modal: {\n    justifyContent: \"flex-end\",\n    margin: 0,\n  },\n  scrollableModal: {\n    minHeight: 500,\n  },\n  modalContent: {\n    height: 500,\n    padding: 10,\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n  },\n  modalTopProfile: {},\n  modalLinks: {},\n  modalLink: {\n    padding: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n\n  },\n  modalLinkText: {\n    marginLeft: 10,\n    fontSize: 17,\n  },\n});\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}