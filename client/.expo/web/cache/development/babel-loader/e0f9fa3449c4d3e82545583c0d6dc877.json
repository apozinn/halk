{"ast":null,"code":"import { Entypo, Feather, Ionicons, AntDesign, MaterialIcons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Colors from \"../constants/Colors\";\nimport useColorScheme from \"../src/hooks/useColorScheme\";\nimport LinkingConfiguration from \"./LinkingConfiguration\";\nimport ChatsScreen from \"../screens/app/chats\";\nimport StatusScreen from \"../screens/app/status\";\nimport CallsScreen from \"../screens/app/Calls\";\nimport MenuScreen from \"../screens/Menu/menu\";\nimport RegisterScreen from \"../screens/register/register\";\nimport WelcomeScreen from \"../screens/register/welcome\";\nimport ReceiveCodeScreen from \"../screens/register/receiveCode\";\nimport CreateProfileScreen from \"../screens/register/createProfile\";\nimport ChatScreen from \"../screens/chat/chat\";\nimport ProfileScreen from \"../screens/chat/profile\";\nimport NewChatScreen from \"../screens/app/newChat\";\nimport SettingsScreen from \"../screens/Menu/settings\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  console.log(DarkTheme, DefaultTheme);\n  return _jsx(NavigationContainer, {\n    linking: LinkingConfiguration,\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Welcome\",\n      component: WelcomeScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Register\",\n      component: RegisterScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"ReceiveCode\",\n      component: ReceiveCodeScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"CreateProfile\",\n      component: CreateProfileScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Chat\",\n      component: ChatScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Profile\",\n      component: ProfileScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NewChat\",\n      component: NewChatScreen,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Settings\",\n        component: SettingsScreen\n      })\n    })]\n  });\n}\n\nvar BottomTab = createBottomTabNavigator();\n\nfunction BottomTabNavigator() {\n  var colorScheme = useColorScheme();\n  return _jsxs(BottomTab.Navigator, {\n    initialRouteName: \"Chats\",\n    screenOptions: {\n      tabBarActiveTintColor: Colors[colorScheme].tint\n    },\n    children: [_jsx(BottomTab.Screen, {\n      name: \"Chats\",\n      component: ChatsScreen,\n      options: function options(_ref2) {\n        var navigation = _ref2.navigation;\n        return {\n          title: 'Chats',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color;\n            return _jsx(Ionicons, {\n              name: \"chatbox-ellipses\",\n              size: 24,\n              color: color\n            });\n          },\n          headerRight: function headerRight() {\n            return _jsxs(View, {\n              style: {\n                justifyContent: 'space-between',\n                flexDirection: 'row',\n                alignItems: 'center'\n              },\n              children: [_jsx(Pressable, {\n                onPress: function onPress() {},\n                style: function style(_ref4) {\n                  var pressed = _ref4.pressed;\n                  return {\n                    opacity: pressed ? 0.5 : 1\n                  };\n                },\n                children: _jsx(Feather, {\n                  name: \"more-vertical\",\n                  size: 24,\n                  color: \"white\"\n                })\n              }), _jsx(Pressable, {\n                onPress: function onPress() {},\n                style: function style(_ref5) {\n                  var pressed = _ref5.pressed;\n                  return {\n                    opacity: pressed ? 0.5 : 1\n                  };\n                },\n                children: _jsx(AntDesign, {\n                  name: \"search1\",\n                  size: 24,\n                  color: \"white\"\n                })\n              })]\n            });\n          },\n          headerStyle: {\n            height: 35\n          },\n          headerTitleStyle: {\n            fontSize: 14\n          },\n          headerTitleAlign: 'center',\n          headerLeft: function headerLeft() {\n            return _jsx(Entypo, {\n              name: \"camera\",\n              size: 24,\n              color: white\n            });\n          }\n        };\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Status\",\n      component: StatusScreen,\n      options: {\n        title: 'Status',\n        tabBarIcon: function tabBarIcon(_ref6) {\n          var color = _ref6.color;\n          return _jsx(MaterialIcons, {\n            name: \"history-toggle-off\",\n            size: 24,\n            color: color\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Calls\",\n      component: CallsScreen,\n      options: {\n        title: 'Calls',\n        tabBarIcon: function tabBarIcon(_ref7) {\n          var color = _ref7.color;\n          return _jsx(Ionicons, {\n            name: \"call\",\n            size: 24,\n            color: color\n          });\n        }\n      }\n    }), _jsx(BottomTab.Screen, {\n      name: \"Menu\",\n      component: MenuScreen,\n      options: {\n        tabBarIcon: function tabBarIcon(_ref8) {\n          var color = _ref8.color;\n          return _jsx(Feather, {\n            name: \"menu\",\n            size: 24,\n            color: color\n          });\n        },\n        headerShown: false\n      }\n    })]\n  });\n}","map":{"version":3,"names":["Entypo","Feather","Ionicons","AntDesign","MaterialIcons","createBottomTabNavigator","NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","Colors","useColorScheme","LinkingConfiguration","ChatsScreen","StatusScreen","CallsScreen","MenuScreen","RegisterScreen","WelcomeScreen","ReceiveCodeScreen","CreateProfileScreen","ChatScreen","ProfileScreen","NewChatScreen","SettingsScreen","NotFoundScreen","Navigation","colorScheme","console","log","Stack","RootNavigator","BottomTabNavigator","headerShown","presentation","BottomTab","tabBarActiveTintColor","tint","navigation","title","tabBarIcon","color","headerRight","justifyContent","flexDirection","alignItems","pressed","opacity","headerStyle","height","headerTitleStyle","fontSize","headerTitleAlign","headerLeft","white"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/navigation/index.tsx"],"sourcesContent":["import { Entypo, Feather, Ionicons, AntDesign, MaterialIcons } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable, View } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../src/hooks/useColorScheme';\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nimport ChatsScreen from '../screens/app/chats';\nimport StatusScreen from '../screens/app/status';\nimport CallsScreen from '../screens/app/Calls';\nimport MenuScreen from '../screens/Menu/menu';\n\nimport RegisterScreen from '../screens/register/register';\nimport WelcomeScreen from '../screens/register/welcome';\nimport ReceiveCodeScreen from '../screens/register/receiveCode';\nimport CreateProfileScreen from '../screens/register/createProfile';\nimport ChatScreen from '../screens/chat/chat';\nimport ProfileScreen from '../screens/chat/profile';\nimport NewChatScreen from '../screens/app/newChat';\n\nimport SettingsScreen from '../screens/Menu/settings';\n\nimport NotFoundScreen from '../screens/NotFoundScreen';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  console.log(DarkTheme, DefaultTheme);\n\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"Welcome\" component={WelcomeScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"Register\" component={RegisterScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"ReceiveCode\" component={ReceiveCodeScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"CreateProfile\" component={CreateProfileScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"Chat\" component={ChatScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"Profile\" component={ProfileScreen} options={{ headerShown: false }} />\n      <Stack.Screen name=\"NewChat\" component={NewChatScreen} options={{ headerShown: false }} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Settings\" component={SettingsScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\nconst BottomTab = createBottomTabNavigator<RootTabParamList>();\n\nfunction BottomTabNavigator() {\n  const colorScheme = useColorScheme();\n\n  return (\n    <BottomTab.Navigator\n      initialRouteName=\"Chats\"\n      screenOptions={{\n        tabBarActiveTintColor: Colors[colorScheme].tint,\n      }}>\n      <BottomTab.Screen\n        name=\"Chats\"\n        component={ChatsScreen}\n        options={({ navigation }: RootTabScreenProps<'Chats'>) => ({\n          title: 'Chats',\n          tabBarIcon: ({ color }) => <Ionicons name=\"chatbox-ellipses\" size={24} color={color} />,\n          headerRight: () => (\n            <View style={{\n              justifyContent: 'space-between',\n              flexDirection: 'row',\n              alignItems: 'center'\n            }}>\n            <Pressable\n            onPress={() => {}}\n            style={({ pressed }) => ({\n              opacity: pressed ? 0.5 : 1,\n            })}>\n            <Feather name=\"more-vertical\" size={24} color=\"white\" />\n            </Pressable>\n\n            <Pressable\n            onPress={() => {}}\n            style={({ pressed }) => ({\n              opacity: pressed ? 0.5 : 1,\n            })}>\n            <AntDesign name=\"search1\" size={24} color=\"white\" />\n            </Pressable>\n\n            </View>\n          ),\n          headerStyle: {\n            height: 35,\n          },\n          headerTitleStyle: {\n            fontSize: 14,\n          },\n          headerTitleAlign: 'center',\n          headerLeft: () => <Entypo name=\"camera\" size={24} color={white} />,\n        })}\n      />\n      <BottomTab.Screen\n        name=\"Status\"\n        component={StatusScreen}\n        options={{\n          title: 'Status',\n          tabBarIcon: ({ color }) => <MaterialIcons name=\"history-toggle-off\" size={24} color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Calls\"\n        component={CallsScreen}\n        options={{\n          title: 'Calls',\n          tabBarIcon: ({ color }) => <Ionicons name=\"call\" size={24} color={color} />,\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Menu\"\n        component={MenuScreen}\n        options={{\n          tabBarIcon: ({ color }) =><Feather name=\"menu\" size={24} color={color} />,\n          headerShown: false,\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}