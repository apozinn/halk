{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\n\nvar translate = require('@vitalets/google-translate-api');\n\nexport default function Translate() {\n  return _Translate.apply(this, arguments);\n}\n\nfunction _Translate() {\n  _Translate = _asyncToGenerator(function* () {\n    translate('eu', {\n      from: 'pt',\n      to: 'en'\n    }).then(function (res) {\n      console.log(res);\n    }).catch(function (err) {\n      return console.log(err.message);\n    });\n  });\n  return _Translate.apply(this, arguments);\n}","map":{"version":3,"names":["translate","require","Translate","from","to","then","res","console","log","catch","err","message"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/middleware/translate.ts"],"sourcesContent":["const translate = require('@vitalets/google-translate-api');\nimport { Platform, NativeModules } from 'react-native'\n\nexport default async function Translate() {\n    /* let language\n\n    switch(Platform.OS) {\n        case 'ios': {\n            language = NativeModules.SettingsManager.settings.AppleLocale ||\n            NativeModules.SettingsManager.settings.AppleLanguages[0];\n        } break;\n        case 'android': {\n            language =  NativeModules.I18nManager.localeIdentifier;\n        } break;\n        case 'web': {\n            language = window.navigator.language;\n        } break;\n        default: {\n            language = 'en';\n        }\n    } */\n\n    translate('eu', { from: 'pt', to: 'en'}).then(res => {\n        console.log(res);\n    }).catch(err => console.log(err.message));\n}"],"mappings":";;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,gCAAD,CAAzB;;AAGA,wBAA8BC,SAA9B;EAAA;AAAA;;;iCAAe,aAA2B;IAmBtCF,SAAS,CAAC,IAAD,EAAO;MAAEG,IAAI,EAAE,IAAR;MAAcC,EAAE,EAAE;IAAlB,CAAP,CAAT,CAAyCC,IAAzC,CAA8C,UAAAC,GAAG,EAAI;MACjDC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACH,CAFD,EAEGG,KAFH,CAES,UAAAC,GAAG;MAAA,OAAIH,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,OAAhB,CAAJ;IAAA,CAFZ;EAGH,C"},"metadata":{},"sourceType":"module"}