{"ast":null,"code":"import { createContext } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var ChatsContext = createContext({});\nexport var ChatsProvider = function ChatsProvider(_ref) {\n  var children = _ref.children;\n  return _jsx(ChatsContext.Provider, {\n    value: {},\n    children: children\n  });\n};","map":{"version":3,"names":["createContext","ChatsContext","ChatsProvider","children"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/src/contexts/chats.tsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\ninterface ChatsInterface {\n  chats: Array;\n  updateUser: Function;\n}\n\nexport const ChatsContext = createContext<ChatsInterface>({} as ChatsInterface);\n\nexport const ChatsProvider = ({ children }: any) => {\n  // const [loads, setLoads] = useState(0);\n  //\n  // const updateChats = (newChats: any) => {\n  //   setChats({\n  //     chats: newChats.chats,\n  //     updateChats: updateChats,\n  //   });\n  // };\n  //\n  // const initialValue: ChatsInterface = {\n  //   chats: [],\n  //   updateChats: updateChats,\n  // };\n  //\n  // const [chats, setChats] = useState<ChatsInterface>(initialValue);\n  //\n  // useEffect(() => {\n  //   AsyncStorage.getItem(\"chats\").then((data: any) => {\n  //     const dt = JSON.parse(data);\n  //\n  //     if (dt) {\n  //       updateChats(dt);\n  //     } else updateChats(initialValue);\n  //   });\n  // }, []);\n  //\n  // useEffect(() => {\n  //   if (chats !== initialValue) {\n  //     AsyncStorage.setItem(\"chats\", JSON.stringify(chats));\n  //   }\n  //\n  //   setLoads(loads + 1);\n  // }, [chats]);\n  //\n  // if (loads === 0) return;\n\n  return <ChatsContext.Provider value={{}}>{children}</ChatsContext.Provider>;\n};\n"],"mappings":"AAAA,SAASA,aAAT,QAAmD,OAAnD;;AAQA,OAAO,IAAMC,YAAY,GAAGD,aAAa,CAAiB,EAAjB,CAAlC;AAEP,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,OAAuB;EAAA,IAApBC,QAAoB,QAApBA,QAAoB;EAqClD,OAAO,KAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAE,EAA9B;IAAA,UAAmCA;EAAnC,EAAP;AACD,CAtCM"},"metadata":{},"sourceType":"module"}