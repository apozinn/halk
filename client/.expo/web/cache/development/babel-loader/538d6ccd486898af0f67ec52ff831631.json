{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Text } from \"../../src/components/Themed\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { getColors } from \"../../constants/Colors\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Calls(_ref) {\n  var navigation = _ref.navigation;\n  var _useContext = useContext(UserContext),\n    user = _useContext.user;\n  var _useContext2 = useContext(ChatsContext),\n    chats = _useContext2.chats;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    calls = _useState2[0],\n    setCalls = _useState2[1];\n  var colors = getColors();\n  useEffect(function () {\n    if (!calls.length) {\n      setCalls(function (current) {\n        return [].concat(_toConsumableArray(current), [{\n          title: \"Chamadas recentes\",\n          data: [{\n            props: null\n          }]\n        }]);\n      });\n    }\n  }, []);\n  function CallContainer(_ref2) {\n    var call = _ref2.call;\n    if (call.props === null) {\n      return _jsx(_Fragment, {});\n    } else {\n      return _jsx(_Fragment, {});\n    }\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(TouchableOpacity, {\n      style: styles.newCall,\n      onPress: function onPress() {},\n      children: [_jsx(View, {\n        style: styles.newCallButton,\n        children: _jsx(MaterialIcons, {\n          name: \"add-ic-call\",\n          size: 27,\n          color: \"white\"\n        })\n      }), _jsxs(View, {\n        style: {\n          marginLeft: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: \"Inicie uma nova chamada\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 12\n          },\n          children: \"Toque para iniciar uma chamada com outro usu\\xE1rio\"\n        })]\n      })]\n    }), _jsx(SectionList, {\n      sections: calls,\n      keyExtractor: function keyExtractor(item, index) {\n        return item + index;\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(CallContainer, {\n          call: item\n        });\n      },\n      renderSectionHeader: function renderSectionHeader(_ref4) {\n        var title = _ref4.section.title;\n        return _jsx(Text, {\n          style: styles.sectionTitle,\n          children: title\n        });\n      },\n      style: {\n        marginHorizontal: 10\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight\n  },\n  newCall: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    margin: 10\n  },\n  newCallButton: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    width: 60,\n    height: 60,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 5\n  },\n  sectionTitle: {\n    fontSize: 13,\n    opacity: 0.8\n  }\n});","map":{"version":3,"names":["useEffect","useState","useContext","MaterialIcons","Text","UserContext","ChatsContext","getColors","Calls","navigation","user","chats","calls","setCalls","colors","length","current","title","data","props","CallContainer","call","styles","container","newCall","newCallButton","marginLeft","fontWeight","fontSize","item","index","section","sectionTitle","marginHorizontal","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","flexDirection","alignItems","margin","backgroundColor","borderRadius","width","height","justifyContent","padding","opacity"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/app/Calls.tsx"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  StatusBar,\n  TouchableOpacity,\n  SectionList,\n} from \"react-native\";\nimport { RootTabScreenProps } from \"../../types\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Text, TextInput } from \"../../src/components/Themed\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { Userpic } from \"react-native-userpic\";\nimport { getColors } from \"../../constants/Colors\";\n\nexport default function Calls({ navigation }: RootTabScreenProps<\"Calls\">) {\n  const { user } = useContext(UserContext);\n  const { chats } = useContext(ChatsContext);\n  const [calls, setCalls] = useState([]);\n\n  const colors = getColors();\n\n  useEffect(() => {\n    if (!calls.length) {\n      setCalls((current) => [\n        ...current,\n        {\n          title: \"Chamadas recentes\",\n          data: [{ props: null }],\n        },\n      ]);\n    }\n  }, []);\n\n  function CallContainer({ call }) {\n    if (call.props === null) {\n      return <></>\n    } else {\n      return <></>;\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity style={styles.newCall} onPress={() => {}}>\n        <View style={styles.newCallButton}>\n          <MaterialIcons name=\"add-ic-call\" size={27} color=\"white\" />\n        </View>\n        <View style={{ marginLeft: 10 }}>\n          <Text style={{ fontWeight: \"bold\" }}>Inicie uma nova chamada</Text>\n          <Text style={{ fontSize: 12 }}>\n            Toque para iniciar uma chamada com outro usu√°rio\n          </Text>\n        </View>\n      </TouchableOpacity>\n\n      <SectionList\n        sections={calls}\n        keyExtractor={(item, index) => item + index}\n        renderItem={({ item }) => <CallContainer call={item} />}\n        renderSectionHeader={({ section: { title } }) => (\n          <Text style={styles.sectionTitle}>{title}</Text>\n        )}\n        style={{ marginHorizontal: 10 }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n  },\n  newCall: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    margin: 10,\n  },\n  newCallButton: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    width: 60,\n    height: 60,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 5,\n  },\n  sectionTitle: {\n    fontSize: 13,\n    opacity: 0.8,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}