{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Text } from \"../../src/components/Themed\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { getColors } from \"../../constants/Colors\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Calls(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var _useContext2 = useContext(ChatsContext),\n      chats = _useContext2.chats;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      calls = _useState2[0],\n      setCalls = _useState2[1];\n\n  var colors = getColors();\n  useEffect(function () {\n    if (!calls.length) {\n      setCalls(function (current) {\n        return [].concat(_toConsumableArray(current), [{\n          title: \"Chamadas recentes\",\n          data: [{\n            props: null\n          }]\n        }]);\n      });\n    }\n  }, []);\n\n  function CallContainer(_ref2) {\n    var call = _ref2.call;\n\n    if (call.props === null) {\n      return _jsx(_Fragment, {});\n    } else {\n      return _jsx(_Fragment, {});\n    }\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(TouchableOpacity, {\n      style: styles.newCall,\n      onPress: function onPress() {},\n      children: [_jsx(View, {\n        style: styles.newCallButton,\n        children: _jsx(MaterialIcons, {\n          name: \"add-ic-call\",\n          size: 27,\n          color: \"white\"\n        })\n      }), _jsxs(View, {\n        style: {\n          marginLeft: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: \"Inicie uma nova chamada\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 12\n          },\n          children: \"Toque para iniciar uma chamada com outro usu\\xE1rio\"\n        })]\n      })]\n    }), _jsx(SectionList, {\n      sections: calls,\n      keyExtractor: function keyExtractor(item, index) {\n        return item + index;\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(CallContainer, {\n          call: item\n        });\n      },\n      renderSectionHeader: function renderSectionHeader(_ref4) {\n        var title = _ref4.section.title;\n        return _jsx(Text, {\n          style: styles.sectionTitle,\n          children: title\n        });\n      },\n      style: {\n        marginHorizontal: 10\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight\n  },\n  newCall: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    margin: 10\n  },\n  newCallButton: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    width: 60,\n    height: 60,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 5\n  },\n  sectionTitle: {\n    fontSize: 13,\n    opacity: 0.8\n  }\n});","map":{"version":3,"names":["useEffect","useState","useContext","MaterialIcons","Text","UserContext","ChatsContext","getColors","Calls","navigation","user","chats","calls","setCalls","colors","length","current","title","data","props","CallContainer","call","styles","container","newCall","newCallButton","marginLeft","fontWeight","fontSize","item","index","section","sectionTitle","marginHorizontal","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","flexDirection","alignItems","margin","backgroundColor","borderRadius","width","height","justifyContent","padding","opacity"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/app/Calls.tsx"],"sourcesContent":["import { useEffect, useState, useContext } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  StatusBar,\n  TouchableOpacity,\n  SectionList,\n} from \"react-native\";\nimport { RootTabScreenProps } from \"../../types\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { Text, TextInput } from \"../../src/components/Themed\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { Userpic } from \"react-native-userpic\";\nimport { getColors } from \"../../constants/Colors\";\n\nexport default function Calls({ navigation }: RootTabScreenProps<\"Calls\">) {\n  const { user } = useContext(UserContext);\n  const { chats } = useContext(ChatsContext);\n  const [calls, setCalls] = useState([]);\n\n  const colors = getColors();\n\n  useEffect(() => {\n    if (!calls.length) {\n      setCalls((current) => [\n        ...current,\n        {\n          title: \"Chamadas recentes\",\n          data: [{ props: null }],\n        },\n      ]);\n    }\n  }, []);\n\n  function CallContainer({ call }) {\n    if (call.props === null) {\n      return <></>\n    } else {\n      return <></>;\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <TouchableOpacity style={styles.newCall} onPress={() => {}}>\n        <View style={styles.newCallButton}>\n          <MaterialIcons name=\"add-ic-call\" size={27} color=\"white\" />\n        </View>\n        <View style={{ marginLeft: 10 }}>\n          <Text style={{ fontWeight: \"bold\" }}>Inicie uma nova chamada</Text>\n          <Text style={{ fontSize: 12 }}>\n            Toque para iniciar uma chamada com outro usu√°rio\n          </Text>\n        </View>\n      </TouchableOpacity>\n\n      <SectionList\n        sections={calls}\n        keyExtractor={(item, index) => item + index}\n        renderItem={({ item }) => <CallContainer call={item} />}\n        renderSectionHeader={({ section: { title } }) => (\n          <Text style={styles.sectionTitle}>{title}</Text>\n        )}\n        style={{ marginHorizontal: 10 }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n  },\n  newCall: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    margin: 10,\n  },\n  newCallButton: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    width: 60,\n    height: 60,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: 5,\n  },\n  sectionTitle: {\n    fontSize: 13,\n    opacity: 0.8,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}