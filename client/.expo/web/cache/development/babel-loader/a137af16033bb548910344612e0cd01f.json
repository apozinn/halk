{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Camera, CameraType } from 'expo-camera';\nimport { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CameraScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(CameraType.back),\n    _useState2 = _slicedToArray(_useState, 2),\n    type = _useState2[0],\n    setType = _useState2[1];\n  var _Camera$useCameraPerm = Camera.useCameraPermissions(),\n    _Camera$useCameraPerm2 = _slicedToArray(_Camera$useCameraPerm, 2),\n    permission = _Camera$useCameraPerm2[0],\n    requestPermission = _Camera$useCameraPerm2[1];\n  if (!permission) {\n    return _jsx(View, {});\n  }\n  if (!permission.granted) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"We need your permission to show the camera\"\n      }), _jsx(Button, {\n        onPress: requestPermission,\n        title: \"grant permission\"\n      })]\n    });\n  }\n  function toggleCameraType() {\n    setType(function (current) {\n      return current === CameraType.back ? CameraType.front : CameraType.back;\n    });\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Camera, {\n      style: styles.camera,\n      type: type,\n      children: _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: toggleCameraType,\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Flip Camera\"\n          })\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  camera: {\n    flex: 1\n  },\n  buttonContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    backgroundColor: 'transparent',\n    margin: 64\n  },\n  button: {\n    flex: 1,\n    alignSelf: 'flex-end',\n    alignItems: 'center'\n  },\n  text: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});","map":{"version":3,"names":["Camera","CameraType","useState","CameraScreen","navigation","back","type","setType","useCameraPermissions","permission","requestPermission","granted","styles","container","textAlign","toggleCameraType","current","front","camera","buttonContainer","button","text","StyleSheet","create","flex","justifyContent","flexDirection","backgroundColor","margin","alignSelf","alignItems","fontSize","fontWeight","color"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/app/camera.tsx"],"sourcesContent":["import { Camera, CameraType } from 'expo-camera';\nimport { useState } from 'react';\nimport { Button, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nexport default function CameraScreen({ navigation }) {\n  const [type, setType] = useState(CameraType.back);\n  const [permission, requestPermission] = Camera.useCameraPermissions();\n\n  if (!permission) {\n    // Camera permissions are still loading\n    return <View />;\n  }\n\n  if (!permission.granted) {\n    // Camera permissions are not granted yet\n    return (\n      <View style={styles.container}>\n        <Text style={{ textAlign: 'center' }}>We need your permission to show the camera</Text>\n        <Button onPress={requestPermission} title=\"grant permission\" />\n      </View>\n    );\n  }\n\n  function toggleCameraType() {\n    setType(current => (current === CameraType.back ? CameraType.front : CameraType.back));\n  }\n\n  return (\n    <View style={styles.container}>\n      <Camera style={styles.camera} type={type}>\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity style={styles.button} onPress={toggleCameraType}>\n            <Text style={styles.text}>Flip Camera</Text>\n          </TouchableOpacity>\n        </View>\n      </Camera>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  camera: {\n    flex: 1,\n  },\n  buttonContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    backgroundColor: 'transparent',\n    margin: 64,\n  },\n  button: {\n    flex: 1,\n    alignSelf: 'flex-end',\n    alignItems: 'center',\n  },\n  text: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'white',\n  },\n});"],"mappings":";AAAA,SAASA,MAAM,EAAEC,UAAU,QAAQ,aAAa;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGjC,eAAe,SAASC,YAAY,OAAiB;EAAA,IAAdC,UAAU,QAAVA,UAAU;EAC/C,gBAAwBF,QAAQ,CAACD,UAAU,CAACI,IAAI,CAAC;IAAA;IAA1CC,IAAI;IAAEC,OAAO;EACpB,4BAAwCP,MAAM,CAACQ,oBAAoB,EAAE;IAAA;IAA9DC,UAAU;IAAEC,iBAAiB;EAEpC,IAAI,CAACD,UAAU,EAAE;IAEf,OAAO,KAAC,IAAI,KAAG;EACjB;EAEA,IAAI,CAACA,UAAU,CAACE,OAAO,EAAE;IAEvB,OACE,MAAC,IAAI;MAAC,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAA,WAC5B,KAAC,IAAI;QAAC,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAA;MAAA,EAAkD,EACvF,KAAC,MAAM;QAAC,OAAO,EAAEJ,iBAAkB;QAAC,KAAK,EAAC;MAAkB,EAAG;IAAA,EAC1D;EAEX;EAEA,SAASK,gBAAgB,GAAG;IAC1BR,OAAO,CAAC,UAAAS,OAAO;MAAA,OAAKA,OAAO,KAAKf,UAAU,CAACI,IAAI,GAAGJ,UAAU,CAACgB,KAAK,GAAGhB,UAAU,CAACI,IAAI;IAAA,CAAC,CAAC;EACxF;EAEA,OACE,KAAC,IAAI;IAAC,KAAK,EAAEO,MAAM,CAACC,SAAU;IAAA,UAC5B,KAAC,MAAM;MAAC,KAAK,EAAED,MAAM,CAACM,MAAO;MAAC,IAAI,EAAEZ,IAAK;MAAA,UACvC,KAAC,IAAI;QAAC,KAAK,EAAEM,MAAM,CAACO,eAAgB;QAAA,UAClC,KAAC,gBAAgB;UAAC,KAAK,EAAEP,MAAM,CAACQ,MAAO;UAAC,OAAO,EAAEL,gBAAiB;UAAA,UAChE,KAAC,IAAI;YAAC,KAAK,EAAEH,MAAM,CAACS,IAAK;YAAA;UAAA;QAAmB;MAC3B;IACd;EACA,EACJ;AAEX;AAEA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE;EAClB,CAAC;EACDP,MAAM,EAAE;IACNM,IAAI,EAAE;EACR,CAAC;EACDL,eAAe,EAAE;IACfK,IAAI,EAAE,CAAC;IACPE,aAAa,EAAE,KAAK;IACpBC,eAAe,EAAE,aAAa;IAC9BC,MAAM,EAAE;EACV,CAAC;EACDR,MAAM,EAAE;IACNI,IAAI,EAAE,CAAC;IACPK,SAAS,EAAE,UAAU;IACrBC,UAAU,EAAE;EACd,CAAC;EACDT,IAAI,EAAE;IACJU,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}