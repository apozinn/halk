{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Component, createRef } from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Ionicons, MaterialIcons, Entypo } from \"@expo/vector-icons\";\nimport { Decipher } from \"../../middleware/crypto\";\nimport { Text } from \"./Themed\";\nimport Modal from \"react-native-modal\";\nimport { Userpic } from \"react-native-userpic\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar MessagesContainer = function (_Component) {\n  _inherits(MessagesContainer, _Component);\n\n  var _super = _createSuper(MessagesContainer);\n\n  function MessagesContainer(props) {\n    var _this;\n\n    _classCallCheck(this, MessagesContainer);\n\n    _this = _super.call(this, props);\n    _this.scrollViewRef = createRef();\n\n    _this.open = function () {\n      return _this.setState({\n        visible: true\n      });\n    };\n\n    _this.close = function () {\n      return _this.setState({\n        visible: false\n      });\n    };\n\n    _this.isVisible = function () {\n      return _this.state.visible;\n    };\n\n    _this.state = {\n      visible: false,\n      scrollOffset: null,\n      messageModal: null\n    };\n    _this.user = props.user;\n    _this.chats = props.chats;\n    _this.updateChats = props.updateChats;\n    _this.chat = props.chat;\n    _this.colors = props.colors;\n    return _this;\n  }\n\n  _createClass(MessagesContainer, [{\n    key: \"handleOnScroll\",\n    value: function handleOnScroll(event) {\n      this.setState({\n        scrollOffset: event.nativeEvent.contentOffset.y\n      });\n    }\n  }, {\n    key: \"handleScrollTo\",\n    value: function handleScrollTo(p) {}\n  }, {\n    key: \"ModalMessage\",\n    value: function ModalMessage() {\n      var _this2 = this;\n\n      if (!this.state.messageModal) return _jsx(_Fragment, {});\n      return _jsx(Modal, {\n        testID: \"ModalMessage\",\n        isVisible: this.isVisible(),\n        onSwipeComplete: function onSwipeComplete() {\n          return _this2.close();\n        },\n        swipeDirection: [\"down\"],\n        scrollTo: this.handleScrollTo,\n        scrollOffset: this.state.scrollOffset,\n        scrollOffsetMax: 400 - 300,\n        propagateSwipe: true,\n        style: styles.modal,\n        children: _jsx(View, {\n          style: styles.scrollableModal,\n          children: _jsxs(ScrollView, {\n            onScroll: this.handleOnScroll,\n            scrollEventThrottle: 16,\n            children: [_jsx(View, {\n              style: styles.modalBarContainer,\n              children: _jsx(View, {\n                style: styles.modalBar\n              })\n            }), _jsxs(View, {\n              style: [styles.modalContent, {\n                backgroundColor: this.colors.theme === \"dark\" ? this.colors.defaultColors.card : this.colors.defaultColors.background\n              }],\n              children: [_jsxs(View, {\n                style: [styles.modalTopProfile, {\n                  backgroundColor: this.colors.background\n                }],\n                children: [_jsx(Userpic, {\n                  size: 40,\n                  name: this.state.messageModal.author.profile.name,\n                  source: {\n                    uri: this.state.messageModal.author.profile.avatar\n                  },\n                  colorize: true,\n                  borderRadius: \"50%\",\n                  style: {\n                    marginRight: 10\n                  }\n                }), _jsx(Text, {\n                  style: {\n                    fontWeight: \"bold\"\n                  },\n                  children: this.state.messageModal.content\n                })]\n              }), _jsxs(View, {\n                style: styles.modalLinks,\n                children: [_jsxs(TouchableOpacity, {\n                  style: styles.modalLink,\n                  children: [_jsx(Entypo, {\n                    name: \"reply\",\n                    size: 26,\n                    color: this.colors.tint\n                  }), _jsx(Text, {\n                    style: styles.modalLinkText,\n                    children: \"Responder\"\n                  })]\n                }), this.state.messageModal.author.id !== this.user.id ? _jsx(_Fragment, {}) : _jsxs(TouchableOpacity, {\n                  style: styles.modalLink,\n                  children: [_jsx(MaterialIcons, {\n                    name: \"delete\",\n                    size: 26,\n                    color: this.colors.tint\n                  }), _jsx(Text, {\n                    style: styles.modalLinkText,\n                    children: \"Apagar mensagem\"\n                  })]\n                }), _jsxs(TouchableOpacity, {\n                  style: styles.modalLink,\n                  children: [_jsx(MaterialIcons, {\n                    name: \"push-pin\",\n                    size: 26,\n                    color: this.colors.tint\n                  }), _jsx(Text, {\n                    style: styles.modalLinkText,\n                    children: \"Fixar mensagem\"\n                  })]\n                }), _jsxs(TouchableOpacity, {\n                  style: styles.modalLink,\n                  children: [_jsx(Entypo, {\n                    name: \"link\",\n                    size: 26,\n                    color: this.colors.tint\n                  }), _jsx(Text, {\n                    style: styles.modalLinkText,\n                    children: \"Compartilhar\"\n                  })]\n                }), _jsxs(TouchableOpacity, {\n                  style: styles.modalLink,\n                  children: [_jsx(MaterialIcons, {\n                    name: \"emoji-emotions\",\n                    size: 26,\n                    color: this.colors.tint\n                  }), _jsx(Text, {\n                    style: styles.modalLinkText,\n                    children: \"Reagir a mensagem\"\n                  })]\n                }), _jsxs(TouchableOpacity, {\n                  style: styles.modalLink,\n                  children: [_jsx(Ionicons, {\n                    name: \"copy\",\n                    size: 26,\n                    color: this.colors.tint\n                  }), _jsx(Text, {\n                    style: styles.modalLinkText,\n                    children: \"Copiar conte\\xFAdo\"\n                  })]\n                }), this.state.messageModal.author.id === this.user.id ? _jsx(_Fragment, {}) : _jsxs(TouchableOpacity, {\n                  style: styles.modalLink,\n                  children: [_jsx(MaterialIcons, {\n                    name: \"report\",\n                    size: 26,\n                    color: this.colors.tint\n                  }), _jsx(Text, {\n                    style: styles.modalLinkText,\n                    children: \"Den\\xFAnciar\"\n                  })]\n                })]\n              })]\n            })]\n          })\n        })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _jsxs(ScrollView, {\n        style: styles.messageContainer,\n        ref: this.scrollViewRef,\n        showsVerticalScrollIndicator: false,\n        showsHorizontalScrollIndicator: false,\n        onContentSizeChange: function onContentSizeChange() {\n          return _this3.scrollViewRef.current.scrollToEnd({\n            animated: true\n          });\n        },\n        children: [this.ModalMessage(), this.chat.messages.map(function (message, index) {\n          var _this3$chat$messages, _this3$chat$messages2;\n\n          var itsMyMessage = message.author.id === _this3.user.id ? true : false;\n          var content = _this3.chat.key ? Decipher(message.content, _this3.chat.key) : \"Nova mensagem\";\n          var messageTime = new Date(message.createdAt).toLocaleTimeString();\n          var previousMessageIsMy = ((_this3$chat$messages = _this3.chat.messages[index - 1]) == null ? void 0 : _this3$chat$messages.author.id) === message.author.id;\n          var nextMessageIsMy = ((_this3$chat$messages2 = _this3.chat.messages[index + 1]) == null ? void 0 : _this3$chat$messages2.author.id) === message.author.id;\n          var borders = {};\n\n          if (itsMyMessage) {\n            borders.borderTopRightRadius = previousMessageIsMy && !nextMessageIsMy ? 5 : 20;\n            borders.borderBottomRightRadius = !previousMessageIsMy && nextMessageIsMy ? 5 : 20;\n\n            if (previousMessageIsMy && nextMessageIsMy) {\n              borders.borderTopRightRadius = 5;\n              borders.borderBottomRightRadius = 5;\n            }\n          } else {\n            borders.borderTopLeftRadius = previousMessageIsMy && !nextMessageIsMy ? 5 : 20;\n            borders.borderBottomLeftRadius = !previousMessageIsMy && nextMessageIsMy ? 5 : 20;\n\n            if (previousMessageIsMy && nextMessageIsMy) {\n              borders.borderTopLeftRadius = 10;\n              borders.borderBottomLeftRadius = 10;\n            }\n          }\n\n          return _jsx(View, {\n            style: [itsMyMessage ? styles.myMessage : styles.otherMessage, index === 0 ? {\n              margintop: 10\n            } : {}],\n            children: _jsxs(View, {\n              style: itsMyMessage ? {\n                maxWidth: \"75%\"\n              } : {},\n              children: [_jsx(Pressable, {\n                style: [styles.message, borders, {\n                  backgroundColor: itsMyMessage ? \"#2f95dc\" : _this3.colors.defaultColors.card\n                }],\n                onLongPress: function onLongPress() {\n                  message.content = content;\n\n                  _this3.setState({\n                    messageModal: message\n                  });\n\n                  _this3.open();\n                },\n                children: _jsx(Text, {\n                  style: {\n                    maxWidth: \"100%\",\n                    color: itsMyMessage ? \"white\" : _this3.colors.defaultColors.text\n                  },\n                  children: content\n                })\n              }), _jsx(View, {\n                style: [styles.messageProps, {\n                  justifyContent: itsMyMessage ? \"flex-end\" : \"flex-start\"\n                }],\n                children: nextMessageIsMy ? _jsx(_Fragment, {}) : _jsxs(_Fragment, {\n                  children: [_jsx(Text, {\n                    style: styles.messageCreatedAt,\n                    children: messageTime.slice(0, 5)\n                  }), itsMyMessage ? _jsx(Ionicons, {\n                    name: \"checkmark-done\",\n                    size: 20,\n                    color: message.read ? \"#04f500\" : \"gray\",\n                    style: {\n                      marginRight: 2\n                    }\n                  }) : _jsx(_Fragment, {})]\n                })\n              })]\n            })\n          }, index);\n        })]\n      });\n    }\n  }]);\n\n  return MessagesContainer;\n}(Component);\n\nvar styles = StyleSheet.create({\n  messageContainer: {\n    flex: 1,\n    marginHorizontal: 10,\n    flexDirection: \"column-reverse\",\n    marginBottom: 55\n  },\n  myMessage: {\n    justifyContent: \"flex-end\",\n    flexDirection: \"revert\"\n  },\n  otherMessage: {\n    width: \"fit-content\",\n    maxWidth: \"75%\"\n  },\n  message: {\n    padding: 7,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    marginBottom: 2,\n    alignItems: \"baseline\",\n    flexWrap: \"wrap\"\n  },\n  messageCreatedAt: {\n    fontSize: 10,\n    marginHorizontal: 5,\n    marginTop: 5\n  },\n  messageProps: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  modal: {\n    justifyContent: \"flex-end\",\n    margin: 0\n  },\n  scrollableModal: {\n    minHeight: 500\n  },\n  modalContent: {\n    height: 500,\n    padding: 10,\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10\n  },\n  modalTopProfile: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10,\n    borderRadius: 50\n  },\n  modalLinks: {},\n  modalLink: {\n    padding: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  modalLinkText: {\n    marginLeft: 10,\n    fontSize: 17\n  },\n  modalBarContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  modalBar: {\n    backgroundColor: \"#fff\",\n    width: 60,\n    height: 10,\n    borderRadius: 10,\n    marginBottom: 5\n  }\n});\nexport default MessagesContainer;","map":{"version":3,"names":["Component","createRef","Ionicons","MaterialIcons","Entypo","Decipher","Text","Modal","Userpic","MessagesContainer","props","scrollViewRef","open","setState","visible","close","isVisible","state","scrollOffset","messageModal","user","chats","updateChats","chat","colors","event","nativeEvent","contentOffset","y","p","handleScrollTo","styles","modal","scrollableModal","handleOnScroll","modalBarContainer","modalBar","modalContent","backgroundColor","theme","defaultColors","card","background","modalTopProfile","author","profile","name","uri","avatar","marginRight","fontWeight","content","modalLinks","modalLink","tint","modalLinkText","id","messageContainer","current","scrollToEnd","animated","ModalMessage","messages","map","message","index","itsMyMessage","key","messageTime","Date","createdAt","toLocaleTimeString","previousMessageIsMy","nextMessageIsMy","borders","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","myMessage","otherMessage","margintop","maxWidth","color","text","messageProps","justifyContent","messageCreatedAt","slice","read","StyleSheet","create","flex","marginHorizontal","flexDirection","marginBottom","width","padding","borderRadius","alignItems","flexWrap","fontSize","marginTop","margin","minHeight","height","marginLeft"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/src/components/messagesContainer.tsx"],"sourcesContent":["import { Component, createRef } from \"react\";\nimport {\n  ScrollView,\n  View,\n  StyleSheet,\n  StatusBar,\n  Pressable,\n  TouchableOpacity,\n} from \"react-native\";\nimport {\n  AntDesign,\n  Ionicons,\n  Feather,\n  FontAwesome,\n  MaterialIcons,\n  Fontisto,\n  Entypo,\n} from \"@expo/vector-icons\";\nimport { Cipher, Decipher } from \"../../middleware/crypto\";\nimport { Text } from \"./Themed\";\nimport Modal from \"react-native-modal\";\nimport { Userpic } from \"react-native-userpic\";\n\nclass MessagesContainer extends Component {\n  private scrollViewRef = createRef();\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      scrollOffset: null,\n      messageModal: null,\n    };\n\n    this.user = props.user;\n    this.chats = props.chats;\n    this.updateChats = props.updateChats;\n    this.chat = props.chat;\n    this.colors = props.colors;\n  }\n\n  handleOnScroll(event) {\n    this.setState({ scrollOffset: event.nativeEvent.contentOffset.y });\n  }\n\n  handleScrollTo(p) {}\n\n  open = () => this.setState({ visible: true } as any);\n  close = () => this.setState({ visible: false } as any);\n  isVisible = () => this.state.visible;\n\n  ModalMessage() {\n    if (!this.state.messageModal) return <></>;\n    return (\n      <Modal\n        testID={\"ModalMessage\"}\n        isVisible={this.isVisible()}\n        onSwipeComplete={() => this.close()}\n        swipeDirection={[\"down\"]}\n        scrollTo={this.handleScrollTo}\n        scrollOffset={this.state.scrollOffset}\n        scrollOffsetMax={400 - 300}\n        propagateSwipe={true}\n        style={styles.modal}\n      >\n        <View style={styles.scrollableModal}>\n          <ScrollView onScroll={this.handleOnScroll} scrollEventThrottle={16}>\n            <View style={styles.modalBarContainer}>\n              <View style={styles.modalBar}></View>\n            </View>\n\n            <View\n              style={[\n                styles.modalContent,\n                {\n                  backgroundColor:\n                    this.colors.theme === \"dark\"\n                      ? this.colors.defaultColors.card\n                      : this.colors.defaultColors.background,\n                },\n              ]}\n            >\n              <View\n                style={[\n                  styles.modalTopProfile,\n                  { backgroundColor: this.colors.background },\n                ]}\n              >\n                <Userpic\n                  size={40}\n                  name={this.state.messageModal.author.profile.name}\n                  source={{\n                    uri: this.state.messageModal.author.profile.avatar,\n                  }}\n                  colorize={true}\n                  borderRadius=\"50%\"\n                  style={{ marginRight: 10 }}\n                />\n                <Text style={{ fontWeight: \"bold\" }}>\n                  {this.state.messageModal.content}\n                </Text>\n              </View>\n              <View style={styles.modalLinks}>\n                <TouchableOpacity style={styles.modalLink}>\n                  <Entypo name=\"reply\" size={26} color={this.colors.tint} />\n                  <Text style={styles.modalLinkText}>Responder</Text>\n                </TouchableOpacity>\n                {this.state.messageModal.author.id !== this.user.id ? (\n                  <></>\n                ) : (\n                  <TouchableOpacity style={styles.modalLink}>\n                    <MaterialIcons\n                      name=\"delete\"\n                      size={26}\n                      color={this.colors.tint}\n                    />\n                    <Text style={styles.modalLinkText}>Apagar mensagem</Text>\n                  </TouchableOpacity>\n                )}\n                <TouchableOpacity style={styles.modalLink}>\n                  <MaterialIcons\n                    name=\"push-pin\"\n                    size={26}\n                    color={this.colors.tint}\n                  />\n                  <Text style={styles.modalLinkText}>Fixar mensagem</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.modalLink}>\n                  <Entypo name=\"link\" size={26} color={this.colors.tint} />\n                  <Text style={styles.modalLinkText}>Compartilhar</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.modalLink}>\n                  <MaterialIcons\n                    name=\"emoji-emotions\"\n                    size={26}\n                    color={this.colors.tint}\n                  />\n                  <Text style={styles.modalLinkText}>Reagir a mensagem</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.modalLink}>\n                  <Ionicons name=\"copy\" size={26} color={this.colors.tint} />\n                  <Text style={styles.modalLinkText}>Copiar conteúdo</Text>\n                </TouchableOpacity>\n                {this.state.messageModal.author.id === this.user.id ? (\n                  <></>\n                ) : (\n                  <TouchableOpacity style={styles.modalLink}>\n                    <MaterialIcons\n                      name=\"report\"\n                      size={26}\n                      color={this.colors.tint}\n                    />\n                    <Text style={styles.modalLinkText}>Denúnciar</Text>\n                  </TouchableOpacity>\n                )}\n              </View>\n            </View>\n          </ScrollView>\n        </View>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <ScrollView\n        style={styles.messageContainer}\n        ref={this.scrollViewRef}\n        showsVerticalScrollIndicator={false}\n        showsHorizontalScrollIndicator={false}\n        onContentSizeChange={() =>\n          this.scrollViewRef.current.scrollToEnd({ animated: true })\n        }\n      >\n        {this.ModalMessage()}\n        {this.chat.messages.map((message, index) => {\n          const itsMyMessage =\n            message.author.id === this.user.id ? true : false;\n          let content = this.chat.key\n            ? Decipher(message.content, this.chat.key)\n            : \"Nova mensagem\";\n          const messageTime = new Date(message.createdAt).toLocaleTimeString();\n\n          let previousMessageIsMy =\n            this.chat.messages[index - 1]?.author.id === message.author.id;\n          let nextMessageIsMy =\n            this.chat.messages[index + 1]?.author.id === message.author.id;\n\n          let borders = {};\n\n          if (itsMyMessage) {\n            borders.borderTopRightRadius =\n              previousMessageIsMy && !nextMessageIsMy ? 5 : 20;\n            borders.borderBottomRightRadius =\n              !previousMessageIsMy && nextMessageIsMy ? 5 : 20;\n\n            if (previousMessageIsMy && nextMessageIsMy) {\n              borders.borderTopRightRadius = 5;\n              borders.borderBottomRightRadius = 5;\n            }\n          } else {\n            borders.borderTopLeftRadius =\n              previousMessageIsMy && !nextMessageIsMy ? 5 : 20;\n            borders.borderBottomLeftRadius =\n              !previousMessageIsMy && nextMessageIsMy ? 5 : 20;\n\n            if (previousMessageIsMy && nextMessageIsMy) {\n              borders.borderTopLeftRadius = 10;\n              borders.borderBottomLeftRadius = 10;\n            }\n          }\n\n          return (\n            <View\n              style={[\n                itsMyMessage ? styles.myMessage : styles.otherMessage,\n                index === 0 ? { margintop: 10 } : {},\n              ]}\n              key={index}\n            >\n              <View style={itsMyMessage ? { maxWidth: \"75%\" } : {}}>\n                <Pressable\n                  style={[\n                    styles.message,\n                    borders,\n                    {\n                      backgroundColor: itsMyMessage\n                        ? \"#2f95dc\"\n                        : this.colors.defaultColors.card,\n                    },\n                  ]}\n                  onLongPress={() => {\n                    message.content = content;\n                    this.setState({ messageModal: message });\n                    this.open();\n                  }}\n                >\n                  <Text\n                    style={{\n                      maxWidth: \"100%\",\n                      color: itsMyMessage\n                        ? \"white\"\n                        : this.colors.defaultColors.text,\n                    }}\n                  >\n                    {content}\n                  </Text>\n                </Pressable>\n                <View\n                  style={[\n                    styles.messageProps,\n                    {\n                      justifyContent: itsMyMessage ? \"flex-end\" : \"flex-start\",\n                    },\n                  ]}\n                >\n                  {nextMessageIsMy ? (\n                    <></>\n                  ) : (\n                    <>\n                      <Text style={styles.messageCreatedAt}>\n                        {messageTime.slice(0, 5)}\n                      </Text>\n                      {itsMyMessage ? (\n                        <Ionicons\n                          name=\"checkmark-done\"\n                          size={20}\n                          color={message.read ? \"#04f500\" : \"gray\"}\n                          style={{ marginRight: 2 }}\n                        />\n                      ) : (\n                        <></>\n                      )}\n                    </>\n                  )}\n                </View>\n              </View>\n            </View>\n          );\n        })}\n      </ScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  messageContainer: {\n    flex: 1,\n    marginHorizontal: 10,\n    flexDirection: \"column-reverse\",\n    marginBottom: 55,\n  },\n  myMessage: {\n    justifyContent: \"flex-end\",\n    flexDirection: \"revert\",\n  },\n  otherMessage: {\n    width: \"fit-content\",\n    maxWidth: \"75%\",\n  },\n  message: {\n    padding: 7,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    marginBottom: 2,\n    alignItems: \"baseline\",\n    flexWrap: \"wrap\",\n  },\n  messageCreatedAt: {\n    fontSize: 10,\n    marginHorizontal: 5,\n    marginTop: 5,\n  },\n  messageProps: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  modal: {\n    justifyContent: \"flex-end\",\n    margin: 0,\n  },\n  scrollableModal: {\n    minHeight: 500,\n  },\n  modalContent: {\n    height: 500,\n    padding: 10,\n    borderTopLeftRadius: 10,\n    borderTopRightRadius: 10,\n  },\n  modalTopProfile: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10,\n    borderRadius: 50,\n  },\n  modalLinks: {},\n  modalLink: {\n    padding: 10,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  modalLinkText: {\n    marginLeft: 10,\n    fontSize: 17,\n  },\n  modalBarContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  modalBar: {\n    backgroundColor: \"#fff\",\n    width: 60,\n    height: 10,\n    borderRadius: 10,\n    marginBottom: 5,\n  },\n});\n\nexport default MessagesContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}