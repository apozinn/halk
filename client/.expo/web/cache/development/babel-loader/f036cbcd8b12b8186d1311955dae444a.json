{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.deepmerge = factory());\n})(this, function () {\n  'use strict';\n\n  var isMergeableObject = function isMergeableObject(value) {\n    return isNonNullObject(value) && !isSpecial(value);\n  };\n\n  function isNonNullObject(value) {\n    return !!value && typeof value === 'object';\n  }\n\n  function isSpecial(value) {\n    var stringValue = Object.prototype.toString.call(value);\n    return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);\n  }\n\n  var canUseSymbol = typeof Symbol === 'function' && Symbol.for;\n  var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\n  function isReactElement(value) {\n    return value.$$typeof === REACT_ELEMENT_TYPE;\n  }\n\n  function emptyTarget(val) {\n    return Array.isArray(val) ? [] : {};\n  }\n\n  function cloneUnlessOtherwiseSpecified(value, options) {\n    return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;\n  }\n\n  function defaultArrayMerge(target, source, options) {\n    return target.concat(source).map(function (element) {\n      return cloneUnlessOtherwiseSpecified(element, options);\n    });\n  }\n\n  function getMergeFunction(key, options) {\n    if (!options.customMerge) {\n      return deepmerge;\n    }\n\n    var customMerge = options.customMerge(key);\n    return typeof customMerge === 'function' ? customMerge : deepmerge;\n  }\n\n  function getEnumerableOwnPropertySymbols(target) {\n    return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function (symbol) {\n      return target.propertyIsEnumerable(symbol);\n    }) : [];\n  }\n\n  function getKeys(target) {\n    return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));\n  }\n\n  function mergeObject(target, source, options) {\n    var destination = {};\n\n    if (options.isMergeableObject(target)) {\n      getKeys(target).forEach(function (key) {\n        destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n      });\n    }\n\n    getKeys(source).forEach(function (key) {\n      if (!options.isMergeableObject(source[key]) || !target[key]) {\n        destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n      } else {\n        destination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n      }\n    });\n    return destination;\n  }\n\n  function deepmerge(target, source, options) {\n    options = options || {};\n    options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n    options.isMergeableObject = options.isMergeableObject || isMergeableObject;\n    var sourceIsArray = Array.isArray(source);\n    var targetIsArray = Array.isArray(target);\n    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n    if (!sourceAndTargetTypesMatch) {\n      return cloneUnlessOtherwiseSpecified(source, options);\n    } else if (sourceIsArray) {\n      return options.arrayMerge(target, source, options);\n    } else {\n      return mergeObject(target, source, options);\n    }\n  }\n\n  deepmerge.all = function deepmergeAll(array, options) {\n    if (!Array.isArray(array)) {\n      throw new Error('first argument should be an array');\n    }\n\n    return array.reduce(function (prev, next) {\n      return deepmerge(prev, next, options);\n    }, {});\n  };\n\n  var deepmerge_1 = deepmerge;\n  return deepmerge_1;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","self","deepmerge","isMergeableObject","value","isNonNullObject","isSpecial","stringValue","Object","prototype","toString","call","isReactElement","canUseSymbol","Symbol","for","REACT_ELEMENT_TYPE","$$typeof","emptyTarget","val","Array","isArray","cloneUnlessOtherwiseSpecified","options","clone","defaultArrayMerge","target","source","concat","map","element","getMergeFunction","key","customMerge","getEnumerableOwnPropertySymbols","getOwnPropertySymbols","filter","symbol","propertyIsEnumerable","getKeys","keys","mergeObject","destination","forEach","arrayMerge","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","all","deepmergeAll","array","Error","reduce","prev","next","deepmerge_1"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/node_modules/react-native-country-picker-modal/node_modules/deepmerge/dist/umd.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = global || self, global.deepmerge = factory());\n}(this, function () { 'use strict';\n\n\tvar isMergeableObject = function isMergeableObject(value) {\n\t\treturn isNonNullObject(value)\n\t\t\t&& !isSpecial(value)\n\t};\n\n\tfunction isNonNullObject(value) {\n\t\treturn !!value && typeof value === 'object'\n\t}\n\n\tfunction isSpecial(value) {\n\t\tvar stringValue = Object.prototype.toString.call(value);\n\n\t\treturn stringValue === '[object RegExp]'\n\t\t\t|| stringValue === '[object Date]'\n\t\t\t|| isReactElement(value)\n\t}\n\n\t// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\n\tvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\n\tvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\n\tfunction isReactElement(value) {\n\t\treturn value.$$typeof === REACT_ELEMENT_TYPE\n\t}\n\n\tfunction emptyTarget(val) {\n\t\treturn Array.isArray(val) ? [] : {}\n\t}\n\n\tfunction cloneUnlessOtherwiseSpecified(value, options) {\n\t\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t\t: value\n\t}\n\n\tfunction defaultArrayMerge(target, source, options) {\n\t\treturn target.concat(source).map(function(element) {\n\t\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t\t})\n\t}\n\n\tfunction getMergeFunction(key, options) {\n\t\tif (!options.customMerge) {\n\t\t\treturn deepmerge\n\t\t}\n\t\tvar customMerge = options.customMerge(key);\n\t\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n\t}\n\n\tfunction getEnumerableOwnPropertySymbols(target) {\n\t\treturn Object.getOwnPropertySymbols\n\t\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\t\treturn target.propertyIsEnumerable(symbol)\n\t\t\t})\n\t\t\t: []\n\t}\n\n\tfunction getKeys(target) {\n\t\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n\t}\n\n\tfunction mergeObject(target, source, options) {\n\t\tvar destination = {};\n\t\tif (options.isMergeableObject(target)) {\n\t\t\tgetKeys(target).forEach(function(key) {\n\t\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t\t});\n\t\t}\n\t\tgetKeys(source).forEach(function(key) {\n\t\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t\t} else {\n\t\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t\t}\n\t\t});\n\t\treturn destination\n\t}\n\n\tfunction deepmerge(target, source, options) {\n\t\toptions = options || {};\n\t\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\t\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\t\tvar sourceIsArray = Array.isArray(source);\n\t\tvar targetIsArray = Array.isArray(target);\n\t\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\t\tif (!sourceAndTargetTypesMatch) {\n\t\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t\t} else if (sourceIsArray) {\n\t\t\treturn options.arrayMerge(target, source, options)\n\t\t} else {\n\t\t\treturn mergeObject(target, source, options)\n\t\t}\n\t}\n\n\tdeepmerge.all = function deepmergeAll(array, options) {\n\t\tif (!Array.isArray(array)) {\n\t\t\tthrow new Error('first argument should be an array')\n\t\t}\n\n\t\treturn array.reduce(function(prev, next) {\n\t\t\treturn deepmerge(prev, next, options)\n\t\t}, {})\n\t};\n\n\tvar deepmerge_1 = deepmerge;\n\n\treturn deepmerge_1;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}