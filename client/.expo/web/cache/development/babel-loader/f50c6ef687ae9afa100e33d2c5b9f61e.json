{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useEffect, useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from \"../../src/components/Themed\";\nimport { CodeField, Cursor, useBlurOnFulfill, useClearByFocusCell } from \"react-native-confirmation-code-field\";\nimport useColorScheme from \"../../src/hooks/useColorScheme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ReceiveCode(_ref) {\n  var navigation = _ref.navigation;\n  var theme = useColorScheme();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var ref = useBlurOnFulfill({\n    value: value,\n    cellCount: 6\n  });\n\n  var _useClearByFocusCell = useClearByFocusCell({\n    value: value,\n    setValue: setValue\n  }),\n      _useClearByFocusCell2 = _slicedToArray(_useClearByFocusCell, 2),\n      props = _useClearByFocusCell2[0],\n      getCellOnLayoutHandler = _useClearByFocusCell2[1];\n\n  useEffect(function () {\n    if (value.length === 6) {\n      console.log(\"codigo\", value);\n    }\n  }, [value]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      source: require(\"../../assets/images/verificationCode.png\"),\n      style: styles.image\n    }), _jsx(Text, {\n      style: styles.description,\n      children: \"Ins\\xEDra abaixo com o c\\xF3digo de verifica\\xE7\\xE3o enviado para o seu n\\xFAmero\"\n    }), _jsx(View, {\n      style: styles.codeContainer,\n      children: _jsx(CodeField, _objectSpread(_objectSpread({\n        ref: ref\n      }, props), {}, {\n        value: value,\n        onChangeText: function onChangeText(code) {\n          return setValue(code);\n        },\n        cellCount: 6,\n        rootStyle: _objectSpread(_objectSpread({}, styles.codeFieldRoot), {}, {\n          borderColor: theme === \"dark\" ? \"#333\" : \"#00000030\"\n        }),\n        keyboardType: \"number-pad\",\n        textContentType: \"oneTimeCode\",\n        renderCell: function renderCell(_ref2) {\n          var index = _ref2.index,\n              symbol = _ref2.symbol,\n              isFocused = _ref2.isFocused;\n          return _jsx(Text, {\n            style: [_objectSpread(_objectSpread({}, styles.cell), {}, {\n              borderColor: theme === \"dark\" ? \"#333\" : \"#00000030\"\n            }), isFocused],\n            onLayout: getCellOnLayoutHandler(index),\n            children: symbol || (isFocused ? _jsx(Cursor, {}) : null)\n          }, index);\n        }\n      }))\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n    alignItems: \"center\"\n  },\n  image: {\n    width: 100,\n    height: 100,\n    marginTop: 100,\n    marginBottom: 10\n  },\n  codeFieldRoot: {\n    marginTop: 20\n  },\n  cell: {\n    width: 40,\n    height: 50,\n    lineHeight: 50,\n    fontSize: 24,\n    borderWidth: 2,\n    textAlign: \"center\",\n    borderRadius: 5,\n    marginRight: 5\n  },\n  codeContainer: {\n    marginHorizontal: 10\n  },\n  description: {\n    fontSize: 12,\n    textAlign: \"center\",\n    width: 290,\n    opacity: 0.9\n  }\n});","map":{"version":3,"names":["useEffect","useState","Text","CodeField","Cursor","useBlurOnFulfill","useClearByFocusCell","useColorScheme","ReceiveCode","navigation","theme","value","setValue","ref","cellCount","props","getCellOnLayoutHandler","length","console","log","styles","container","require","image","description","codeContainer","code","codeFieldRoot","borderColor","index","symbol","isFocused","cell","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","alignItems","width","height","marginBottom","lineHeight","fontSize","borderWidth","textAlign","borderRadius","marginRight","marginHorizontal","opacity"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/screens/register/receiveCode.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Image, StatusBar, StyleSheet, View } from \"react-native\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { Text } from \"../../src/components/Themed\";\nimport {\n  CodeField,\n  Cursor,\n  useBlurOnFulfill,\n  useClearByFocusCell,\n} from \"react-native-confirmation-code-field\";\nimport useColorScheme from \"../../src/hooks/useColorScheme\";\n\nexport default function ReceiveCode({\n  navigation,\n}: RootStackScreenProps<\"ReceiveCode\">) {\n  const theme = useColorScheme();\n  const [value, setValue] = useState(\"\");\n  const ref = useBlurOnFulfill({ value, cellCount: 6 });\n  const [props, getCellOnLayoutHandler] = useClearByFocusCell({\n    value,\n    setValue,\n  });\n\n  useEffect(() => {\n    if (value.length === 6) {\n      console.log(\"codigo\", value);\n    }\n  }, [value]);\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require(\"../../assets/images/verificationCode.png\")}\n        style={styles.image}\n      />\n      <Text style={styles.description}>\n        Insíra abaixo com o código de verificação enviado para o seu número\n      </Text>\n      <View style={styles.codeContainer}>\n        <CodeField\n          ref={ref}\n          {...props}\n          value={value}\n          onChangeText={(code) => setValue(code)}\n          cellCount={6}\n          rootStyle={{\n            ...styles.codeFieldRoot,\n            borderColor: theme === \"dark\" ? \"#333\" : \"#00000030\",\n          }}\n          keyboardType=\"number-pad\"\n          textContentType=\"oneTimeCode\"\n          renderCell={({ index, symbol, isFocused }) => (\n            <Text\n              key={index}\n              style={[\n                {\n                  ...styles.cell,\n                  borderColor: theme === \"dark\" ? \"#333\" : \"#00000030\",\n                },\n                isFocused,\n              ]}\n              onLayout={getCellOnLayoutHandler(index)}\n            >\n              {symbol || (isFocused ? <Cursor /> : null)}\n            </Text>\n          )}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n    alignItems: \"center\",\n  },\n  image: {\n    width: 100,\n    height: 100,\n    marginTop: 100,\n    marginBottom: 10,\n  },\n  codeFieldRoot: { marginTop: 20 },\n  cell: {\n    width: 40,\n    height: 50,\n    lineHeight: 50,\n    fontSize: 24,\n    borderWidth: 2,\n    textAlign: \"center\",\n    borderRadius: 5,\n    marginRight: 5,\n  },\n  codeContainer: {\n    marginHorizontal: 10,\n  },\n  description: {\n    fontSize: 12,\n    textAlign: \"center\",\n    width: 290,\n    opacity: 0.9,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}