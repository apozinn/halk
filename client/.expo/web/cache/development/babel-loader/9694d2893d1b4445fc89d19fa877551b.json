{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport Socket from \"../../src/utils/socket\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Chat(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      socket = _useState2[0],\n      setSocket = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      value = _useState8[0],\n      setValue = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      name = _useState10[0],\n      setName = _useState10[1];\n\n  useEffect(function () {\n    new Socket().getMessages();\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      value: name,\n      onChangeText: function onChangeText(value) {\n        return setName(value);\n      },\n      placeholder: \"enter your name\"\n    }), _jsx(View, {\n      style: styles.messageCard,\n      children: messages.map(function (message, index) {\n        return _jsx(Text, {\n          children: message.text\n        }, index);\n      })\n    }), _jsx(TextInput, {\n      value: text,\n      onChangeText: function onChangeText(value) {\n        return setText(value);\n      },\n      placeholder: \"Send a message\"\n    }), _jsx(Button, {\n      title: \"Send\",\n      onPress: function onPress() {\n        return new Socket().sendMessage(text);\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: '#222'\n  },\n  myMessage: {\n    backgroundColor: 'blue'\n  },\n  otherMessage: {\n    backgroundColor: 'gray'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","TextInput","Text","Socket","Chat","navigation","socket","setSocket","messages","setMessages","text","setText","value","setValue","name","setName","getMessages","styles","container","messageCard","map","message","index","sendMessage","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","borderWidth","borderColor","myMessage","backgroundColor","otherMessage"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/screens/chat/chat.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, StatusBar, StyleSheet, View } from \"react-native\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { TextInput, Text } from '../../src/components/Themed';\nimport Socket from '../../src/utils/socket';\n\nexport default function Chat({ navigation }: RootStackScreenProps<\"Chat\">) {\n  const [socket, setSocket] = useState();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  useEffect(() => {\n    new Socket().getMessages();\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <TextInput value={name} onChangeText={(value) => setName(value)} placeholder=\"enter your name\"/>\n      <View style={styles.messageCard}>\n      {messages.map((message, index) => (\n        <Text key={index}>\n          {message.text}\n        </Text>\n      ))}\n      </View>\n      <TextInput value={text} onChangeText={(value) => setText(value)} placeholder='Send a message'/>\n      <Button title='Send' onPress={() => new Socket().sendMessage(text)}/>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: '#222',\n  },\n  myMessage: {\n    backgroundColor: 'blue',\n  },\n  otherMessage: {\n    backgroundColor: 'gray',\n  },\n});\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAGA,SAASC,SAAT,EAAoBC,IAApB;AACA,OAAOC,MAAP;;;AAEA,eAAe,SAASC,IAAT,OAA4D;EAAA,IAA5CC,UAA4C,QAA5CA,UAA4C;;EACzE,gBAA4BL,QAAQ,EAApC;EAAA;EAAA,IAAOM,MAAP;EAAA,IAAeC,SAAf;;EACA,iBAAgCP,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOQ,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAAwBT,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOU,IAAP;EAAA,IAAaC,OAAb;;EACA,iBAA0BX,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOY,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAwBb,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOc,IAAP;EAAA,IAAaC,OAAb;;EAEAhB,SAAS,CAAC,YAAM;IACd,IAAII,MAAJ,GAAaa,WAAb;EACD,CAFQ,EAEN,EAFM,CAAT;EAIA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,SAAD;MAAW,KAAK,EAAEJ,IAAlB;MAAwB,YAAY,EAAE,sBAACF,KAAD;QAAA,OAAWG,OAAO,CAACH,KAAD,CAAlB;MAAA,CAAtC;MAAiE,WAAW,EAAC;IAA7E,EADF,EAEE,KAAC,IAAD;MAAM,KAAK,EAAEK,MAAM,CAACE,WAApB;MAAA,UACCX,QAAQ,CAACY,GAAT,CAAa,UAACC,OAAD,EAAUC,KAAV;QAAA,OACZ,KAAC,IAAD;UAAA,UACGD,OAAO,CAACX;QADX,GAAWY,KAAX,CADY;MAAA,CAAb;IADD,EAFF,EASE,KAAC,SAAD;MAAW,KAAK,EAAEZ,IAAlB;MAAwB,YAAY,EAAE,sBAACE,KAAD;QAAA,OAAWD,OAAO,CAACC,KAAD,CAAlB;MAAA,CAAtC;MAAiE,WAAW,EAAC;IAA7E,EATF,EAUE,KAAC,MAAD;MAAQ,KAAK,EAAC,MAAd;MAAqB,OAAO,EAAE;QAAA,OAAM,IAAIT,MAAJ,GAAaoB,WAAb,CAAyBb,IAAzB,CAAN;MAAA;IAA9B,EAVF;EAAA,EADF;AAcD;AAED,IAAMO,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CADG;IAETC,SAAS,EAAEC,SAAS,CAACC;EAFZ,CADoB;EAK/BV,WAAW,EAAE;IACXW,WAAW,EAAE,CADF;IAEXC,WAAW,EAAE;EAFF,CALkB;EAS/BC,SAAS,EAAE;IACTC,eAAe,EAAE;EADR,CAToB;EAY/BC,YAAY,EAAE;IACZD,eAAe,EAAE;EADL;AAZiB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}