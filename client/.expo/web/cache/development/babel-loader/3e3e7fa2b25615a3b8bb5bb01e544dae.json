{"ast":null,"code":"import React, { memo } from 'react';\nimport { Emoji } from \"./Emoji\";\nimport { useContext } from \"./CountryContext\";\nimport { useAsync } from 'react-async-hook';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 30,\n    marginRight: 10\n  },\n  emojiFlag: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1 / PixelRatio.get(),\n    borderColor: 'transparent',\n    backgroundColor: 'transparent'\n  },\n  imageFlag: {\n    resizeMode: 'contain',\n    width: 25,\n    height: 19,\n    borderWidth: 1 / PixelRatio.get(),\n    opacity: 0.8\n  }\n});\nvar ImageFlag = memo(function (_ref) {\n  var countryCode = _ref.countryCode,\n    flagSize = _ref.flagSize;\n  var _useContext = useContext(),\n    getImageFlagAsync = _useContext.getImageFlagAsync;\n  var asyncResult = useAsync(getImageFlagAsync, [countryCode]);\n  if (asyncResult.loading) {\n    return React.createElement(ActivityIndicator, {\n      size: 'small'\n    });\n  }\n  return React.createElement(Image, {\n    resizeMode: 'contain',\n    style: [styles.imageFlag, {\n      borderColor: 'transparent',\n      height: flagSize\n    }],\n    source: {\n      uri: asyncResult.result\n    }\n  });\n});\nvar EmojiFlag = memo(function (_ref2) {\n  var countryCode = _ref2.countryCode,\n    flagSize = _ref2.flagSize;\n  var _useContext2 = useContext(),\n    getEmojiFlagAsync = _useContext2.getEmojiFlagAsync;\n  var asyncResult = useAsync(getEmojiFlagAsync, [countryCode]);\n  if (asyncResult.loading) {\n    return React.createElement(ActivityIndicator, {\n      size: 'small'\n    });\n  }\n  return React.createElement(Text, {\n    style: [styles.emojiFlag, {\n      fontSize: flagSize\n    }],\n    allowFontScaling: false\n  }, React.createElement(Emoji, Object.assign({}, {\n    name: asyncResult.result\n  })));\n});\nexport var Flag = function Flag(_ref3) {\n  var countryCode = _ref3.countryCode,\n    withEmoji = _ref3.withEmoji,\n    withFlagButton = _ref3.withFlagButton,\n    flagSize = _ref3.flagSize;\n  return withFlagButton ? React.createElement(View, {\n    style: styles.container\n  }, withEmoji ? React.createElement(EmojiFlag, Object.assign({}, {\n    countryCode: countryCode,\n    flagSize: flagSize\n  })) : React.createElement(ImageFlag, Object.assign({}, {\n    countryCode: countryCode,\n    flagSize: flagSize\n  }))) : null;\n};\nFlag.defaultProps = {\n  withEmoji: true,\n  withFlagButton: true\n};","map":{"version":3,"mappings":"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","names":["React","memo","Emoji","useContext","useAsync","styles","StyleSheet","create","container","justifyContent","alignItems","width","marginRight","emojiFlag","borderWidth","PixelRatio","get","borderColor","backgroundColor","imageFlag","resizeMode","height","opacity","ImageFlag","countryCode","flagSize","getImageFlagAsync","asyncResult","loading","ActivityIndicator","size","Image","style","source","uri","result","EmojiFlag","getEmojiFlagAsync","Text","fontSize","allowFontScaling","name","Flag","withEmoji","withFlagButton","View","defaultProps"],"sourceRoot":"","sources":["../src/Flag.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}