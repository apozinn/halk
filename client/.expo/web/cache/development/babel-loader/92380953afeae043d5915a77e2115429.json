{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { CURRENCIES, USES_FAHRENHEIT, USES_IMPERIAL, USES_RTL_LAYOUT } from \"./constants\";\nvar canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n\nfunction ensureCountryCode(countryCode) {\n  return countryCode === \"419\" ? \"UN\" : countryCode.toUpperCase();\n}\n\nfunction splitLanguageTag(languageTag) {\n  var _languageTag$split = languageTag.split(\"-\"),\n      _languageTag$split2 = _slicedToArray(_languageTag$split, 2),\n      languageCode = _languageTag$split2[0],\n      countryCode = _languageTag$split2[1];\n\n  return {\n    languageCode: languageCode,\n    countryCode: countryCode\n  };\n}\n\nfunction convertLanguageTagToLocale(languageTag, countryCodeFallback) {\n  var _splitLanguageTag = splitLanguageTag(languageTag),\n      languageCode = _splitLanguageTag.languageCode,\n      countryCode = _splitLanguageTag.countryCode;\n\n  languageCode = languageCode.toLowerCase();\n  countryCode = ensureCountryCode(countryCode || countryCodeFallback);\n  return {\n    languageCode: languageCode,\n    countryCode: countryCode,\n    languageTag: languageCode + \"-\" + countryCode,\n    isRTL: USES_RTL_LAYOUT.includes(languageCode)\n  };\n}\n\nfunction getCurrentLocale() {\n  return convertLanguageTagToLocale(navigator.language, getCountry());\n}\n\nexport function getCalendar() {\n  return \"gregorian\";\n}\nexport function getCountry() {\n  var _navigator = navigator,\n      _navigator$languages = _navigator.languages,\n      languages = _navigator$languages === void 0 ? [navigator.language] : _navigator$languages;\n\n  for (var i = 0; i < languages.length; i++) {\n    var _splitLanguageTag2 = splitLanguageTag(languages[i]),\n        countryCode = _splitLanguageTag2.countryCode;\n\n    if (countryCode) {\n      return ensureCountryCode(countryCode);\n    }\n  }\n\n  return \"US\";\n}\nexport function getCurrencies() {\n  var _navigator2 = navigator,\n      _navigator2$languages = _navigator2.languages,\n      languages = _navigator2$languages === void 0 ? [navigator.language] : _navigator2$languages;\n  var currencies = [];\n  languages.forEach(function (language) {\n    var _splitLanguageTag3 = splitLanguageTag(language),\n        countryCode = _splitLanguageTag3.countryCode;\n\n    if (countryCode) {\n      var currency = CURRENCIES[ensureCountryCode(countryCode)];\n\n      if (currencies.indexOf(currency) === -1) {\n        currencies.push(currency);\n      }\n    }\n  });\n\n  if (currencies.length === 0) {\n    currencies.push(\"USD\");\n  }\n\n  return currencies;\n}\nexport function getLocales() {\n  var _navigator3 = navigator,\n      _navigator3$languages = _navigator3.languages,\n      languages = _navigator3$languages === void 0 ? [navigator.language] : _navigator3$languages;\n  var countryCode = getCountry();\n  var cache = [];\n  var locales = [];\n  languages.forEach(function (language) {\n    var locale = convertLanguageTagToLocale(language, countryCode);\n\n    if (cache.indexOf(locale.languageTag) === -1) {\n      locales.push(locale);\n      cache.push(locale.languageTag);\n    }\n  });\n  return locales;\n}\nexport function getNumberFormatSettings() {\n  var _getCurrentLocale = getCurrentLocale(),\n      languageTag = _getCurrentLocale.languageTag;\n\n  var formatter = new Intl.NumberFormat(languageTag);\n  var separators = formatter.format(1000000.1).replace(/\\d/g, \"\");\n  return {\n    decimalSeparator: separators[separators.length - 1],\n    groupingSeparator: separators[0]\n  };\n}\nexport function getTemperatureUnit() {\n  return USES_FAHRENHEIT.includes(getCountry()) ? \"fahrenheit\" : \"celsius\";\n}\nexport function getTimeZone() {\n  var _getCurrentLocale2 = getCurrentLocale(),\n      languageTag = _getCurrentLocale2.languageTag;\n\n  var formatter = new Intl.DateTimeFormat(languageTag, {\n    hour: \"numeric\"\n  });\n  return formatter.resolvedOptions().timeZone || \"Etc/UTC\";\n}\nexport function uses24HourClock() {\n  var _getCurrentLocale3 = getCurrentLocale(),\n      languageTag = _getCurrentLocale3.languageTag;\n\n  var formatter = new Intl.DateTimeFormat(languageTag, {\n    hour: \"numeric\"\n  });\n  return !formatter.format(new Date(2000, 0, 1, 20)).match(/am|pm/i);\n}\nexport function usesMetricSystem() {\n  return !USES_IMPERIAL.includes(getCountry());\n}\nexport function usesAutoDateAndTime() {\n  return;\n}\nexport function usesAutoTimeZone() {\n  return;\n}\nexport var handlers = new Set();\n\nif (canUseDOM) {\n  window.addEventListener(\"languagechange\", function () {\n    handlers.forEach(function (handler) {\n      return handler();\n    });\n  });\n}","map":{"version":3,"mappings":"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","names":["CURRENCIES","USES_FAHRENHEIT","USES_IMPERIAL","USES_RTL_LAYOUT","canUseDOM","window","document","createElement","ensureCountryCode","countryCode","toUpperCase","splitLanguageTag","languageTag","split","languageCode","convertLanguageTagToLocale","countryCodeFallback","toLowerCase","isRTL","includes","getCurrentLocale","navigator","language","getCountry","getCalendar","languages","i","length","getCurrencies","currencies","forEach","currency","indexOf","push","getLocales","cache","locales","locale","getNumberFormatSettings","formatter","Intl","NumberFormat","separators","format","replace","decimalSeparator","groupingSeparator","getTemperatureUnit","getTimeZone","DateTimeFormat","hour","resolvedOptions","timeZone","uses24HourClock","Date","match","usesMetricSystem","usesAutoDateAndTime","usesAutoTimeZone","handlers","Set","addEventListener","handler"],"sources":["module.web.ts"],"sourcesContent":["import {\n  CURRENCIES,\n  USES_FAHRENHEIT,\n  USES_IMPERIAL,\n  USES_RTL_LAYOUT,\n} from \"./constants\";\nimport type {\n  Calendar,\n  Locale,\n  NumberFormatSettings,\n  TemperatureUnit,\n} from \"./types\";\n\nconst canUseDOM = !!(\n  typeof window !== \"undefined\" &&\n  window.document &&\n  window.document.createElement\n);\n\nfunction ensureCountryCode(countryCode: string): string {\n  return countryCode === \"419\" ? \"UN\" : countryCode.toUpperCase();\n}\n\nfunction splitLanguageTag(languageTag: string): {\n  languageCode: string;\n  countryCode?: string;\n} {\n  const [languageCode, countryCode] = languageTag.split(\"-\");\n  return { languageCode, countryCode };\n}\n\nfunction convertLanguageTagToLocale(\n  languageTag: string,\n  countryCodeFallback: string,\n): Locale {\n  let { languageCode, countryCode } = splitLanguageTag(languageTag);\n  languageCode = languageCode.toLowerCase();\n  countryCode = ensureCountryCode(countryCode || countryCodeFallback);\n\n  return {\n    languageCode,\n    countryCode,\n    languageTag: `${languageCode}-${countryCode}`,\n    isRTL: USES_RTL_LAYOUT.includes(languageCode),\n  };\n}\n\nfunction getCurrentLocale(): Locale {\n  return convertLanguageTagToLocale(navigator.language, getCountry());\n}\n\nexport function getCalendar(): Calendar {\n  return \"gregorian\";\n}\n\nexport function getCountry(): string {\n  const { languages = [navigator.language] } = navigator;\n\n  for (let i = 0; i < languages.length; i++) {\n    const { countryCode } = splitLanguageTag(languages[i]);\n\n    if (countryCode) {\n      return ensureCountryCode(countryCode);\n    }\n  }\n\n  return \"US\";\n}\n\nexport function getCurrencies(): string[] {\n  const { languages = [navigator.language] } = navigator;\n  const currencies: string[] = [];\n\n  languages.forEach((language) => {\n    const { countryCode } = splitLanguageTag(language);\n\n    if (countryCode) {\n      const currency = CURRENCIES[ensureCountryCode(countryCode)];\n\n      if (currencies.indexOf(currency) === -1) {\n        currencies.push(currency);\n      }\n    }\n  });\n\n  if (currencies.length === 0) {\n    currencies.push(\"USD\");\n  }\n\n  return currencies;\n}\n\nexport function getLocales(): Locale[] {\n  const { languages = [navigator.language] } = navigator;\n  const countryCode = getCountry();\n  const cache: string[] = [];\n  const locales: Locale[] = [];\n\n  languages.forEach((language) => {\n    const locale = convertLanguageTagToLocale(language, countryCode);\n\n    if (cache.indexOf(locale.languageTag) === -1) {\n      locales.push(locale);\n      cache.push(locale.languageTag);\n    }\n  });\n\n  return locales;\n}\n\nexport function getNumberFormatSettings(): NumberFormatSettings {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.NumberFormat(languageTag);\n  const separators = formatter.format(1000000.1).replace(/\\d/g, \"\");\n\n  return {\n    decimalSeparator: separators[separators.length - 1],\n    groupingSeparator: separators[0],\n  };\n}\n\nexport function getTemperatureUnit(): TemperatureUnit {\n  return USES_FAHRENHEIT.includes(getCountry()) ? \"fahrenheit\" : \"celsius\";\n}\n\nexport function getTimeZone(): string {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.DateTimeFormat(languageTag, { hour: \"numeric\" });\n  return formatter.resolvedOptions().timeZone || \"Etc/UTC\";\n}\n\nexport function uses24HourClock(): boolean {\n  const { languageTag } = getCurrentLocale();\n  const formatter = new Intl.DateTimeFormat(languageTag, { hour: \"numeric\" });\n  return !formatter.format(new Date(2000, 0, 1, 20)).match(/am|pm/i);\n}\n\nexport function usesMetricSystem(): boolean {\n  return !USES_IMPERIAL.includes(getCountry());\n}\n\nexport function usesAutoDateAndTime(): boolean | undefined {\n  return;\n}\n\nexport function usesAutoTimeZone(): boolean | undefined {\n  return;\n}\n\nexport const handlers: Set<Function> = new Set();\n\nif (canUseDOM) {\n  window.addEventListener(\"languagechange\", () => {\n    handlers.forEach((handler) => handler());\n  });\n}\n"]},"metadata":{},"sourceType":"module"}