{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Svg, { Path } from \"react-native-svg\";\nimport { Userpic } from \"react-native-userpic\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function StatusPic(_ref) {\n  var navigation = _ref.navigation,\n      stts = _ref.stts,\n      array = _ref.array;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      pd = _useState2[0],\n      setPd = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      path = _useState4[0],\n      setPath = _useState4[1];\n\n  function myArc(cx, cy, radius, max) {\n    var d = \" M \" + (cx + radius) + \" \" + cy;\n    var ang = 0;\n\n    while (ang <= max) {\n      var radians = ang * (Math.PI / 180);\n      var x = cx + Math.cos(radians) * radius;\n      var y = cy + Math.sin(radians) * radius;\n      d += \" L \" + x + \" \" + y;\n      ang++;\n    }\n\n    setPd(d);\n  }\n\n  function init(_x) {\n    return _init.apply(this, arguments);\n  }\n\n  function _init() {\n    _init = _asyncToGenerator(function* (a) {\n      if (array.length > 0) {\n        myArc(35, 35, 30, parseInt(360 / array.length) == 360 ? 360 : parseInt(360 / array.length) - 8);\n        var arr = [];\n        var rot = 270;\n        yield array.map(function (i) {\n          arr.push(_jsx(View, {\n            style: {\n              position: 'absolute'\n            },\n            children: _jsx(Svg, {\n              width: \"70\",\n              height: \"70\",\n              children: _jsx(Path, {\n                d: pd,\n                fill: \"none\",\n                stroke: i[1] == 0 ? \"#007dff\" : \"#b7b7b7\",\n                strokeWidth: 2,\n                transform: {\n                  rotation: rot,\n                  originX: 35,\n                  originY: 35\n                }\n              })\n            })\n          }));\n          rot = rot + 360 / array.length;\n        });\n        setPath(arr);\n      }\n    });\n    return _init.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    init(array);\n  }, [array, pd]);\n  return _jsxs(TouchableOpacity, {\n    style: styles.container,\n    children: [path, _jsx(Userpic, {\n      size: 45,\n      name: stts.author.profile.name,\n      source: {\n        uri: stts.author.profile.avatar\n      },\n      colorize: true\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    height: 54,\n    width: 54,\n    borderRadius: 27,\n    position: 'absolute',\n    marginLeft: 8\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","Svg","Path","Userpic","StatusPic","navigation","stts","array","pd","setPd","path","setPath","myArc","cx","cy","radius","max","d","ang","radians","Math","PI","x","cos","y","sin","init","a","length","parseInt","arr","rot","map","i","push","position","rotation","originX","originY","styles","container","author","profile","name","uri","avatar","StyleSheet","create","flexDirection","alignItems","height","width","borderRadius","marginLeft"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/src/components/statusPic.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, StyleSheet, TouchableOpacity } from \"react-native\";\nimport Svg, { Path, Rect } from \"react-native-svg\";\nimport { Userpic } from \"react-native-userpic\";\n\nexport default function StatusPic({ navigation, stts, array }) {\n\tconst [pd,setPd] = useState(\"\")\n  const [path,setPath] = useState([])\n\n  function myArc(cx, cy, radius, max){       \n    var d = \" M \"+ (cx + radius) + \" \" + cy;\n    let ang = 0;\n    while(ang<=max){\n      var radians = ang * (Math.PI / 180);  // convert degree to radians\n      var x = cx + Math.cos(radians) * radius;  \n      var y = cy + Math.sin(radians) * radius;\n      d += \" L \"+x + \" \" + y;\n      ang++\n    }\n    setPd(d)\n  }     \n\n  async function init(a) {\n    if(array.length > 0){\n      myArc(35, 35, 30, parseInt(360/array.length) == 360?360:parseInt(360/array.length)-8);\n      let arr =[];\n      let rot = 270;\n      await array.map(i=>{\n        arr.push(\n          <View style={{position:'absolute'}}> \n            <Svg width=\"70\" height=\"70\">\n              <Path d={pd} fill=\"none\" stroke={i[1]==0?\"#007dff\":\"#b7b7b7\"} strokeWidth={2} transform={{ rotation: rot, originX: 35, originY: 35 }} />\n            </Svg>\n          </View>\n        )\n        rot = rot + 360/array.length\n      })\n      setPath(arr)\n    }\n  }\n\n  useEffect(() => {\n    init(array);\n  }, [array,pd]);\n\n\treturn (\n\t\t<TouchableOpacity style={styles.container}>\n\t\t\t{path}\n\t\t\t<Userpic\n                  size={45}\n                  name={stts.author.profile.name}\n                  source={{ uri: stts.author.profile.avatar }}\n                  colorize={true}\n                />\n\t\t</TouchableOpacity>\n\t);\n}\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tflexDirection: \"row\",\n\t\talignItems: \"center\",\n\t},\n\tavatar:{\n    height:54,\n    width:54,\n    borderRadius:27,\n    position:'absolute',\n    marginLeft:8\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}