{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, memo } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Flag } from \"./Flag\";\nimport { useContext } from \"./CountryContext\";\nimport { CountryText } from \"./CountryText\";\nimport { useTheme } from \"./CountryTheme\";\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start'\n  },\n  containerWithEmoji: {\n    marginTop: 0\n  },\n  containerWithoutEmoji: {\n    marginTop: 5\n  },\n  flagWithSomethingContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center'\n  },\n  something: {\n    fontSize: 16\n  }\n});\nvar FlagText = function FlagText(props) {\n  return React.createElement(CountryText, Object.assign({}, props, {\n    style: styles.something\n  }));\n};\nvar FlagWithSomething = memo(function (_ref) {\n  var countryCode = _ref.countryCode,\n    withEmoji = _ref.withEmoji,\n    withCountryNameButton = _ref.withCountryNameButton,\n    withCurrencyButton = _ref.withCurrencyButton,\n    withCallingCodeButton = _ref.withCallingCodeButton,\n    withFlagButton = _ref.withFlagButton,\n    flagSize = _ref.flagSize,\n    placeholder = _ref.placeholder;\n  var _useContext = useContext(),\n    translation = _useContext.translation,\n    getCountryInfoAsync = _useContext.getCountryInfoAsync;\n  var _useState = useState({\n      countryName: '',\n      currency: '',\n      callingCode: ''\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var countryName = state.countryName,\n    currency = state.currency,\n    callingCode = state.callingCode;\n  useEffect(function () {\n    if (countryCode) {\n      getCountryInfoAsync({\n        countryCode: countryCode,\n        translation: translation\n      }).then(setState).catch(console.warn);\n    }\n  }, [countryCode, withCountryNameButton, withCurrencyButton, withCallingCodeButton]);\n  return React.createElement(View, {\n    style: styles.flagWithSomethingContainer\n  }, countryCode ? React.createElement(Flag, Object.assign({}, {\n    withEmoji: withEmoji,\n    countryCode: countryCode,\n    withFlagButton: withFlagButton,\n    flagSize: flagSize\n  })) : React.createElement(FlagText, null, placeholder), withCountryNameButton && countryName ? React.createElement(FlagText, null, countryName + ' ') : null, withCurrencyButton && currency ? React.createElement(FlagText, null, \"(\" + currency + \") \") : null, withCallingCodeButton && callingCode ? React.createElement(FlagText, null, \"+\" + callingCode) : null);\n});\nexport var FlagButton = function FlagButton(_ref2) {\n  var withEmoji = _ref2.withEmoji,\n    withCountryNameButton = _ref2.withCountryNameButton,\n    withCallingCodeButton = _ref2.withCallingCodeButton,\n    withCurrencyButton = _ref2.withCurrencyButton,\n    withFlagButton = _ref2.withFlagButton,\n    countryCode = _ref2.countryCode,\n    containerButtonStyle = _ref2.containerButtonStyle,\n    onOpen = _ref2.onOpen,\n    placeholder = _ref2.placeholder;\n  var _useTheme = useTheme(),\n    flagSize = _useTheme.flagSizeButton;\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.7,\n    onPress: onOpen\n  }, React.createElement(View, {\n    style: [styles.container, withEmoji ? styles.containerWithEmoji : styles.containerWithoutEmoji, containerButtonStyle]\n  }, React.createElement(FlagWithSomething, Object.assign({}, {\n    countryCode: countryCode,\n    withEmoji: withEmoji,\n    withCountryNameButton: withCountryNameButton,\n    withCallingCodeButton: withCallingCodeButton,\n    withCurrencyButton: withCurrencyButton,\n    withFlagButton: withFlagButton,\n    flagSize: flagSize,\n    placeholder: placeholder\n  }))));\n};\nFlagButton.defaultProps = {\n  withEmoji: true,\n  withCountryNameButton: false,\n  withCallingCodeButton: false,\n  withCurrencyButton: false,\n  withFlagButton: true\n};","map":{"version":3,"mappings":"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","names":["React","useState","useEffect","memo","Flag","useContext","CountryText","useTheme","styles","StyleSheet","create","container","alignItems","justifyContent","containerWithEmoji","marginTop","containerWithoutEmoji","flagWithSomethingContainer","flexDirection","flexWrap","something","fontSize","FlagText","props","style","FlagWithSomething","countryCode","withEmoji","withCountryNameButton","withCurrencyButton","withCallingCodeButton","withFlagButton","flagSize","placeholder","translation","getCountryInfoAsync","countryName","currency","callingCode","state","setState","then","catch","console","warn","View","FlagButton","containerButtonStyle","onOpen","flagSizeButton","TouchableOpacity","activeOpacity","onPress","defaultProps"],"sourceRoot":"","sources":["../src/FlagButton.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}