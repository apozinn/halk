{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useContext, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { getColors } from \"../../constants/Colors\";\nimport { searchUser } from \"../../middleware/api\";\nimport * as uuid from \"uuid\";\nimport { Userpic } from \"react-native-userpic\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function NewChat(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      results = _useState4[0],\n      setResults = _useState4[1];\n\n  var _useContext = useContext(ChatsContext),\n      chats = _useContext.chats,\n      updateChats = _useContext.updateChats;\n\n  var _useContext2 = useContext(UserContext),\n      user = _useContext2.user;\n\n  var colors = getColors();\n  useEffect(function () {\n    if (search) {\n      searchUser(search).then(function (data) {\n        return setResults(data);\n      });\n    }\n  }, [search]);\n\n  function generateKey() {\n    var parts = [];\n\n    for (var i = 0; i < 5; i++) {\n      var numberSequence = Math.floor(Math.random() * (999999 - 100000 + 1) + 100000);\n      parts.push(numberSequence);\n    }\n\n    return parts.join(\" \");\n  }\n\n  function goToChat(_x) {\n    return _goToChat.apply(this, arguments);\n  }\n\n  function _goToChat() {\n    _goToChat = _asyncToGenerator(function* (userChat) {\n      var existsChat = chats.filter(function (c) {\n        return c.user.id === userChat.id;\n      })[0];\n\n      if (existsChat) {\n        return navigation.navigate(\"Chat\", {\n          id: existsChat.id\n        });\n      }\n\n      if (userChat.id === user.id) {\n        return navigation.navigate(\"Root\");\n      }\n\n      var newChat = {\n        id: uuid.v4(),\n        user: userChat,\n        key: generateKey(),\n        messages: [],\n        newChat: true\n      };\n      chats.push(newChat);\n      updateChats({\n        chats: chats\n      });\n      navigation.navigate(\"Chat\", {\n        id: newChat.id\n      });\n    });\n    return _goToChat.apply(this, arguments);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: [styles.inputContainer, {\n        borderBottomWidth: 1,\n        borderBottomColor: colors.defaultColors.border\n      }],\n      children: [_jsx(Pressable, {\n        style: function style(_ref2) {\n          var pressed = _ref2.pressed;\n          return [{\n            opacity: pressed ? 0.5 : 1\n          }];\n        },\n        onPress: function onPress() {\n          return navigation.navigate(\"Root\");\n        },\n        children: _jsx(AntDesign, {\n          name: \"arrowleft\",\n          size: 25,\n          color: colors.tint\n        })\n      }), _jsx(TextInput, {\n        style: [styles.input, {\n          backgroundColor: colors.defaultColors.card\n        }],\n        placeholder: \"Pesquisar\",\n        onChangeText: function onChangeText(value) {\n          return setSearch(value);\n        },\n        value: search\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.results,\n      children: !search ? _jsx(View, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 12\n          },\n          children: \"Search for a user by name, username or ID\"\n        })\n      }) : _jsx(_Fragment, {\n        children: results.map(function (user, index) {\n          return _jsx(Pressable, {\n            style: function style(_ref3) {\n              var pressed = _ref3.pressed;\n              return [styles.userContainer, {\n                backgroundColor: pressed ? colors.defaultColors.card : \"transparent\"\n              }];\n            },\n            onPress: function onPress() {\n              return goToChat(user);\n            },\n            children: _jsxs(View, {\n              style: styles.leftContent,\n              children: [_jsx(Userpic, {\n                size: 50,\n                name: user.profile.name,\n                source: {\n                  uri: user.profile.avatar\n                },\n                colorize: true,\n                borderRadius: \"50%\",\n                style: {\n                  marginRight: 10\n                }\n              }), _jsxs(View, {\n                style: {\n                  justifyContent: \"center\"\n                },\n                children: [_jsx(Text, {\n                  style: styles.username,\n                  children: user.profile.username\n                }), _jsx(Text, {\n                  style: styles.name,\n                  children: user.profile.name\n                })]\n              })]\n            })\n          }, index);\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10\n  },\n  input: {\n    padding: 5,\n    borderRadius: 10,\n    marginLeft: 10,\n    width: \"100%\"\n  },\n  results: {\n    flex: 1,\n    margin: 10\n  },\n  userContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    padding: 5\n  },\n  leftContent: {\n    flexDirection: \"row\"\n  },\n  userIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 100,\n    marginRight: 10\n  },\n  username: {\n    fontWeight: \"bold\"\n  },\n  name: {\n    fontSize: 14\n  }\n});","map":{"version":3,"names":["useState","useContext","useEffect","ChatsContext","UserContext","TextInput","Text","AntDesign","getColors","searchUser","uuid","Userpic","NewChat","navigation","search","setSearch","results","setResults","chats","updateChats","user","colors","then","data","generateKey","parts","i","numberSequence","Math","floor","random","push","join","goToChat","userChat","existsChat","filter","c","id","navigate","newChat","v4","key","messages","styles","container","inputContainer","borderBottomWidth","borderBottomColor","defaultColors","border","pressed","opacity","tint","input","backgroundColor","card","value","alignItems","justifyContent","fontSize","map","index","userContainer","leftContent","profile","name","uri","avatar","marginRight","username","StyleSheet","create","flex","flexDirection","padding","borderRadius","marginLeft","width","margin","userIcon","height","fontWeight"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/app/newChat.tsx"],"sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport { View, StyleSheet, ScrollView, Pressable, Image } from \"react-native\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { getColors } from \"../../constants/Colors\";\nimport { searchUser } from \"../../middleware/api\";\nimport * as uuid from \"uuid\";\nimport { Userpic } from \"react-native-userpic\";\n\nexport default function NewChat({\n  navigation,\n}: RootStackScreenProps<\"NewChat\">) {\n  const [search, setSearch] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const { chats, updateChats } = useContext(ChatsContext);\n  const { user } = useContext(UserContext);\n  const colors = getColors();\n\n  useEffect(() => {\n    if (search) {\n      searchUser(search).then((data) => setResults(data));\n    }\n  }, [search]);\n\n  function generateKey() {\n    const parts = [];\n    for (let i = 0; i < 5; i++) {\n      const numberSequence = Math.floor(\n        Math.random() * (999999 - 100000 + 1) + 100000\n      );\n      parts.push(numberSequence);\n    }\n\n    return parts.join(\" \");\n  }\n\n  async function goToChat(userChat) {\n    const existsChat = chats.filter((c) => c.user.id === userChat.id)[0];\n    if (existsChat) {\n      return navigation.navigate(\"Chat\", {\n        id: existsChat.id,\n      });\n    }\n\n    if (userChat.id === user.id) {\n      return navigation.navigate(\"Root\");\n    }\n\n    const newChat = {\n      id: uuid.v4(),\n      user: userChat,\n      key: generateKey(),\n      messages: [],\n      newChat: true,\n    };\n\n    chats.push(newChat);\n    updateChats({ chats });\n\n    navigation.navigate(\"Chat\", {\n      id: newChat.id,\n    });\n  }\n\n  return (\n    <View style={styles.container}>\n      <View\n        style={[\n          styles.inputContainer,\n          {\n            borderBottomWidth: 1,\n            borderBottomColor: colors.defaultColors.border,\n          },\n        ]}\n      >\n        <Pressable\n          style={({ pressed }) => [{ opacity: pressed ? 0.5 : 1 }]}\n          onPress={() => navigation.navigate(\"Root\")}\n        >\n          <AntDesign name=\"arrowleft\" size={25} color={colors.tint} />\n        </Pressable>\n        <TextInput\n          style={[styles.input, { backgroundColor: colors.defaultColors.card }]}\n          placeholder=\"Pesquisar\"\n          onChangeText={(value) => setSearch(value)}\n          value={search}\n        />\n      </View>\n      <ScrollView style={styles.results}>\n        {!search ? (\n          <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n            <Text style={{ fontSize: 12 }}>\n              Search for a user by name, username or ID\n            </Text>\n          </View>\n        ) : (\n          <>\n            {results.map((user, index) => (\n              <Pressable\n                style={({ pressed }) => [\n                  styles.userContainer,\n                  {\n                    backgroundColor: pressed\n                      ? colors.defaultColors.card\n                      : \"transparent\",\n                  },\n                ]}\n                key={index}\n                onPress={() => goToChat(user)}\n              >\n                <View style={styles.leftContent}>\n                  <Userpic\n                    size={50}\n                    name={user.profile.name}\n                    source={{ uri: user.profile.avatar }}\n                    colorize={true}\n                    borderRadius=\"50%\"\n                    style={{ marginRight: 10 }}\n                  />\n                  <View style={{ justifyContent: \"center\" }}>\n                    <Text style={styles.username}>{user.profile.username}</Text>\n                    <Text style={styles.name}>{user.profile.name}</Text>\n                  </View>\n                </View>\n              </Pressable>\n            ))}\n          </>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  input: {\n    padding: 5,\n    borderRadius: 10,\n    marginLeft: 10,\n    width: \"100%\",\n  },\n  results: {\n    flex: 1,\n    margin: 10,\n  },\n  userContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    padding: 5,\n  },\n  leftContent: {\n    flexDirection: \"row\",\n  },\n  userIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 100,\n    marginRight: 10,\n  },\n  username: {\n    fontWeight: \"bold\",\n  },\n  name: {\n    fontSize: 14,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}