{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useContext, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { getColors } from \"../../constants/Colors\";\nimport { searchUser } from \"../../middleware/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function NewChat(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      results = _useState4[0],\n      setResults = _useState4[1];\n\n  var _useContext = useContext(ChatsContext),\n      chats = _useContext.chats;\n\n  var colors = getColors();\n  useEffect(function () {\n    if (search) {\n      searchUser(search).then(function (data) {\n        return console.log(data);\n      });\n    }\n  }, [search]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(AntDesign, {\n        name: \"arrowleft\",\n        size: 25,\n        color: colors.tint\n      }), _jsx(TextInput, {\n        style: [styles.input, {\n          backgroundColor: colors.defaultColors.card\n        }],\n        placeholder: \"Pesquisar\",\n        onChangeText: function onChangeText(value) {\n          return setSearch(value);\n        },\n        value: search\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.results,\n      children: !search ? _jsx(View, {\n        style: {\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 12\n          },\n          children: \"Search for a user by name, username or ID\"\n        })\n      }) : _jsx(_Fragment, {\n        children: results.map(function (user, index) {\n          return _jsx(Pressable, {\n            style: function style(_ref2) {\n              var pressed = _ref2.pressed;\n              return [styles.userContainer, {\n                backgroundColor: pressed ? colors.defaultColors.card : \"transparent\"\n              }];\n            },\n            onPress: function onPress() {\n              return console.log(use);\n            },\n            children: _jsxs(View, {\n              style: styles.leftContent,\n              children: [_jsx(Image, {\n                source: user.profile.avatar ? {\n                  uri: user.profile.avatar\n                } : require(\"../../assets/images/userIcon.png\"),\n                style: styles.userIcon\n              }), _jsxs(View, {\n                style: {\n                  justifyContent: \"center\"\n                },\n                children: [_jsx(Text, {\n                  style: styles.username,\n                  children: user.profile.username\n                }), _jsx(Text, {\n                  style: styles.name,\n                  children: user.profile.name\n                })]\n              })]\n            })\n          }, index);\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10\n  },\n  input: {\n    padding: 5,\n    borderRadius: 10,\n    marginLeft: 10,\n    width: \"100%\"\n  },\n  results: {\n    flex: 1,\n    margin: 10\n  },\n  userContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    padding: 5\n  },\n  leftContent: {\n    flexDirection: \"row\"\n  },\n  userIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 100,\n    marginRight: 10\n  },\n  username: {\n    fontWeight: \"bold\"\n  },\n  name: {\n    fontSize: 14\n  }\n});","map":{"version":3,"names":["useState","useContext","useEffect","ChatsContext","TextInput","Text","AntDesign","getColors","searchUser","NewChat","navigation","search","setSearch","results","setResults","chats","colors","then","data","console","log","styles","container","inputContainer","tint","input","backgroundColor","defaultColors","card","value","alignItems","justifyContent","fontSize","map","user","index","pressed","userContainer","use","leftContent","profile","avatar","uri","require","userIcon","username","name","StyleSheet","create","flex","flexDirection","padding","borderRadius","marginLeft","width","margin","height","marginRight","fontWeight"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/app/newChat.tsx"],"sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport { View, StyleSheet, ScrollView, Pressable, Image } from \"react-native\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { getColors } from \"../../constants/Colors\";\nimport { searchUser } from \"../../middleware/api\";\n\nexport default function NewChat({\n  navigation,\n}: RootStackScreenProps<\"NewChat\">) {\n  const [search, setSearch] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const { chats } = useContext(ChatsContext);\n  const colors = getColors();\n\n  useEffect(() => {\n    if (search) {\n      searchUser(search).then((data) => console.log(data));\n    }\n  }, [search]);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.inputContainer}>\n        <AntDesign name=\"arrowleft\" size={25} color={colors.tint} />\n        <TextInput\n          style={[styles.input, { backgroundColor: colors.defaultColors.card }]}\n          placeholder=\"Pesquisar\"\n          onChangeText={(value) => setSearch(value)}\n          value={search}\n        />\n      </View>\n      <ScrollView style={styles.results}>\n        {!search ? (\n          <View style={{ alignItems: \"center\", justifyContent: \"center\" }}>\n            <Text style={{ fontSize: 12 }}>\n              Search for a user by name, username or ID\n            </Text>\n          </View>\n        ) : (\n          <>\n            {results.map((user, index) => (\n              <Pressable\n                style={({ pressed }) => [\n                  styles.userContainer,\n                  {\n                    backgroundColor: pressed\n                      ? colors.defaultColors.card\n                      : \"transparent\",\n                  },\n                ]}\n                key={index}\n                onPress={() => console.log(use)}>\n                <View style={styles.leftContent}>\n                  <Image\n                    source={\n                      user.profile.avatar\n                        ? { uri: user.profile.avatar }\n                        : require(\"../../assets/images/userIcon.png\")\n                    }\n                    style={styles.userIcon}\n                  />\n                  <View style={{ justifyContent: \"center\" }}>\n                    <Text style={styles.username}>{user.profile.username}</Text>\n                    <Text style={styles.name}>{user.profile.name}</Text>\n                  </View>\n                </View>\n              </Pressable>\n            ))}\n          </>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  input: {\n    padding: 5,\n    borderRadius: 10,\n    marginLeft: 10,\n    width: \"100%\",\n  },\n  results: {\n    flex: 1,\n    margin: 10,\n  },\n  userContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    padding: 5,\n  },\n  leftContent: {\n    flexDirection: \"row\",\n  },\n  userIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 100,\n    marginRight: 10,\n  },\n  username: {\n    fontWeight: \"bold\",\n  },\n  name: {\n    fontSize: 14,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}