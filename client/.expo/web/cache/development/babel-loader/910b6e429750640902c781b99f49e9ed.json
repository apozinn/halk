{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { FlagType, CountryCodeList } from \"./types\";\nimport Fuse from 'fuse.js';\nvar imageJsonUrl = 'https://xcarpentier.github.io/react-native-country-picker-modal/countries/';\nvar localData = {\n  emojiCountries: undefined,\n  imageCountries: undefined\n};\nexport var loadDataAsync = function (data) {\n  return function () {\n    var dataType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : FlagType.EMOJI;\n    return new Promise(function (resolve, reject) {\n      switch (dataType) {\n        case FlagType.FLAT:\n          if (!data.imageCountries) {\n            fetch(imageJsonUrl).then(function (response) {\n              return response.json();\n            }).then(function (remoteData) {\n              data.imageCountries = remoteData;\n              resolve(data.imageCountries);\n            }).catch(reject);\n          } else {\n            resolve(data.imageCountries);\n          }\n\n          break;\n\n        default:\n          if (!data.emojiCountries) {\n            data.emojiCountries = require(\"./assets/data/countries-emoji.json\");\n            resolve(data.emojiCountries);\n          } else {\n            resolve(data.emojiCountries);\n          }\n\n          break;\n      }\n    });\n  };\n}(localData);\nexport var getEmojiFlagAsync = function () {\n  var _ref = _asyncToGenerator(function* () {\n    var countryCode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'FR';\n    var countries = yield loadDataAsync();\n\n    if (!countries) {\n      throw new Error('Unable to find emoji because emojiCountries is undefined');\n    }\n\n    return countries[countryCode].flag;\n  });\n\n  return function getEmojiFlagAsync() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getImageFlagAsync = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    var countryCode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'FR';\n    var countries = yield loadDataAsync(FlagType.FLAT);\n\n    if (!countries) {\n      throw new Error('Unable to find image because imageCountries is undefined');\n    }\n\n    return countries[countryCode].flag;\n  });\n\n  return function getImageFlagAsync() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getCountryNameAsync = function () {\n  var _ref3 = _asyncToGenerator(function* () {\n    var countryCode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'FR';\n    var translation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'common';\n    var countries = yield loadDataAsync();\n\n    if (!countries) {\n      throw new Error('Unable to find image because imageCountries is undefined');\n    }\n\n    return countries[countryCode].name ? countries[countryCode].name[translation] : countries[countryCode].name['common'];\n  });\n\n  return function getCountryNameAsync() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var getCountryCallingCodeAsync = function () {\n  var _ref4 = _asyncToGenerator(function* (countryCode) {\n    var countries = yield loadDataAsync();\n\n    if (!countries) {\n      throw new Error('Unable to find image because imageCountries is undefined');\n    }\n\n    return countries[countryCode].callingCode[0];\n  });\n\n  return function getCountryCallingCodeAsync(_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var getCountryCurrencyAsync = function () {\n  var _ref5 = _asyncToGenerator(function* (countryCode) {\n    var countries = yield loadDataAsync();\n\n    if (!countries) {\n      throw new Error('Unable to find image because imageCountries is undefined');\n    }\n\n    return countries[countryCode].currency[0];\n  });\n\n  return function getCountryCurrencyAsync(_x2) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nvar isCountryPresent = function isCountryPresent(countries) {\n  return function (countryCode) {\n    return !!countries[countryCode];\n  };\n};\n\nvar isRegion = function isRegion(region) {\n  return function (country) {\n    return region ? country.region === region : true;\n  };\n};\n\nvar isSubregion = function isSubregion(subregion) {\n  return function (country) {\n    return subregion ? country.subregion === subregion : true;\n  };\n};\n\nvar isIncluded = function isIncluded(countryCodes) {\n  return function (country) {\n    return countryCodes && countryCodes.length > 0 ? countryCodes.includes(country.cca2) : true;\n  };\n};\n\nvar isExcluded = function isExcluded(excludeCountries) {\n  return function (country) {\n    return excludeCountries && excludeCountries.length > 0 ? !excludeCountries.includes(country.cca2) : true;\n  };\n};\n\nexport var getCountriesAsync = function () {\n  var _ref6 = _asyncToGenerator(function* (flagType) {\n    var translation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'common';\n    var region = arguments.length > 2 ? arguments[2] : undefined;\n    var subregion = arguments.length > 3 ? arguments[3] : undefined;\n    var countryCodes = arguments.length > 4 ? arguments[4] : undefined;\n    var excludeCountries = arguments.length > 5 ? arguments[5] : undefined;\n    var preferredCountries = arguments.length > 6 ? arguments[6] : undefined;\n    var withAlphaFilter = arguments.length > 7 ? arguments[7] : undefined;\n    var countriesRaw = yield loadDataAsync(flagType);\n\n    if (!countriesRaw) {\n      return [];\n    }\n\n    if (preferredCountries && !withAlphaFilter) {\n      var newCountryCodeList = [].concat(_toConsumableArray(preferredCountries), _toConsumableArray(CountryCodeList.filter(function (code) {\n        return !preferredCountries.includes(code);\n      })));\n      var countries = newCountryCodeList.filter(isCountryPresent(countriesRaw)).map(function (cca2) {\n        return _objectSpread({\n          cca2: cca2\n        }, _objectSpread(_objectSpread({}, countriesRaw[cca2]), {}, {\n          name: countriesRaw[cca2].name[translation] || countriesRaw[cca2].name['common']\n        }));\n      }).filter(isRegion(region)).filter(isSubregion(subregion)).filter(isIncluded(countryCodes)).filter(isExcluded(excludeCountries));\n      return countries;\n    } else {\n      var _countries = CountryCodeList.filter(isCountryPresent(countriesRaw)).map(function (cca2) {\n        return _objectSpread({\n          cca2: cca2\n        }, _objectSpread(_objectSpread({}, countriesRaw[cca2]), {}, {\n          name: countriesRaw[cca2].name[translation] || countriesRaw[cca2].name['common']\n        }));\n      }).filter(isRegion(region)).filter(isSubregion(subregion)).filter(isIncluded(countryCodes)).filter(isExcluded(excludeCountries)).sort(function (country1, country2) {\n        return country1.name.localeCompare(country2.name);\n      });\n\n      return _countries;\n    }\n  });\n\n  return function getCountriesAsync(_x3) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nvar DEFAULT_FUSE_OPTION = {\n  shouldSort: true,\n  threshold: 0.3,\n  location: 0,\n  distance: 100,\n  maxPatternLength: 32,\n  minMatchCharLength: 1,\n  keys: ['name', 'cca2', 'callingCode']\n};\nvar fuse;\nexport var search = function search() {\n  var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_FUSE_OPTION;\n\n  if (data.length === 0) {\n    return [];\n  }\n\n  if (!fuse) {\n    fuse = new Fuse(data, options);\n  }\n\n  if (filter && filter !== '') {\n    var result = fuse.search(filter);\n    return result;\n  } else {\n    return data;\n  }\n};\n\nvar uniq = function uniq(arr) {\n  return Array.from(new Set(arr));\n};\n\nexport var getLetters = function getLetters(countries) {\n  return uniq(countries.map(function (country) {\n    return country.name.substr(0, 1).toLocaleUpperCase();\n  }).sort(function (l1, l2) {\n    return l1.localeCompare(l2);\n  }));\n};\nexport var getCountryInfoAsync = function () {\n  var _ref8 = _asyncToGenerator(function* (_ref7) {\n    var countryCode = _ref7.countryCode,\n        translation = _ref7.translation;\n    var countryName = yield getCountryNameAsync(countryCode, translation || 'common');\n    var currency = yield getCountryCurrencyAsync(countryCode);\n    var callingCode = yield getCountryCallingCodeAsync(countryCode);\n    return {\n      countryName: countryName,\n      currency: currency,\n      callingCode: callingCode\n    };\n  });\n\n  return function getCountryInfoAsync(_x4) {\n    return _ref8.apply(this, arguments);\n  };\n}();","map":{"version":3,"mappings":"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","names":["FlagType","CountryCodeList","Fuse","imageJsonUrl","localData","emojiCountries","undefined","imageCountries","loadDataAsync","data","dataType","EMOJI","Promise","resolve","reject","FLAT","fetch","then","response","json","remoteData","catch","require","getEmojiFlagAsync","countryCode","countries","Error","flag","getImageFlagAsync","getCountryNameAsync","translation","name","getCountryCallingCodeAsync","callingCode","getCountryCurrencyAsync","currency","isCountryPresent","isRegion","region","country","isSubregion","subregion","isIncluded","countryCodes","length","includes","cca2","isExcluded","excludeCountries","getCountriesAsync","flagType","preferredCountries","withAlphaFilter","countriesRaw","newCountryCodeList","filter","code","map","sort","country1","country2","localeCompare","DEFAULT_FUSE_OPTION","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","fuse","search","options","result","uniq","arr","Array","from","Set","getLetters","substr","toLocaleUpperCase","l1","l2","getCountryInfoAsync","countryName"],"sourceRoot":"","sources":["../src/CountryService.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}