{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport io from \"socket.io-client\";\nimport * as dotenv from \"dotenv\";\nimport * as uuid from \"uuid\";\ndotenv.config();\n\nvar Socket = function () {\n  function Socket() {\n    _classCallCheck(this, Socket);\n\n    this.socket = io(\"http://localhost:3000\", {\n      transports: [\"websocket\"]\n    });\n  }\n\n  _createClass(Socket, [{\n    key: \"getSocket\",\n    value: function getSocket() {\n      return this.socket;\n    }\n  }, {\n    key: \"joinRoom\",\n    value: function joinRoom(room) {\n      if (!room) return;\n      this.socket.emit(\"joinRoom\", room);\n    }\n  }, {\n    key: \"getMessages\",\n    value: function () {\n      var _getMessages = _asyncToGenerator(function* (room) {});\n\n      function getMessages(_x) {\n        return _getMessages.apply(this, arguments);\n      }\n\n      return getMessages;\n    }()\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(text) {\n      var message = {\n        id: uuid.v4(),\n        text: text,\n        author: {}\n      };\n      this.socket.on(\"message\", function (msg) {\n        return console.log(msg);\n      });\n      this.socket.emit(\"message\", message);\n    }\n  }], [{\n    key: \"sendHalkMessage\",\n    value: function sendHalkMessage() {\n      var halkUser = {\n        id: \"0\",\n        phone: \"\",\n        profile: {\n          name: \"Halk\",\n          username: \"Halk\",\n          avatar: require(\"../../assets/images/icon.png\"),\n          bio: \"Official account of the team Halk\"\n        }\n      };\n      var halkChat = {\n        id: \"a384b2bc-1a3b-49d3-bdf5-1be72350c494\",\n        user: halkUser,\n        messages: [{\n          author: halkUser,\n          content: \"Welcome to halk!\",\n          createdAt: new Date().getHours() + \":\" + new Date().getMinutes(),\n          id: uuid.v4(),\n          read: false\n        }]\n      };\n      return halkChat;\n    }\n  }]);\n\n  return Socket;\n}();\n\nexport { Socket as default };","map":{"version":3,"names":["io","dotenv","uuid","config","Socket","socket","transports","room","emit","text","message","id","v4","author","on","msg","console","log","halkUser","phone","profile","name","username","avatar","require","bio","halkChat","user","messages","content","createdAt","Date","getHours","getMinutes","read"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/src/utils/socket.ts"],"sourcesContent":["import io from \"socket.io-client\";\nimport * as dotenv from \"dotenv\";\nimport * as uuid from \"uuid\";\n\ndotenv.config();\n\nexport default class Socket {\n  constructor() {\n    this.socket = io(\"http://localhost:3000\", {\n      transports: [\"websocket\"],\n    });\n  }\n\n  public getSocket() {\n    return this.socket;\n  }\n\n  public joinRoom(room: string) {\n    if (!room) return;\n    this.socket.emit(\"joinRoom\", room);\n  }\n\n  public async getMessages(room) {}\n\n  public sendMessage(text: string) {\n    const message = {\n      id: uuid.v4(),\n      text,\n      author: {},\n    };\n\n    this.socket.on(\"message\", (msg) => console.log(msg));\n    this.socket.emit(\"message\", message);\n  }\n\n  public async getMessages(room: string) {}\n\n  static sendHalkMessage() {\n    const halkUser = {\n      id: \"0\",\n      phone: \"\",\n      profile: {\n        name: \"Halk\",\n        username: \"Halk\",\n        avatar: require(\"../../assets/images/icon.png\"),\n        bio: \"Official account of the team Halk\",\n      },\n    };\n\n    const halkChat = {\n      id: \"a384b2bc-1a3b-49d3-bdf5-1be72350c494\",\n      user: halkUser,\n      messages: [\n        {\n          author: halkUser,\n          content: \"Welcome to halk!\",\n          createdAt: `${new Date().getHours()}:${new Date().getMinutes()}`,\n          id: uuid.v4(),\n          read: false,\n        },\n      ],\n    };\n\n    return halkChat;\n  }\n}\n"],"mappings":";;;AAAA,OAAOA,EAAP,MAAe,kBAAf;AACA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AAEAD,MAAM,CAACE,MAAP;;IAEqBC,M;EACnB,kBAAc;IAAA;;IACZ,KAAKC,MAAL,GAAcL,EAAE,CAAC,uBAAD,EAA0B;MACxCM,UAAU,EAAE,CAAC,WAAD;IAD4B,CAA1B,CAAhB;EAGD;;;;WAED,qBAAmB;MACjB,OAAO,KAAKD,MAAZ;IACD;;;WAED,kBAAgBE,IAAhB,EAA8B;MAC5B,IAAI,CAACA,IAAL,EAAW;MACX,KAAKF,MAAL,CAAYG,IAAZ,CAAiB,UAAjB,EAA6BD,IAA7B;IACD;;;;2CAeD,WAAyBA,IAAzB,EAAuC,CAAE,C;;;;;;;;;;WAXzC,qBAAmBE,IAAnB,EAAiC;MAC/B,IAAMC,OAAO,GAAG;QACdC,EAAE,EAAET,IAAI,CAACU,EAAL,EADU;QAEdH,IAAI,EAAJA,IAFc;QAGdI,MAAM,EAAE;MAHM,CAAhB;MAMA,KAAKR,MAAL,CAAYS,EAAZ,CAAe,SAAf,EAA0B,UAACC,GAAD;QAAA,OAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;MAAA,CAA1B;MACA,KAAKV,MAAL,CAAYG,IAAZ,CAAiB,SAAjB,EAA4BE,OAA5B;IACD;;;WAID,2BAAyB;MACvB,IAAMQ,QAAQ,GAAG;QACfP,EAAE,EAAE,GADW;QAEfQ,KAAK,EAAE,EAFQ;QAGfC,OAAO,EAAE;UACPC,IAAI,EAAE,MADC;UAEPC,QAAQ,EAAE,MAFH;UAGPC,MAAM,EAAEC,OAAO,gCAHR;UAIPC,GAAG,EAAE;QAJE;MAHM,CAAjB;MAWA,IAAMC,QAAQ,GAAG;QACff,EAAE,EAAE,sCADW;QAEfgB,IAAI,EAAET,QAFS;QAGfU,QAAQ,EAAE,CACR;UACEf,MAAM,EAAEK,QADV;UAEEW,OAAO,EAAE,kBAFX;UAGEC,SAAS,EAAK,IAAIC,IAAJ,GAAWC,QAAX,EAAL,SAA8B,IAAID,IAAJ,GAAWE,UAAX,EAHzC;UAIEtB,EAAE,EAAET,IAAI,CAACU,EAAL,EAJN;UAKEsB,IAAI,EAAE;QALR,CADQ;MAHK,CAAjB;MAcA,OAAOR,QAAP;IACD;;;;;;SA1DkBtB,M"},"metadata":{},"sourceType":"module"}