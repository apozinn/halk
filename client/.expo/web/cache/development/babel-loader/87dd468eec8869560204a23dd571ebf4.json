{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport io from \"socket.io-client\";\nimport * as uuid from \"uuid\";\nimport { Cipher } from \"../../middleware/crypto\";\nexport var SocketController = function () {\n  function SocketController(props) {\n    _classCallCheck(this, SocketController);\n\n    this.readMessages = function () {\n      console.log(\"pqp hem\");\n    };\n\n    this.user = props.user;\n    this.updateUser = props.updateUser;\n    this.chats = props.chats;\n    this.updateChats = props.updateChats;\n    this.socket = props.socket;\n    this.loadEvents();\n  }\n\n  _createClass(SocketController, [{\n    key: \"loadEvents\",\n    value: function loadEvents() {\n      var _this = this;\n\n      this.socket.on(\"receiveMessage\", function (msg) {\n        var chat = _this.chats.filter(function (c) {\n          return c.id === msg.chat.id;\n        })[0];\n\n        if (chat) {\n          _this.chats.filter(function (c) {\n            return c.id === msg.chat.id;\n          }).map(function (c) {\n            return c.messages.push(msg);\n          });\n\n          _this.updateChats({\n            chats: _this.chats\n          });\n        }\n      });\n      this.socket.on(\"newChat\", function (_ref) {\n        var newChat = _ref.newChat;\n\n        _this.chats.push(newChat);\n\n        _this.updateChats({\n          chats: _this.chats\n        });\n      });\n      this.socket.on(\"readMessage\", function (payload) {\n        var chat = _this.chats.filter(function (c) {\n          return c.id === payload.chat.id;\n        })[0];\n\n        if (chat) {\n          chat.messages.filter(function (m) {\n            return m.read === false;\n          }).map(function (m) {\n            return m.read = true;\n          });\n\n          _this.updateChats({\n            chats: _this.chats\n          });\n        }\n      });\n    }\n  }], [{\n    key: \"joinedChat\",\n    value: function joinedChat(_ref2) {\n      var _this2 = this;\n\n      var chats = _ref2.chats,\n          chat = _ref2.chat,\n          socket = _ref2.socket;\n      socket.emit(\"joinRoom\", {\n        room: chat.id,\n        otherUser: chat.user.id\n      });\n      socket.emit(\"verifyIfUserIsOnline\", {\n        userId: chat.user.id\n      });\n      socket.on(\"readMessage\", function (p) {\n        return _this2.readMessages();\n      });\n    }\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(_ref3) {\n      var user = _ref3.user,\n          chats = _ref3.chats,\n          updateChats = _ref3.updateChats,\n          chat = _ref3.chat,\n          socket = _ref3.socket,\n          text = _ref3.text;\n      var timeNow = new Date().getTime();\n      var message = {\n        chat: {\n          id: chat.id\n        },\n        author: user,\n        read: false,\n        createdAt: timeNow,\n        content: Cipher(text, chat.id),\n        id: \"\" + timeNow + Math.floor(Math.random() * (100000000 - 1000000 + 1) + 1000000)\n      };\n\n      if (chat.newChat) {\n        socket.emit(\"sendMessage\", {\n          room: chat.id,\n          toUser: chat.user.id,\n          message: message,\n          newChat: true\n        });\n        var thisChat = chats.filter(function (c) {\n          return c.id === chat.id;\n        })[0];\n        delete thisChat.newChat;\n        updateChats({\n          chats: chats\n        });\n      } else {\n        socket.emit(\"sendMessage\", {\n          room: chat.id,\n          toUser: chat.user.id,\n          message: message\n        });\n      }\n\n      this.readMessages();\n      chats.filter(function (c) {\n        return c.id === chat.id;\n      }).map(function (c) {\n        return c.messages.push(message);\n      });\n      updateChats({\n        chats: chats\n      });\n    }\n  }, {\n    key: \"getHalkChat\",\n    value: function getHalkChat() {\n      var timeNow = new Date().getTime();\n      var user = {\n        id: uuid.v4(),\n        phone: \"\",\n        profile: {\n          name: \"Halk\",\n          username: \"Halk team\",\n          avatar: \"https://imgur.com/YPIViUK.png\",\n          bio: \"Official account of the team Halk\"\n        }\n      };\n      var chat = {\n        id: uuid.v4(),\n        user: user,\n        messages: [{\n          author: user,\n          content: \"Welcome to halk!\",\n          createdAt: timeNow,\n          id: \"\" + timeNow + Math.floor(Math.random() * (100000000 - 1000000 + 1) + 1000000),\n          read: false\n        }]\n      };\n      return chat;\n    }\n  }]);\n\n  return SocketController;\n}();\nexport function CreateSocketConnection(_ref4) {\n  var userId = _ref4.userId;\n  if (!userId) return;\n  var socket = io(\"http://localhost:3000/\", {\n    transports: [\"websocket\"],\n    auth: {\n      userId: userId\n    }\n  });\n  return socket;\n}","map":{"version":3,"names":["io","uuid","Cipher","SocketController","props","readMessages","console","log","user","updateUser","chats","updateChats","socket","loadEvents","on","msg","chat","filter","c","id","map","messages","push","newChat","payload","m","read","emit","room","otherUser","userId","p","text","timeNow","Date","getTime","message","author","createdAt","content","Math","floor","random","toUser","thisChat","v4","phone","profile","name","username","avatar","bio","CreateSocketConnection","transports","auth"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/src/utils/socket.ts"],"sourcesContent":["import io from \"socket.io-client\";\nimport * as uuid from \"uuid\";\nimport { Cipher, Decipher } from \"../../middleware/crypto\";\n\nexport class SocketController {\n  constructor(props) {\n    this.user = props.user;\n    this.updateUser = props.updateUser;\n    this.chats = props.chats;\n    this.updateChats = props.updateChats;\n    this.socket = props.socket;\n\n    this.loadEvents();\n  }\n\n  public loadEvents() {\n    this.socket.on(\"receiveMessage\", (msg) => {\n      const chat = this.chats.filter((c) => c.id === msg.chat.id)[0];\n\n      if (chat) {\n        this.chats\n          .filter((c) => c.id === msg.chat.id)\n          .map((c) => c.messages.push(msg));\n        this.updateChats({ chats: this.chats });\n      }\n    });\n\n    this.socket.on(\"newChat\", ({ newChat }) => {\n      this.chats.push(newChat);\n      this.updateChats({ chats: this.chats });\n    });\n\n    this.socket.on(\"readMessage\", (payload) => {\n      const chat = this.chats.filter((c) => c.id === payload.chat.id)[0];\n      if (chat) {\n        chat.messages\n          .filter((m) => m.read === false)\n          .map((m) => (m.read = true));\n        this.updateChats({ chats: this.chats });\n      }\n    });\n  }\n\n  readMessages = () => {\n    console.log(\"pqp hem\");\n  }\n\n  static joinedChat({ chats, chat, socket }) {\n    socket.emit(\"joinRoom\", { room: chat.id, otherUser: chat.user.id });\n    socket.emit(\"verifyIfUserIsOnline\", { userId: chat.user.id });\n    socket.on(\"readMessage\", (p) =>\n      this.readMessages()\n    );\n  }\n\n  static sendMessage({ user, chats, updateChats, chat, socket, text }) {\n    const timeNow = new Date().getTime();\n    const message = {\n      chat: {\n        id: chat.id,\n      },\n      author: user,\n      read: false,\n      createdAt: timeNow,\n      content: Cipher(text, chat.id),\n      id: `${timeNow}${Math.floor(\n        Math.random() * (100000000 - 1000000 + 1) + 1000000\n      )}`,\n    };\n\n    if (chat.newChat) {\n      socket.emit(\"sendMessage\", {\n        room: chat.id,\n        toUser: chat.user.id,\n        message,\n        newChat: true,\n      });\n      const thisChat = chats.filter((c) => c.id === chat.id)[0];\n      delete thisChat.newChat;\n      updateChats({ chats });\n    } else {\n      socket.emit(\"sendMessage\", {\n        room: chat.id,\n        toUser: chat.user.id,\n        message,\n      });\n    }\n\n    this.readMessages();\n    chats.filter((c) => c.id === chat.id).map((c) => c.messages.push(message));\n    updateChats({ chats });\n  }\n\n  static getHalkChat() {\n    const timeNow = new Date().getTime();\n\n    const user = {\n      id: uuid.v4(),\n      phone: \"\",\n      profile: {\n        name: \"Halk\",\n        username: \"Halk team\",\n        avatar: \"https://imgur.com/YPIViUK.png\",\n        bio: \"Official account of the team Halk\",\n      },\n    };\n\n    const chat = {\n      id: uuid.v4(),\n      user,\n      messages: [\n        {\n          author: user,\n          content: \"Welcome to halk!\",\n          createdAt: timeNow,\n          id: `${timeNow}${Math.floor(\n            Math.random() * (100000000 - 1000000 + 1) + 1000000\n          )}`,\n          read: false,\n        },\n      ],\n    };\n\n    return chat;\n  }\n}\n\nexport function CreateSocketConnection({ userId }) {\n  if (!userId) return;\n  const socket = io(\"http://localhost:3000/\", {\n    transports: [\"websocket\"],\n    auth: {\n      userId,\n    },\n  });\n\n  return socket;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}