{"ast":null,"code":"import React, { useContext, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport NewChatButton from \"../../src/components/newChat\";\nimport Socket, { CreateSocketConnection } from \"../../src/utils/socket\";\nimport ChatContainer from \"../../src/components/chat/chatContainer\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Chats(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      logged = _useContext.logged,\n      updateUser = _useContext.updateUser;\n\n  var _useContext2 = useContext(ChatsContext),\n      chats = _useContext2.chats,\n      updateChats = _useContext2.updateChats;\n\n  var socket = CreateSocketConnection({\n    userId: user.id\n  });\n  useEffect(function () {}, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [!logged ? _jsx(_Fragment, {\n      children: navigation.navigate(\"Welcome\")\n    }) : _jsx(ScrollView, {\n      style: {\n        padding: 5\n      },\n      showsVerticalScrollIndicator: false,\n      showsHorizontalScrollIndicator: false,\n      children: !chats.length ? _jsx(ChatContainer, {\n        chat: new Socket.sendHalkMessage(),\n        navigation: navigation,\n        socket: socket\n      }) : _jsx(_Fragment, {\n        children: chats.map(function (chat, index) {\n          return _createElement(ChatContainer, {\n            user: user,\n            chats: chats,\n            chat: chat,\n            navigation: navigation,\n            socket: socket,\n            key: index\n          });\n        })\n      })\n    }), _jsx(NewChatButton, {\n      navigation: navigation\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  chat: {},\n  leftContent: {\n    flexDirection: \"row\"\n  },\n  userIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 100,\n    marginRight: 10\n  },\n  username: {\n    fontWeight: \"bold\"\n  },\n  messageContent: {\n    fontSize: 13,\n    opacity: 0.7,\n    alignItems: \"center\"\n  },\n  rightContent: {\n    alignItems: \"center\"\n  },\n  messageDate: {\n    fontSize: 11,\n    marginBottom: 3\n  },\n  unread: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    minWidth: 15,\n    minHeight: 15,\n    textAlign: \"center\",\n    color: \"white\"\n  }\n});","map":{"version":3,"names":["React","useContext","useEffect","UserContext","ChatsContext","NewChatButton","Socket","CreateSocketConnection","ChatContainer","Chats","navigation","user","logged","updateUser","chats","updateChats","socket","userId","id","styles","container","navigate","padding","length","sendHalkMessage","map","chat","index","StyleSheet","create","flex","leftContent","flexDirection","userIcon","width","height","borderRadius","marginRight","username","fontWeight","messageContent","fontSize","opacity","alignItems","rightContent","messageDate","marginBottom","unread","backgroundColor","minWidth","minHeight","textAlign","color"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/app/chats.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Pressable, View, StyleSheet, ScrollView, Image } from \"react-native\";\nimport { RootTabScreenProps } from \"../../types\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { Text } from \"../../src/components/Themed\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport NewChatButton from \"../../src/components/newChat\";\nimport { getColors } from \"../../constants/Colors\";\nimport Socket, { CreateSocketConnection } from \"../../src/utils/socket\";\nimport { Cipher, Decipher } from \"../../middleware/crypto\";\nimport { Userpic } from \"react-native-userpic\";\nimport EditChat from \"../../src/components/chat/editChat\";\nimport ChatContainer from '../../src/components/chat/chatContainer';\n\nexport default function Chats({ navigation }: RootTabScreenProps<\"Chats\">) {\n  const { user, logged, updateUser } = useContext(UserContext);\n  const { chats, updateChats } = useContext(ChatsContext);\n  const socket = CreateSocketConnection({ userId: user.id });\n\n  useEffect(() => {}, []);\n\n  return (\n    <View style={styles.container}>\n      {!logged ? (\n        <>{navigation.navigate(\"Welcome\")}</>\n      ) : (\n        <ScrollView\n          style={{ padding: 5 }}\n          showsVerticalScrollIndicator={false}\n          showsHorizontalScrollIndicator={false}\n        >\n        {!chats.length ? (\n          <ChatContainer chat={new Socket.sendHalkMessage()} {...{ navigation, socket }} />\n        ) : (\n          <>\n            {chats.map((chat, index) => (\n              <ChatContainer {...{ user, chats, chat, navigation, socket }} key={index} />\n            ))}\n          </>\n        )}\n        </ScrollView>\n      )}\n      <NewChatButton navigation={navigation} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  chat: {},\n  leftContent: {\n    flexDirection: \"row\",\n  },\n  userIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 100,\n    marginRight: 10,\n  },\n  username: {\n    fontWeight: \"bold\",\n  },\n  messageContent: {\n    fontSize: 13,\n    opacity: 0.7,\n    alignItems: \"center\",\n  },\n  rightContent: {\n    alignItems: \"center\",\n  },\n  messageDate: {\n    fontSize: 11,\n    marginBottom: 3,\n  },\n  unread: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    minWidth: 15,\n    minHeight: 15,\n    textAlign: \"center\",\n    color: \"white\",\n  },\n});\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAAuD,OAAvD;;;;AAGA,SAASC,WAAT;AACA,SAASC,YAAT;AAGA,OAAOC,aAAP;AAEA,OAAOC,MAAP,IAAiBC,sBAAjB;AAIA,OAAOC,aAAP;;;;;AAEA,eAAe,SAASC,KAAT,OAA4D;EAAA,IAA3CC,UAA2C,QAA3CA,UAA2C;;EACzE,kBAAqCT,UAAU,CAACE,WAAD,CAA/C;EAAA,IAAQQ,IAAR,eAAQA,IAAR;EAAA,IAAcC,MAAd,eAAcA,MAAd;EAAA,IAAsBC,UAAtB,eAAsBA,UAAtB;;EACA,mBAA+BZ,UAAU,CAACG,YAAD,CAAzC;EAAA,IAAQU,KAAR,gBAAQA,KAAR;EAAA,IAAeC,WAAf,gBAAeA,WAAf;;EACA,IAAMC,MAAM,GAAGT,sBAAsB,CAAC;IAAEU,MAAM,EAAEN,IAAI,CAACO;EAAf,CAAD,CAArC;EAEAhB,SAAS,CAAC,YAAM,CAAE,CAAT,EAAW,EAAX,CAAT;EAEA,OACE,MAAC,IAAD;IAAM,KAAK,EAAEiB,MAAM,CAACC,SAApB;IAAA,WACG,CAACR,MAAD,GACC;MAAA,UAAGF,UAAU,CAACW,QAAX,CAAoB,SAApB;IAAH,EADD,GAGC,KAAC,UAAD;MACE,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAX,CADT;MAEE,4BAA4B,EAAE,KAFhC;MAGE,8BAA8B,EAAE,KAHlC;MAAA,UAKC,CAACR,KAAK,CAACS,MAAP,GACC,KAAC,aAAD;QAAe,IAAI,EAAE,IAAIjB,MAAM,CAACkB,eAAX,EAArB;QAAyDd,UAAU,EAAVA,UAAzD;QAAqEM,MAAM,EAANA;MAArE,EADD,GAGC;QAAA,UACGF,KAAK,CAACW,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;UAAA,OACT,eAAC,aAAD;YAAqBhB,IAAI,EAAJA,IAArB;YAA2BG,KAAK,EAALA,KAA3B;YAAkCY,IAAI,EAAJA,IAAlC;YAAwChB,UAAU,EAAVA,UAAxC;YAAoDM,MAAM,EAANA,MAApD;YAA8D,GAAG,EAAEW;UAAnE,EADS;QAAA,CAAV;MADH;IARF,EAJJ,EAoBE,KAAC,aAAD;MAAe,UAAU,EAAEjB;IAA3B,EApBF;EAAA,EADF;AAwBD;AAED,IAAMS,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE;EADG,CADoB;EAI/BJ,IAAI,EAAE,EAJyB;EAK/BK,WAAW,EAAE;IACXC,aAAa,EAAE;EADJ,CALkB;EAQ/BC,QAAQ,EAAE;IACRC,KAAK,EAAE,EADC;IAERC,MAAM,EAAE,EAFA;IAGRC,YAAY,EAAE,GAHN;IAIRC,WAAW,EAAE;EAJL,CARqB;EAc/BC,QAAQ,EAAE;IACRC,UAAU,EAAE;EADJ,CAdqB;EAiB/BC,cAAc,EAAE;IACdC,QAAQ,EAAE,EADI;IAEdC,OAAO,EAAE,GAFK;IAGdC,UAAU,EAAE;EAHE,CAjBe;EAsB/BC,YAAY,EAAE;IACZD,UAAU,EAAE;EADA,CAtBiB;EAyB/BE,WAAW,EAAE;IACXJ,QAAQ,EAAE,EADC;IAEXK,YAAY,EAAE;EAFH,CAzBkB;EA6B/BC,MAAM,EAAE;IACNC,eAAe,EAAE,SADX;IAENZ,YAAY,EAAE,GAFR;IAGNa,QAAQ,EAAE,EAHJ;IAINC,SAAS,EAAE,EAJL;IAKNC,SAAS,EAAE,QALL;IAMNC,KAAK,EAAE;EAND;AA7BuB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}