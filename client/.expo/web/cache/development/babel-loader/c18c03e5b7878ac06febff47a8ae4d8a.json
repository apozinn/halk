{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AntDesign, Ionicons, Feather, FontAwesome, MaterialIcons, Fontisto } from \"@expo/vector-icons\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport Socket from \"../../src/utils/socket\";\nimport { getColors } from \"../../constants/Colors\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Chat(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      chat = _useState2[0],\n      setChat = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      socket = _useState4[0],\n      setSocket = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messages = _useState6[0],\n      setMessages = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      text = _useState8[0],\n      setText = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      value = _useState10[0],\n      setValue = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      name = _useState12[0],\n      setName = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      ready = _useState14[0],\n      setReady = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      otherUser = _useState16[0],\n      setOtherUser = _useState16[1];\n\n  var scrollViewRef = useRef();\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var _useContext2 = useContext(ChatsContext),\n      chats = _useContext2.chats;\n\n  var colors = getColors();\n  useEffect(function () {\n    var chatId = route.params.id;\n\n    if (chatId) {\n      if (chatId === \"0\" || !chats.length) {\n        setChat(new Socket.sendHalkMessage());\n      } else {\n        var thisChat = chats.filter(function (c) {\n          return c.id === chatId;\n        });\n\n        if (thisChat) {\n          setChat(thisChat);\n        } else navigation.navigate(\"Root\");\n      }\n    } else navigation.navigate(\"Root\");\n  }, [user]);\n  useEffect(function () {}, [chat]);\n  return _jsx(View, {\n    style: styles.container,\n    children: !chat ? _jsx(_Fragment, {}) : _jsxs(_Fragment, {\n      children: [_jsxs(View, {\n        style: [styles.topContainer, {\n          backgroundColor: colors.defaultColors.card\n        }],\n        children: [_jsxs(View, {\n          style: styles.topContainerLeft,\n          children: [_jsx(Pressable, {\n            style: function style(_ref2) {\n              var pressed = _ref2.pressed;\n              return [styles.backButton, {\n                opacity: pressed ? 0.5 : 1\n              }];\n            },\n            onPress: function onPress() {\n              return navigation.navigate(\"Root\");\n            },\n            children: _jsx(AntDesign, {\n              name: \"arrowleft\",\n              size: 25,\n              color: colors.tint\n            })\n          }), _jsxs(Pressable, {\n            onPress: function onPress() {},\n            style: styles.userProfile,\n            children: [_jsx(Image, {\n              source: chat.user.profile.avatar ? {\n                uri: chat.user.profile.avatar\n              } : require(\"../../assets/images/userIcon.png\"),\n              style: styles.userIcon\n            }), _jsx(Text, {\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: chat.user.profile.name\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.topContainerRight,\n          children: [_jsx(Pressable, {\n            style: function style(_ref3) {\n              var pressed = _ref3.pressed;\n              return [styles.backButton, {\n                opacity: pressed ? 0.5 : 1\n              }];\n            },\n            onPress: function onPress() {},\n            children: _jsx(Ionicons, {\n              name: \"call\",\n              size: 24,\n              color: colors.tint\n            })\n          }), _jsx(Pressable, {\n            style: function style(_ref4) {\n              var pressed = _ref4.pressed;\n              return [styles.backButton, {\n                opacity: pressed ? 0.5 : 1\n              }];\n            },\n            onPress: function onPress() {},\n            children: _jsx(FontAwesome, {\n              name: \"video-camera\",\n              size: 24,\n              color: colors.tint\n            })\n          }), _jsx(Pressable, {\n            style: function style(_ref5) {\n              var pressed = _ref5.pressed;\n              return [styles.backButton, {\n                opacity: pressed ? 0.5 : 1\n              }];\n            },\n            onPress: function onPress() {},\n            children: _jsx(Feather, {\n              name: \"more-vertical\",\n              size: 24,\n              color: colors.tint\n            })\n          })]\n        })]\n      }), _jsx(ScrollView, {\n        style: styles.messageContainer,\n        ref: scrollViewRef,\n        onContentSizeChange: function onContentSizeChange() {\n          return scrollViewRef.current.scrollToEnd({\n            animated: true\n          });\n        },\n        children: chat.messages.map(function (message, index) {\n          var itsMyMessage = message.author.id === user.id ? true : false;\n          return _jsx(View, {\n            style: itsMyMessage ? styles.myMessage : styles.otherMessage,\n            children: _jsxs(Pressable, {\n              style: [itsMyMessage ? {\n                backgroundColor: \"#2f95dc\",\n                maxWidth: \"85%\"\n              } : {\n                backgroundColor: colors.defaultColors.card\n              }, styles.message],\n              onLongPress: function onLongPress() {\n                return alert(JSON.stringify(message));\n              },\n              children: [_jsx(Text, {\n                style: {\n                  maxWidth: \"85%\"\n                },\n                children: message.content\n              }), _jsx(Text, {\n                style: styles.messageCreatedAt,\n                children: message.createdAt\n              })]\n            })\n          }, index);\n        })\n      }), _jsxs(View, {\n        style: [styles.bottomContainer, {\n          backgroundColor: colors.defaultColors.card\n        }],\n        children: [_jsxs(View, {\n          style: styles.buttonContentLeft,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.blueButton,\n            onPress: function onPress() {},\n            children: _jsx(Fontisto, {\n              name: \"camera\",\n              size: 20,\n              color: \"white\"\n            })\n          }), _jsx(TextInput, {\n            style: styles.inputMessage,\n            placeholder: \"Mensagem...\",\n            value: text,\n            onChangeText: function onChangeText(value) {\n              return setText(value);\n            }\n          })]\n        }), text ? _jsx(TouchableOpacity, {\n          style: styles.blueButton,\n          onPress: function onPress() {},\n          children: _jsx(FontAwesome, {\n            name: \"send\",\n            size: 26,\n            color: \"white\"\n          })\n        }) : _jsxs(View, {\n          style: styles.othersMedias,\n          children: [_jsx(Pressable, {\n            style: function style(_ref6) {\n              var pressed = _ref6.pressed;\n              return [{\n                marginRight: 5\n              }, {\n                opacity: pressed ? 0.5 : 1\n              }];\n            },\n            onPress: function onPress() {},\n            children: _jsx(MaterialIcons, {\n              name: \"keyboard-voice\",\n              size: 26,\n              color: colors.tint\n            })\n          }), _jsx(Pressable, {\n            style: function style(_ref7) {\n              var pressed = _ref7.pressed;\n              return [{\n                opacity: pressed ? 0.5 : 1\n              }];\n            },\n            onPress: function onPress() {},\n            children: _jsx(Ionicons, {\n              name: \"ios-add-circle-outline\",\n              size: 26,\n              color: colors.tint\n            })\n          })]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight\n  },\n  topContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 5,\n    justifyContent: \"space-between\"\n  },\n  topContainerLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  topContainerRight: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  messageContainer: {\n    flex: 1,\n    marginHorizontal: 10,\n    flexDirection: \"column-reverse\",\n    marginBottom: 50\n  },\n  bottomContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    backgroundColor: \"rgb(18, 18, 18)\",\n    justifyContent: \"space-between\",\n    borderRadius: 50,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: 5,\n    margin: 5\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: \"#222\"\n  },\n  myMessage: {\n    justifyContent: \"flex-end\",\n    flexDirection: \"revert\"\n  },\n  otherMessage: {\n    width: \"fit-content\",\n    maxWidth: \"85%\"\n  },\n  userIcon: {\n    width: 40,\n    height: 40,\n    borderRadius: 100,\n    marginHorizontal: 5\n  },\n  userProfile: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  backButton: {\n    padding: 5,\n    borderRadius: 100\n  },\n  blueButton: {\n    backgroundColor: \"#2f95dc\",\n    padding: 8,\n    borderRadius: 100\n  },\n  othersMedias: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  inputMessage: {\n    paddingVertical: 8,\n    width: \"100%\",\n    marginLeft: 10\n  },\n  message: {\n    padding: 7,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    marginBottom: 10,\n    alignItems: \"flex-end\",\n    flexWrap: \"wrap\"\n  },\n  messageCreatedAt: {\n    fontSize: 10,\n    marginLeft: 5\n  },\n  buttonContentLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","useContext","useRef","AntDesign","Ionicons","Feather","FontAwesome","MaterialIcons","Fontisto","TextInput","Text","UserContext","ChatsContext","Socket","getColors","Chat","navigation","route","chat","setChat","socket","setSocket","messages","setMessages","text","setText","value","setValue","name","setName","ready","setReady","otherUser","setOtherUser","scrollViewRef","user","chats","colors","chatId","params","id","length","sendHalkMessage","thisChat","filter","c","navigate","styles","container","topContainer","backgroundColor","defaultColors","card","topContainerLeft","pressed","backButton","opacity","tint","userProfile","profile","avatar","uri","require","userIcon","fontWeight","topContainerRight","messageContainer","current","scrollToEnd","animated","map","message","index","itsMyMessage","author","myMessage","otherMessage","maxWidth","alert","JSON","stringify","content","messageCreatedAt","createdAt","bottomContainer","buttonContentLeft","blueButton","inputMessage","othersMedias","marginRight","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","flexDirection","alignItems","padding","justifyContent","marginHorizontal","marginBottom","position","borderRadius","bottom","left","right","margin","messageCard","borderWidth","borderColor","width","height","paddingVertical","marginLeft","flexWrap","fontSize"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/chat/chat.tsx"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport {\n  Button,\n  StatusBar,\n  StyleSheet,\n  View,\n  Image,\n  Pressable,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport {\n  AntDesign,\n  Ionicons,\n  Feather,\n  FontAwesome,\n  MaterialIcons,\n  Fontisto,\n} from \"@expo/vector-icons\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport Socket from \"../../src/utils/socket\";\nimport { getColors } from \"../../constants/Colors\";\n\nexport default function Chat({\n  navigation,\n  route,\n}: RootStackScreenProps<\"Chat\">) {\n  const [chat, setChat] = useState();\n  const [socket, setSocket] = useState();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [ready, setReady] = useState(false);\n  const [otherUser, setOtherUser] = useState();\n\n  const scrollViewRef = useRef();\n\n  const { user } = useContext(UserContext);\n  const { chats } = useContext(ChatsContext);\n\n  const colors = getColors();\n\n  useEffect(() => {\n    const chatId = route.params.id;\n\n    if (chatId) {\n      if (chatId === \"0\" || !chats.length) {\n        setChat(new Socket.sendHalkMessage());\n      } else {\n        const thisChat = chats.filter((c) => c.id === chatId);\n        if (thisChat) {\n          setChat(thisChat);\n        } else navigation.navigate(\"Root\");\n      }\n    } else navigation.navigate(\"Root\");\n  }, [user]);\n\n  useEffect(() => {}, [chat]);\n\n  return (\n    <View style={styles.container}>\n      {!chat ? (\n        <></>\n      ) : (\n        <>\n          <View\n            style={[\n              styles.topContainer,\n              { backgroundColor: colors.defaultColors.card },\n            ]}\n          >\n            <View style={styles.topContainerLeft}>\n              <Pressable\n                style={({ pressed }) => [\n                  styles.backButton,\n                  { opacity: pressed ? 0.5 : 1 },\n                ]}\n                onPress={() => navigation.navigate(\"Root\")}\n              >\n                <AntDesign name=\"arrowleft\" size={25} color={colors.tint} />\n              </Pressable>\n\n              <Pressable onPress={() => {}} style={styles.userProfile}>\n                <Image\n                  source={\n                    chat.user.profile.avatar\n                      ? { uri: chat.user.profile.avatar }\n                      : require(\"../../assets/images/userIcon.png\")\n                  }\n                  style={styles.userIcon}\n                />\n                <Text style={{ fontWeight: \"bold\" }}>\n                  {chat.user.profile.name}\n                </Text>\n              </Pressable>\n            </View>\n\n            <View style={styles.topContainerRight}>\n              <Pressable\n                style={({ pressed }) => [\n                  styles.backButton,\n                  { opacity: pressed ? 0.5 : 1 },\n                ]}\n                onPress={() => {}}\n              >\n                <Ionicons name=\"call\" size={24} color={colors.tint} />\n              </Pressable>\n              <Pressable\n                style={({ pressed }) => [\n                  styles.backButton,\n                  { opacity: pressed ? 0.5 : 1 },\n                ]}\n                onPress={() => {}}\n              >\n                <FontAwesome\n                  name=\"video-camera\"\n                  size={24}\n                  color={colors.tint}\n                />\n              </Pressable>\n              <Pressable\n                style={({ pressed }) => [\n                  styles.backButton,\n                  { opacity: pressed ? 0.5 : 1 },\n                ]}\n                onPress={() => {}}\n              >\n                <Feather name=\"more-vertical\" size={24} color={colors.tint} />\n              </Pressable>\n            </View>\n          </View>\n\n          <ScrollView\n            style={styles.messageContainer}\n            ref={scrollViewRef}\n            onContentSizeChange={() =>\n              scrollViewRef.current.scrollToEnd({ animated: true })\n            }\n          >\n            {chat.messages.map((message, index) => {\n              const itsMyMessage = message.author.id === user.id ? true : false;\n\n              return (\n                <View\n                  style={itsMyMessage ? styles.myMessage : styles.otherMessage}\n                  key={index}\n                >\n                  <Pressable\n                    style={[\n                      itsMyMessage\n                        ? { backgroundColor: \"#2f95dc\", maxWidth: \"85%\" }\n                        : { backgroundColor: colors.defaultColors.card },\n                      styles.message,\n                    ]}\n                    onLongPress={() => alert(JSON.stringify(message))}\n                  >\n                    <Text style={{ maxWidth: \"85%\" }}>{message.content}</Text>\n                    <Text style={styles.messageCreatedAt}>\n                      {message.createdAt}\n                    </Text>\n                  </Pressable>\n                </View>\n              );\n            })}\n          </ScrollView>\n\n          <View\n            style={[\n              styles.bottomContainer,\n              { backgroundColor: colors.defaultColors.card },\n            ]}\n          >\n            <View style={styles.buttonContentLeft}>\n              <TouchableOpacity style={styles.blueButton} onPress={() => {}}>\n                <Fontisto name=\"camera\" size={20} color=\"white\" />\n              </TouchableOpacity>\n              <TextInput\n                style={styles.inputMessage}\n                placeholder=\"Mensagem...\"\n                value={text}\n                onChangeText={(value) => setText(value)}\n              />\n            </View>\n\n            {text ? (\n              <TouchableOpacity style={styles.blueButton} onPress={() => {}}>\n                <FontAwesome name=\"send\" size={26} color=\"white\" />\n              </TouchableOpacity>\n            ) : (\n              <View style={styles.othersMedias}>\n                <Pressable\n                  style={({ pressed }) => [\n                    { marginRight: 5 },\n                    { opacity: pressed ? 0.5 : 1 },\n                  ]}\n                  onPress={() => {}}\n                >\n                  <MaterialIcons\n                    name=\"keyboard-voice\"\n                    size={26}\n                    color={colors.tint}\n                  />\n                </Pressable>\n                <Pressable\n                  style={({ pressed }) => [{ opacity: pressed ? 0.5 : 1 }]}\n                  onPress={() => {}}\n                >\n                  <Ionicons\n                    name=\"ios-add-circle-outline\"\n                    size={26}\n                    color={colors.tint}\n                  />\n                </Pressable>\n              </View>\n            )}\n          </View>\n        </>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n  },\n  topContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 5,\n    justifyContent: \"space-between\",\n  },\n  topContainerLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  topContainerRight: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  messageContainer: {\n    flex: 1,\n    marginHorizontal: 10,\n    flexDirection: \"column-reverse\",\n    marginBottom: 50,\n  },\n  bottomContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    backgroundColor: \"rgb(18, 18, 18)\",\n    justifyContent: \"space-between\",\n    borderRadius: 50,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: 5,\n    margin: 5,\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: \"#222\",\n  },\n  myMessage: {\n    justifyContent: \"flex-end\",\n    flexDirection: \"revert\",\n  },\n  otherMessage: {\n    width: \"fit-content\",\n    maxWidth: \"85%\",\n  },\n  userIcon: {\n    width: 40,\n    height: 40,\n    borderRadius: 100,\n    marginHorizontal: 5,\n  },\n  userProfile: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  backButton: {\n    padding: 5,\n    borderRadius: 100,\n  },\n  blueButton: {\n    backgroundColor: \"#2f95dc\",\n    padding: 8,\n    borderRadius: 100,\n  },\n  othersMedias: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  inputMessage: {\n    paddingVertical: 8,\n    width: \"100%\",\n    marginLeft: 10,\n  },\n  message: {\n    padding: 7,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    marginBottom: 10,\n    alignItems: \"flex-end\",\n    flexWrap: \"wrap\",\n  },\n  messageCreatedAt: {\n    fontSize: 10,\n    marginLeft: 5,\n  },\n  buttonContentLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}