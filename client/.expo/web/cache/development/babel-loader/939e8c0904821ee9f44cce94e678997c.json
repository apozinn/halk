{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport io from 'socket.io-client';\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar socketEndPoint = \"http://localhost:3000\";\nexport default function Chat(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      socket = _useState2[0],\n      setSocket = _useState2[1];\n\n  useEffect(function () {\n    var socketio = io(socketEndPoint, {\n      transports: [\"websocket\"]\n    });\n    setSocket(socketio);\n  }, []);\n  useEffect(function () {\n    console.log(socket);\n  }, [socket]);\n\n  function sendMessage() {}\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      value: name,\n      onChangeText: function onChangeText(value) {\n        return setName(value);\n      },\n      placeholder: \"enter your name\"\n    }), _jsx(View, {\n      style: styles.messageCard,\n      children: messages.map(function (message) {\n        if (message.name === name) {\n          return _jsxs(Text, {\n            children: [message.name, \" \", message.text]\n          });\n        }\n\n        return _jsxs(Text, {\n          children: [message.name, \" \", message.text]\n        });\n      })\n    }), _jsx(TextInput, {\n      value: text,\n      onChangeText: function onChangeText(value) {\n        return setText(value);\n      },\n      placeholder: \"Send a message\"\n    }), _jsx(Button, {\n      title: \"Send\",\n      onPress: function onPress() {\n        return sendMessage();\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: '#222'\n  },\n  myMessage: {\n    backgroundColor: 'blue'\n  },\n  otherMessage: {\n    backgroundColor: 'gray'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","io","TextInput","Text","socketEndPoint","Chat","navigation","socket","setSocket","socketio","transports","console","log","sendMessage","styles","container","name","value","setName","messageCard","messages","map","message","text","setText","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","borderWidth","borderColor","myMessage","backgroundColor","otherMessage"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/screens/chat/chat.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, StatusBar, StyleSheet, View } from \"react-native\";\nimport { RootStackScreenProps } from \"../../types\";\nimport * as uuid from 'uuid';\nimport io from 'socket.io-client';\nimport { TextInput, Text } from '../../src/components/Themed';\n\nconst socketEndPoint = \"http://localhost:3000\";\n\nexport default function Chat({ navigation }: RootStackScreenProps<\"Chat\">) {\n  const [socket, setSocket] = useState();\n\n  useEffect(() => {\n    const socketio = io(socketEndPoint, {\n      transports: [\"websocket\"],\n    });\n\n    setSocket(socketio);\n  }, []);\n\n  useEffect(() => {\n    console.log(socket);\n  }, [socket])\n\n  function sendMessage() {}\n\n  return (\n    <View style={styles.container}>\n      <TextInput value={name} onChangeText={(value) => setName(value)} placeholder=\"enter your name\"/>\n      <View style={styles.messageCard}>\n      {messages.map(message => {\n            if (message.name === name) {\n              return (\n                <Text>\n                  {message.name} {message.text}\n                </Text>\n              );\n            }\n\n            return (\n              <Text>\n                {message.name} {message.text}\n              </Text>\n            );\n          })}\n      </View>\n      <TextInput value={text} onChangeText={(value) => setText(value)} placeholder='Send a message'/>\n      <Button title='Send' onPress={() => sendMessage()}/>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: '#222',\n  },\n  myMessage: {\n    backgroundColor: 'blue',\n  },\n  otherMessage: {\n    backgroundColor: 'gray',\n  },\n});\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAIA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,SAAT,EAAoBC,IAApB;;;AAEA,IAAMC,cAAc,GAAG,uBAAvB;AAEA,eAAe,SAASC,IAAT,OAA4D;EAAA,IAA5CC,UAA4C,QAA5CA,UAA4C;;EACzE,gBAA4BN,QAAQ,EAApC;EAAA;EAAA,IAAOO,MAAP;EAAA,IAAeC,SAAf;;EAEAT,SAAS,CAAC,YAAM;IACd,IAAMU,QAAQ,GAAGR,EAAE,CAACG,cAAD,EAAiB;MAClCM,UAAU,EAAE,CAAC,WAAD;IADsB,CAAjB,CAAnB;IAIAF,SAAS,CAACC,QAAD,CAAT;EACD,CANQ,EAMN,EANM,CAAT;EAQAV,SAAS,CAAC,YAAM;IACdY,OAAO,CAACC,GAAR,CAAYL,MAAZ;EACD,CAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;;EAIA,SAASM,WAAT,GAAuB,CAAE;;EAEzB,OACE,MAAC,IAAD;IAAM,KAAK,EAAEC,MAAM,CAACC,SAApB;IAAA,WACE,KAAC,SAAD;MAAW,KAAK,EAAEC,IAAlB;MAAwB,YAAY,EAAE,sBAACC,KAAD;QAAA,OAAWC,OAAO,CAACD,KAAD,CAAlB;MAAA,CAAtC;MAAiE,WAAW,EAAC;IAA7E,EADF,EAEE,KAAC,IAAD;MAAM,KAAK,EAAEH,MAAM,CAACK,WAApB;MAAA,UACCC,QAAQ,CAACC,GAAT,CAAa,UAAAC,OAAO,EAAI;QACnB,IAAIA,OAAO,CAACN,IAAR,KAAiBA,IAArB,EAA2B;UACzB,OACE,MAAC,IAAD;YAAA,WACGM,OAAO,CAACN,IADX,OACkBM,OAAO,CAACC,IAD1B;UAAA,EADF;QAKD;;QAED,OACE,MAAC,IAAD;UAAA,WACGD,OAAO,CAACN,IADX,OACkBM,OAAO,CAACC,IAD1B;QAAA,EADF;MAKD,CAdJ;IADD,EAFF,EAmBE,KAAC,SAAD;MAAW,KAAK,EAAEA,IAAlB;MAAwB,YAAY,EAAE,sBAACN,KAAD;QAAA,OAAWO,OAAO,CAACP,KAAD,CAAlB;MAAA,CAAtC;MAAiE,WAAW,EAAC;IAA7E,EAnBF,EAoBE,KAAC,MAAD;MAAQ,KAAK,EAAC,MAAd;MAAqB,OAAO,EAAE;QAAA,OAAMJ,WAAW,EAAjB;MAAA;IAA9B,EApBF;EAAA,EADF;AAwBD;AAED,IAAMC,MAAM,GAAGW,UAAU,CAACC,MAAX,CAAkB;EAC/BX,SAAS,EAAE;IACTY,IAAI,EAAE,CADG;IAETC,SAAS,EAAEC,SAAS,CAACC;EAFZ,CADoB;EAK/BX,WAAW,EAAE;IACXY,WAAW,EAAE,CADF;IAEXC,WAAW,EAAE;EAFF,CALkB;EAS/BC,SAAS,EAAE;IACTC,eAAe,EAAE;EADR,CAToB;EAY/BC,YAAY,EAAE;IACZD,eAAe,EAAE;EADL;AAZiB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}