{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport io from \"socket.io-client\";\nimport { Cipher } from \"../../middleware/crypto\";\nexport var SocketController = function () {\n  function SocketController(props) {\n    _classCallCheck(this, SocketController);\n\n    this.user = props.user;\n    this.updateUser = props.updateUser;\n    this.chats = props.chats;\n    this.updateChats = props.updateChats;\n    this.socket = props.socket;\n    this.loadEvents();\n  }\n\n  _createClass(SocketController, [{\n    key: \"loadEvents\",\n    value: function loadEvents() {\n      var _this = this;\n\n      this.socket.on(\"receiveMessage\", function (msg) {\n        var chat = _this.chats.filter(function (c) {\n          return c.id === msg.chat.id;\n        })[0];\n\n        if (chat) {\n          if (chat.messages.some(function (m) {\n            return m.id === msg.id;\n          })) return;\n\n          _this.chats.filter(function (c) {\n            return c.id === msg.chat.id;\n          }).map(function (c) {\n            return c.messages.push(msg);\n          });\n\n          _this.updateChats({\n            chats: _this.chats\n          });\n        }\n      });\n      this.socket.on(\"newChat\", function (_ref) {\n        var newChat = _ref.newChat;\n\n        _this.chats.push(newChat);\n\n        _this.updateChats({\n          chats: _this.chats\n        });\n      });\n      this.socket.on(\"readMessage\", function (payload) {\n        var chat = _this.chats.filter(function (c) {\n          return c.id === payload.chat.id;\n        })[0];\n\n        if (chat) {\n          chat.messages.filter(function (m) {\n            return m.read === false;\n          }).map(function (m) {\n            return m.read = true;\n          });\n\n          _this.updateChats({\n            chats: _this.chats\n          });\n        }\n      });\n    }\n  }], [{\n    key: \"joinedChat\",\n    value: function joinedChat(chats, chat, socket) {}\n  }, {\n    key: \"sendMessage\",\n    value: function sendMessage(_ref2) {\n      var user = _ref2.user,\n          chats = _ref2.chats,\n          updateChats = _ref2.updateChats,\n          chat = _ref2.chat,\n          socket = _ref2.socket,\n          text = _ref2.text;\n      var timeNow = new Date().getTime();\n      var message = {\n        chat: {\n          id: chat.id,\n          key: chat.key\n        },\n        author: user,\n        read: false,\n        createdAt: timeNow,\n        content: Cipher(text, chat.key),\n        id: \"\" + timeNow + Math.floor(Math.random() * (100000000 - 1000000 + 1) + 1000000)\n      };\n\n      if (chat.newChat) {\n        socket.emit(\"sendMessage\", {\n          room: chat.id,\n          toUser: chat.user.id,\n          message: message,\n          newChat: true,\n          key: chat.key\n        });\n        var thisChat = chats.filter(function (c) {\n          return c.id === chat.id;\n        })[0];\n        delete thisChat.newChat;\n        updateChats({\n          chats: chats\n        });\n      } else {\n        socket.emit(\"sendMessage\", {\n          room: chat.id,\n          toUser: chat.user.id,\n          message: message\n        });\n      }\n\n      chats.filter(function (c) {\n        return c.id === chat.id;\n      }).map(function (c) {\n        return c.messages.push(message);\n      });\n      updateChats({\n        chats: chats\n      });\n    }\n  }, {\n    key: \"sendHalkMessage\",\n    value: function sendHalkMessage() {\n      var timeNow = new Date().getTime();\n      var halkUser = {\n        id: \"0\",\n        phone: \"+00\",\n        profile: {\n          name: \"Halk\",\n          username: \"Halk\",\n          avatar: require(\"../../assets/images/icon.png\"),\n          bio: \"Official account of the team Halk\"\n        }\n      };\n      var halkChat = {\n        id: \"a384b2bc-1a3b-49d3-bdf5-1be72350c494\",\n        user: halkUser,\n        key: \"0000\",\n        messages: [{\n          author: halkUser,\n          content: \"Welcome to halk!\",\n          createdAt: timeNow,\n          id: \"\" + timeNow + Math.floor(Math.random() * (100000000 - 1000000 + 1) + 1000000),\n          read: false\n        }]\n      };\n      return halkChat;\n    }\n  }]);\n\n  return SocketController;\n}();\nexport function CreateSocketConnection(_ref3) {\n  var userId = _ref3.userId;\n  var socket = io(\"http://localhost:3000\", {\n    transports: [\"websocket\"],\n    auth: {\n      userId: userId\n    }\n  });\n  return socket;\n}","map":{"version":3,"names":["io","Cipher","SocketController","props","user","updateUser","chats","updateChats","socket","loadEvents","on","msg","chat","filter","c","id","messages","some","m","map","push","newChat","payload","read","text","timeNow","Date","getTime","message","key","author","createdAt","content","Math","floor","random","emit","room","toUser","thisChat","halkUser","phone","profile","name","username","avatar","require","bio","halkChat","CreateSocketConnection","userId","transports","auth"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/src/utils/socket.ts"],"sourcesContent":["import io from \"socket.io-client\";\nimport * as uuid from \"uuid\";\nimport { Cipher, Decipher } from '../../middleware/crypto';\n\nexport class SocketController {\n  constructor(props) {\n    this.user = props.user;\n    this.updateUser = props.updateUser;\n    this.chats = props.chats;\n    this.updateChats = props.updateChats;\n    this.socket = props.socket;\n\n    this.loadEvents();\n  }\n\n  public loadEvents() {\n    this.socket.on(\"receiveMessage\", (msg) => {\n      const chat = this.chats.filter((c) => c.id === msg.chat.id)[0];\n\n      if(chat) {\n        if(chat.messages.some((m) => m.id === msg.id)) return;\n        this.chats.filter((c) => c.id === msg.chat.id).map((c) => c.messages.push(msg));\n        this.updateChats({ chats: this.chats });\n      }\n    });\n\n    this.socket.on(\"newChat\", ({ newChat}) => {\n      this.chats.push(newChat);\n      this.updateChats({ chats: this.chats });\n    });\n\n    this.socket.on(\"readMessage\", (payload) => {\n      const chat = this.chats.filter((c) => c.id === payload.chat.id)[0];\n      if(chat) {\n        chat.messages.filter((m) => m.read === false).map((m) => m.read = true);\n        this.updateChats({ chats: this.chats });\n      }\n    })\n  }\n\n  static joinedChat(chats, chat, socket) {\n    // console.log(chats, chat, socket);\n  }\n\n  static sendMessage({user, chats, updateChats, chat, socket, text}) {\n    const timeNow = new Date().getTime();\n    const message = {\n      chat: {\n        id: chat.id,\n        key: chat.key,\n      },\n      author: user,\n      read: false,\n      createdAt: timeNow,\n      content: Cipher(text, chat.key),\n      id: `${timeNow}${Math.floor(\n        Math.random() * (100000000 - 1000000 + 1) + 1000000\n      )}`,\n    };\n\n    if (chat.newChat) {\n      socket.emit(\"sendMessage\", {\n        room: chat.id,\n        toUser: chat.user.id,\n        message,\n        newChat: true,\n        key: chat.key,\n      });\n      const thisChat = chats.filter((c) => c.id === chat.id)[0];\n      delete thisChat.newChat;\n      updateChats({ chats });\n    } else {\n      socket.emit(\"sendMessage\", {\n        room: chat.id,\n        toUser: chat.user.id,\n        message,\n      });\n    }\n\n    chats.filter((c) => c.id === chat.id).map((c) => c.messages.push(message));\n    updateChats({ chats });\n  }\n\n  static sendHalkMessage() {\n    const timeNow = new Date().getTime();\n    const halkUser = {\n      id: \"0\",\n      phone: \"+00\",\n      profile: {\n        name: \"Halk\",\n        username: \"Halk\",\n        avatar: require(\"../../assets/images/icon.png\"),\n        bio: \"Official account of the team Halk\",\n      },\n    };\n\n    const halkChat = {\n      id: \"a384b2bc-1a3b-49d3-bdf5-1be72350c494\",\n      user: halkUser,\n      key: \"0000\",\n      messages: [\n        {\n          author: halkUser,\n          content: \"Welcome to halk!\",\n          createdAt: timeNow,\n          id: `${timeNow}${Math.floor(\n            Math.random() * (100000000 - 1000000 + 1) + 1000000\n          )}`,\n          read: false,\n        },\n      ],\n    };\n\n    return halkChat;\n  }\n}\n\nexport function CreateSocketConnection({ userId }) {\n  const socket = io(\"http://localhost:3000\", {\n    transports: [\"websocket\"],\n    auth: {\n      userId,\n    },\n  });\n\n  return socket;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}