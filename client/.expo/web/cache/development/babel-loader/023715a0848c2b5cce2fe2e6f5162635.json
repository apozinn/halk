{"ast":null,"code":"import React, { memo } from 'react';\nimport { Emoji } from \"./Emoji\";\nimport { useContext } from \"./CountryContext\";\nimport { useAsync } from 'react-async-hook';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: 30,\n    marginRight: 10\n  },\n  emojiFlag: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1 / PixelRatio.get(),\n    borderColor: 'transparent',\n    backgroundColor: 'transparent'\n  },\n  imageFlag: {\n    resizeMode: 'contain',\n    width: 25,\n    height: 19,\n    borderWidth: 1 / PixelRatio.get(),\n    opacity: 0.8\n  }\n});\nvar ImageFlag = memo(function (_ref) {\n  var countryCode = _ref.countryCode,\n      flagSize = _ref.flagSize;\n\n  var _useContext = useContext(),\n      getImageFlagAsync = _useContext.getImageFlagAsync;\n\n  var asyncResult = useAsync(getImageFlagAsync, [countryCode]);\n\n  if (asyncResult.loading) {\n    return React.createElement(ActivityIndicator, {\n      size: 'small'\n    });\n  }\n\n  return React.createElement(Image, {\n    resizeMode: 'contain',\n    style: [styles.imageFlag, {\n      borderColor: 'transparent',\n      height: flagSize\n    }],\n    source: {\n      uri: asyncResult.result\n    }\n  });\n});\nvar EmojiFlag = memo(function (_ref2) {\n  var countryCode = _ref2.countryCode,\n      flagSize = _ref2.flagSize;\n\n  var _useContext2 = useContext(),\n      getEmojiFlagAsync = _useContext2.getEmojiFlagAsync;\n\n  var asyncResult = useAsync(getEmojiFlagAsync, [countryCode]);\n\n  if (asyncResult.loading) {\n    return React.createElement(ActivityIndicator, {\n      size: 'small'\n    });\n  }\n\n  return React.createElement(Text, {\n    style: [styles.emojiFlag, {\n      fontSize: flagSize\n    }],\n    allowFontScaling: false\n  }, React.createElement(Emoji, Object.assign({}, {\n    name: asyncResult.result\n  })));\n});\nexport var Flag = function Flag(_ref3) {\n  var countryCode = _ref3.countryCode,\n      withEmoji = _ref3.withEmoji,\n      withFlagButton = _ref3.withFlagButton,\n      flagSize = _ref3.flagSize;\n  return withFlagButton ? React.createElement(View, {\n    style: styles.container\n  }, withEmoji ? React.createElement(EmojiFlag, Object.assign({}, {\n    countryCode: countryCode,\n    flagSize: flagSize\n  })) : React.createElement(ImageFlag, Object.assign({}, {\n    countryCode: countryCode,\n    flagSize: flagSize\n  }))) : null;\n};\nFlag.defaultProps = {\n  withEmoji: true,\n  withFlagButton: true\n};","map":{"version":3,"mappings":"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","names":["React","memo","Emoji","useContext","useAsync","styles","StyleSheet","create","container","justifyContent","alignItems","width","marginRight","emojiFlag","borderWidth","PixelRatio","get","borderColor","backgroundColor","imageFlag","resizeMode","height","opacity","ImageFlag","countryCode","flagSize","getImageFlagAsync","asyncResult","loading","ActivityIndicator","size","Image","style","source","uri","result","EmojiFlag","getEmojiFlagAsync","Text","fontSize","allowFontScaling","Object","name","Flag","withEmoji","withFlagButton","View","defaultProps"],"sourceRoot":"","sources":["../src/Flag.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}