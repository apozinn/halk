{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { getColors } from \"../../constants/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function SearchChat(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var colors = getColors();\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        setModalVisible(!modalVisible);\n      },\n      children: _jsx(View, {\n        style: [styles.inputContainer, {\n          backgroundColor: colors.defaultColors.card\n        }],\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setModalVisible(!modalVisible);\n          },\n          children: _jsx(AntDesign, {\n            name: \"arrowleft\",\n            size: 25,\n            color: colors.tint\n          })\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    position: \"absolute\",\n    flex: 1\n  },\n  inputContainer: {\n    height: 40\n  }\n});","map":{"version":3,"names":["useState","AntDesign","getColors","SearchChat","navigation","modalVisible","setModalVisible","colors","styles","container","inputContainer","backgroundColor","defaultColors","card","tint","StyleSheet","create","position","flex","height"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/src/components/searchChat.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { View, StyleSheet, TouchableOpacity, Modal } from \"react-native\";\nimport { TextInput, Text } from \"./Themed\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { getColors } from \"../../constants/Colors\";\n\nexport default function SearchChat({ navigation }) {\n  const [modalVisible, setModalVisible] = useState(true);\n  const colors = getColors();\n\n  return (\n    <View style={styles.container}>\n    <Modal animationType=\"slide\"\n    transparent={true}\n    visible={modalVisible}\n    onRequestClose={() => {\n      setModalVisible(!modalVisible);\n    }}>\n\n    <View style={[styles.inputContainer, {backgroundColor: colors.defaultColors.card}]}>\n    <TouchableOpacity\n    onPress={() => setModalVisible(!modalVisible)}\n    >\n    <AntDesign name=\"arrowleft\" size={25} color={colors.tint} />\n    </TouchableOpacity>\n    </View>\n\n    </Modal>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: \"absolute\",\n    flex: 1,\n  },\n  inputContainer: {\n    height: 40,\n  },\n});\n"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;AAGA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT;;AAEA,eAAe,SAASC,UAAT,OAAoC;EAAA,IAAdC,UAAc,QAAdA,UAAc;;EACjD,gBAAwCJ,QAAQ,CAAC,IAAD,CAAhD;EAAA;EAAA,IAAOK,YAAP;EAAA,IAAqBC,eAArB;;EACA,IAAMC,MAAM,GAAGL,SAAS,EAAxB;EAEA,OACE,KAAC,IAAD;IAAM,KAAK,EAAEM,MAAM,CAACC,SAApB;IAAA,UACA,KAAC,KAAD;MAAO,aAAa,EAAC,OAArB;MACA,WAAW,EAAE,IADb;MAEA,OAAO,EAAEJ,YAFT;MAGA,cAAc,EAAE,0BAAM;QACpBC,eAAe,CAAC,CAACD,YAAF,CAAf;MACD,CALD;MAAA,UAOA,KAAC,IAAD;QAAM,KAAK,EAAE,CAACG,MAAM,CAACE,cAAR,EAAwB;UAACC,eAAe,EAAEJ,MAAM,CAACK,aAAP,CAAqBC;QAAvC,CAAxB,CAAb;QAAA,UACA,KAAC,gBAAD;UACA,OAAO,EAAE;YAAA,OAAMP,eAAe,CAAC,CAACD,YAAF,CAArB;UAAA,CADT;UAAA,UAGA,KAAC,SAAD;YAAW,IAAI,EAAC,WAAhB;YAA4B,IAAI,EAAE,EAAlC;YAAsC,KAAK,EAAEE,MAAM,CAACO;UAApD;QAHA;MADA;IAPA;EADA,EADF;AAoBD;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC/BP,SAAS,EAAE;IACTQ,QAAQ,EAAE,UADD;IAETC,IAAI,EAAE;EAFG,CADoB;EAK/BR,cAAc,EAAE;IACdS,MAAM,EAAE;EADM;AALe,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}