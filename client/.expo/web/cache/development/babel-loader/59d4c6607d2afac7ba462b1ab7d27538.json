{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nexport var styles = StyleSheet.create({\n  root: {\n    justifyContent: 'space-between',\n    flexDirection: 'row'\n  },\n  textInput: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    opacity: 0.01,\n    fontSize: 1\n  }, Platform.select({\n    web: {\n      width: '100%',\n      fontSize: 16\n    }\n  }))\n});","map":{"version":3,"names":["styles","StyleSheet","create","root","justifyContent","flexDirection","textInput","absoluteFillObject","opacity","fontSize","Platform","select","web","width"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/node_modules/react-native-confirmation-code-field/esm/CodeField.styles.js"],"sourcesContent":["import {Platform, StyleSheet} from 'react-native';\nexport const styles = StyleSheet.create({\n  root: {\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n  },\n  textInput: {\n    // <TextInput/> will be rendered above Cells\n    ...StyleSheet.absoluteFillObject,\n    // Hide <TextInput/> to simulate that user will press into a cell\n    opacity: 0.01,\n    // Each user press into <TextInput/> should always set the cursor on the end of a text value\n    fontSize: 1,\n    ...Platform.select({\n      web: {\n        width: '100%',\n        // Fix iOS Safari aggressive zoom\n        fontSize: 16,\n      },\n    }),\n  },\n});\n"],"mappings":";;;;;AACA,OAAO,IAAMA,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EACtCC,IAAI,EAAE;IACJC,cAAc,EAAE,eAAe;IAC/BC,aAAa,EAAE;EACjB,CAAC;EACDC,SAAS,kCAEJL,UAAU,CAACM,kBAAkB;IAEhCC,OAAO,EAAE,IAAI;IAEbC,QAAQ,EAAE;EAAC,GACRC,QAAQ,CAACC,MAAM,CAAC;IACjBC,GAAG,EAAE;MACHC,KAAK,EAAE,MAAM;MAEbJ,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC;AAEN,CAAC,CAAC"},"metadata":{},"sourceType":"module"}