{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport { Text } from \"../src/components/Themed\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar ErrorBoundary = function (_React$Component) {\n  _inherits(ErrorBoundary, _React$Component);\n\n  var _super = _createSuper(ErrorBoundary);\n\n  function ErrorBoundary(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(ErrorBoundary, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, errorInfo) {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.hasError) {\n        return _jsx(Text, {\n          children: \"Algo de errado n\\xE3o esta certo!\"\n        });\n      }\n\n      return this.props.children;\n    }\n  }], [{\n    key: \"getDerivedStateFromError\",\n    value: function getDerivedStateFromError(error) {\n      return {\n        hasError: true\n      };\n    }\n  }]);\n\n  return ErrorBoundary;\n}(React.Component);\n\nexport { ErrorBoundary as default };","map":{"version":3,"names":["React","Text","ErrorBoundary","props","state","hasError","error","errorInfo","children","Component"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/errorBoundary.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Text } from '../src/components/Themed';\n\nexport default class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <Text>Algo de errado n√£o esta certo!</Text>\n    }\n\n    return this.props.children;\n  }\n}\n"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT;;;IAEqBC,a;;;;;EACnB,uBAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,0BAAMA,KAAN;IACA,MAAKC,KAAL,GAAa;MAAEC,QAAQ,EAAE;IAAZ,CAAb;IAFiB;EAGlB;;;;WAMD,2BAAkBC,KAAlB,EAAyBC,SAAzB,EAAoC,CAEnC;;;WAED,kBAAS;MACP,IAAI,KAAKH,KAAL,CAAWC,QAAf,EAAyB;QACvB,OAAO,KAAC,IAAD;UAAA;QAAA,EAAP;MACD;;MAED,OAAO,KAAKF,KAAL,CAAWK,QAAlB;IACD;;;WAdD,kCAAgCF,KAAhC,EAAuC;MACrC,OAAO;QAAED,QAAQ,EAAE;MAAZ,CAAP;IACD;;;;EARwCL,KAAK,CAACS,S;;SAA5BP,a"},"metadata":{},"sourceType":"module"}