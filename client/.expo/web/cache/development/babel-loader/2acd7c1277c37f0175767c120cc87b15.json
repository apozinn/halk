{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AntDesign, Ionicons, Feather, FontAwesome, MaterialIcons, Fontisto } from \"@expo/vector-icons\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport Socket, { CreateSocketConnection } from \"../../src/utils/socket\";\nimport { getColors } from \"../../constants/Colors\";\nimport { Cipher, Decipher } from \"../../middleware/crypto\";\nimport { Userpic } from \"react-native-userpic\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar badgeProps = {\n  size: 25,\n  borderRadius: 50,\n  animate: true\n};\nexport default function Chat(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      socket = _useState2[0],\n      setSocket = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      chat = _useState8[0],\n      setChat = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      online = _useState10[0],\n      setOnline = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      userTyping = _useState12[0],\n      setUserTyping = _useState12[1];\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var _useContext2 = useContext(ChatsContext),\n      chats = _useContext2.chats,\n      updateChats = _useContext2.updateChats;\n\n  var colors = getColors();\n  var scrollViewRef = useRef();\n  useEffect(function () {\n    var chatId = route.params.id;\n    var socketConnection = CreateSocketConnection({\n      userId: user.id\n    });\n    setSocket(socketConnection);\n\n    if (chatId) {\n      var thisChat = chats.filter(function (c) {\n        return c.id === chatId;\n      })[0];\n\n      if (thisChat) {\n        setChat(thisChat);\n      } else {\n        setChat(new Socket.sendHalkMessage());\n      }\n\n      socketConnection.on(\"receiveMessage\", function (msg) {\n        if (thisChat) {\n          if (thisChat.messages.some(function (m) {\n            return m.id === msg.id;\n          })) return;\n          thisChat.messages.push(msg);\n          updateChats({\n            chats: chats\n          });\n        }\n\n        setMessages(function (oldMessages) {\n          return [].concat(_toConsumableArray(oldMessages), [msg]);\n        });\n      });\n    }\n  }, [user, chats]);\n  useEffect(function () {\n    if (chat && socket) {\n      socket.emit(\"joinRoom\", {\n        room: chat.id,\n        otherUser: chat.user.id\n      });\n      socket.emit(\"verifyIfUserIsOnline\", {\n        userId: chat.user.id\n      });\n      socket.on(\"receiveIfUserIsOnline\", function (callback) {\n        return setOnline(callback);\n      });\n      setMessages(function (oldMessages) {\n        return [].concat(_toConsumableArray(oldMessages), _toConsumableArray(chat.messages));\n      });\n      socket.on(\"readMessage\", function (p) {\n        var thisChat = chats.filter(function (c) {\n          return c.id === p.chat;\n        })[0];\n\n        if (thisChat) {\n          thisChat.messages.filter(function (m) {\n            return !m.read;\n          }).map(function (m) {\n            return m.read = true;\n          });\n          updateChats({\n            chats: chats\n          });\n        }\n      });\n    }\n  }, [chat]);\n  useEffect(function () {\n    if (!socket) return;\n\n    if (text.length === 0) {\n      socket.emit(\"userTyping\", {\n        room: chat.id,\n        typing: false,\n        userId: user.id\n      });\n    } else {\n      socket.emit(\"userTyping\", {\n        room: chat.id,\n        typing: true,\n        userId: user.id\n      });\n    }\n\n    socket.on(\"userTyping\", function (t) {\n      if (t.userId === user.id) return;\n      setUserTyping(t.typing);\n    });\n  }, [text]);\n\n  function sendMessage() {\n    if (!text) return;\n    var timeNow = new Date().getTime();\n    var message = {\n      author: user,\n      content: Cipher(text, chat.key),\n      createdAt: timeNow,\n      id: \"\" + timeNow + Math.floor(Math.random() * (100000000 - 1000000 + 1) + 1000000),\n      read: false\n    };\n\n    if (chat.newChat) {\n      socket.emit(\"sendMessage\", {\n        room: chat.id,\n        toUser: chat.user.id,\n        message: message,\n        newChat: true,\n        key: chat.key\n      });\n      var thisChat = chats.filter(function (c) {\n        return c.id === chat.id;\n      })[0];\n      delete thisChat.newChat;\n      updateChats({\n        chats: chats\n      });\n    } else {\n      socket.emit(\"sendMessage\", {\n        room: chat.id,\n        toUser: chat.user.id,\n        message: message\n      });\n    }\n\n    setText(\"\");\n  }\n\n  return _jsx(View, {\n    style: styles.container,\n    children: !chat ? _jsx(_Fragment, {}) : _jsxs(_Fragment, {\n      children: [_jsxs(View, {\n        style: [styles.topContainer, {\n          backgroundColor: colors.defaultColors.card\n        }],\n        children: [_jsxs(View, {\n          style: styles.topContainerLeft,\n          children: [_jsx(Pressable, {\n            style: function style(_ref2) {\n              var pressed = _ref2.pressed;\n              return [styles.backButton, {\n                opacity: pressed ? 0.5 : 1\n              }];\n            },\n            onPress: function onPress() {\n              return navigation.navigate(\"Root\");\n            },\n            children: _jsx(AntDesign, {\n              name: \"arrowleft\",\n              size: 25,\n              color: colors.tint\n            })\n          }), _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate(\"Profile\", {\n                id: chat.user.id\n              });\n            },\n            style: styles.userProfile,\n            children: [_jsx(Userpic, {\n              size: 40,\n              name: chat.user.profile.name,\n              source: {\n                uri: chat.user.profile.avatar\n              },\n              colorize: true,\n              borderRadius: \"50%\",\n              badge: true,\n              badgeColor: online ? \"#00ff0d\" : \"#919191\",\n              badgePosition: \"bottom-right\",\n              badgeProps: badgeProps,\n              style: {\n                marginRight: 10\n              }\n            }), _jsxs(View, {\n              style: {\n                alignItems: \"flex-start\"\n              },\n              children: [_jsx(Text, {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: chat.user.profile.name\n              }), userTyping ? _jsx(Text, {\n                style: styles.isOnline,\n                children: \"Digitando...\"\n              }) : _jsx(Text, {\n                style: styles.isOnline,\n                children: online ? \"online\" : \"\"\n              })]\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.topContainerRight,\n          children: [_jsx(Pressable, {\n            style: function style(_ref3) {\n              var pressed = _ref3.pressed;\n              return [styles.backButton, {\n                opacity: pressed ? 0.5 : 1\n              }];\n            },\n            onPress: function onPress() {},\n            children: _jsx(Ionicons, {\n              name: \"call\",\n              size: 24,\n              color: colors.tint\n            })\n          }), _jsx(Pressable, {\n            style: function style(_ref4) {\n              var pressed = _ref4.pressed;\n              return [styles.backButton, {\n                opacity: pressed ? 0.5 : 1\n              }];\n            },\n            onPress: function onPress() {},\n            children: _jsx(FontAwesome, {\n              name: \"video-camera\",\n              size: 24,\n              color: colors.tint\n            })\n          }), _jsx(Pressable, {\n            style: function style(_ref5) {\n              var pressed = _ref5.pressed;\n              return [styles.backButton, {\n                opacity: pressed ? 0.5 : 1\n              }];\n            },\n            onPress: function onPress() {},\n            children: _jsx(Feather, {\n              name: \"more-vertical\",\n              size: 24,\n              color: colors.tint\n            })\n          })]\n        })]\n      }), _jsx(ScrollView, {\n        style: styles.messageContainer,\n        ref: scrollViewRef,\n        onContentSizeChange: function onContentSizeChange() {\n          return scrollViewRef.current.scrollToEnd({\n            animated: true\n          });\n        },\n        showsVerticalScrollIndicator: false,\n        showsHorizontalScrollIndicator: false,\n        children: messages.map(function (message, index) {\n          var _messages, _messages2;\n\n          var itsMyMessage = message.author.id === user.id ? true : false;\n          var content = chat.key ? Decipher(message.content, chat.key) : \"Nova mensagem\";\n          var messageTime = new Date(message.createdAt).toLocaleTimeString();\n          var previousMessageIsMy = ((_messages = messages[index - 1]) == null ? void 0 : _messages.author.id) === message.author.id;\n          var nextMessageIsMy = ((_messages2 = messages[index + 1]) == null ? void 0 : _messages2.author.id) === message.author.id;\n          var borders = {};\n\n          if (itsMyMessage) {\n            borders.borderTopRightRadius = previousMessageIsMy && !nextMessageIsMy ? 10 : 20;\n            borders.borderBottomRightRadius = !previousMessageIsMy && nextMessageIsMy ? 10 : 20;\n\n            if (previousMessageIsMy && nextMessageIsMy) {\n              borders.borderTopRightRadius = 5;\n              borders.borderBottomRightRadius = 5;\n            }\n          } else {\n            borders.borderTopLeftRadius = previousMessageIsMy && !nextMessageIsMy ? 10 : 20;\n            borders.borderBottomLeftRadius = !previousMessageIsMy && nextMessageIsMy ? 10 : 20;\n\n            if (previousMessageIsMy && nextMessageIsMy) {\n              borders.borderTopLeftRadius = 5;\n              borders.borderBottomLeftRadius = 5;\n            }\n          }\n\n          return _jsx(View, {\n            style: itsMyMessage ? styles.myMessage : styles.otherMessage,\n            children: _jsxs(View, {\n              style: styles.messageCoco,\n              children: [_jsx(Pressable, {\n                style: [styles.message, borders, {\n                  backgroundColor: itsMyMessage ? \"#2f95dc\" : colors.defaultColors.card\n                }],\n                children: _jsx(Text, {\n                  style: {\n                    maxWidth: \"100%\",\n                    color: itsMyMessage ? \"white\" : colors.defaultColors.text\n                  },\n                  children: content\n                })\n              }), _jsx(View, {\n                style: [styles.messageProps, {\n                  justifyContent: itsMyMessage ? \"flex-end\" : \"flex-start\"\n                }],\n                children: nextMessageIsMy ? _jsx(_Fragment, {}) : _jsxs(_Fragment, {\n                  children: [_jsx(Text, {\n                    style: styles.messageCreatedAt,\n                    children: messageTime.slice(0, 5)\n                  }), itsMyMessage ? _jsx(Ionicons, {\n                    name: \"checkmark-done\",\n                    size: 20,\n                    color: message.read ? \"#04f500\" : \"gray\",\n                    style: {\n                      marginRight: 2\n                    }\n                  }) : _jsx(_Fragment, {})]\n                })\n              })]\n            })\n          }, index);\n        })\n      }), _jsxs(View, {\n        style: [styles.bottomContainer, {\n          backgroundColor: colors.defaultColors.card\n        }],\n        children: [_jsxs(View, {\n          style: styles.buttonContentLeft,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.blueButton,\n            onPress: function onPress() {},\n            children: _jsx(Fontisto, {\n              name: \"camera\",\n              size: 20,\n              color: \"white\"\n            })\n          }), _jsx(TextInput, {\n            style: styles.inputMessage,\n            placeholder: \"Mensagem...\",\n            value: text,\n            onChangeText: function onChangeText(value) {\n              return setText(value);\n            },\n            onSubmitEditing: function onSubmitEditing() {\n              return sendMessage();\n            }\n          })]\n        }), text ? _jsx(TouchableOpacity, {\n          style: styles.blueButton,\n          onPress: function onPress() {\n            return sendMessage();\n          },\n          children: _jsx(FontAwesome, {\n            name: \"send\",\n            size: 24,\n            color: \"white\"\n          })\n        }) : _jsxs(View, {\n          style: styles.othersMedias,\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {},\n            children: _jsx(Ionicons, {\n              name: \"ios-add-circle-outline\",\n              size: 26,\n              color: colors.tint\n            })\n          }), _jsx(TouchableOpacity, {\n            style: {\n              marginLeft: 8\n            },\n            onPress: function onPress() {},\n            children: _jsx(MaterialIcons, {\n              name: \"keyboard-voice\",\n              size: 26,\n              color: colors.tint\n            })\n          })]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight\n  },\n  topContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 5,\n    justifyContent: \"space-between\"\n  },\n  topContainerLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  topContainerRight: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  messageContainer: {\n    flex: 1,\n    marginHorizontal: 10,\n    flexDirection: \"column-reverse\",\n    marginBottom: 55\n  },\n  bottomContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    backgroundColor: \"rgb(18, 18, 18)\",\n    justifyContent: \"space-between\",\n    borderRadius: 50,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: 5,\n    margin: 5\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: \"#222\"\n  },\n  myMessage: {\n    justifyContent: \"flex-end\",\n    flexDirection: \"revert\"\n  },\n  otherMessage: {\n    width: \"fit-content\",\n    maxWidth: \"85%\"\n  },\n  userIcon: {\n    width: 40,\n    height: 40,\n    borderRadius: 100,\n    marginHorizontal: 5\n  },\n  userProfile: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  backButton: {\n    padding: 5,\n    borderRadius: 100\n  },\n  blueButton: {\n    backgroundColor: \"#2f95dc\",\n    padding: 8,\n    borderRadius: 100\n  },\n  othersMedias: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  inputMessage: {\n    paddingVertical: 8,\n    width: \"100%\",\n    marginLeft: 10\n  },\n  message: {\n    padding: 7,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    marginBottom: 2,\n    alignItems: \"baseline\",\n    flexWrap: \"wrap\"\n  },\n  messageCreatedAt: {\n    fontSize: 10,\n    marginHorizontal: 5,\n    marginTop: 5\n  },\n  buttonContentLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  isOnline: {\n    fontSize: 13\n  },\n  messageProps: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  messageCoco: {\n    maxWidth: \"75%\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","useContext","useRef","AntDesign","Ionicons","Feather","FontAwesome","MaterialIcons","Fontisto","TextInput","Text","UserContext","ChatsContext","Socket","CreateSocketConnection","getColors","Cipher","Decipher","Userpic","badgeProps","size","borderRadius","animate","Chat","navigation","route","socket","setSocket","messages","setMessages","text","setText","chat","setChat","online","setOnline","userTyping","setUserTyping","user","chats","updateChats","colors","scrollViewRef","chatId","params","id","socketConnection","userId","thisChat","filter","c","sendHalkMessage","on","msg","some","m","push","oldMessages","emit","room","otherUser","callback","p","read","map","length","typing","t","sendMessage","timeNow","Date","getTime","message","author","content","key","createdAt","Math","floor","random","newChat","toUser","styles","container","topContainer","backgroundColor","defaultColors","card","topContainerLeft","pressed","backButton","opacity","navigate","tint","userProfile","profile","name","uri","avatar","marginRight","alignItems","fontWeight","isOnline","topContainerRight","messageContainer","current","scrollToEnd","animated","index","itsMyMessage","messageTime","toLocaleTimeString","previousMessageIsMy","nextMessageIsMy","borders","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","myMessage","otherMessage","messageCoco","maxWidth","color","messageProps","justifyContent","messageCreatedAt","slice","bottomContainer","buttonContentLeft","blueButton","inputMessage","value","othersMedias","marginLeft","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","flexDirection","padding","marginHorizontal","marginBottom","position","bottom","left","right","margin","messageCard","borderWidth","borderColor","width","userIcon","height","paddingVertical","flexWrap","fontSize"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/chat/chat.tsx"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport {\n  Button,\n  StatusBar,\n  StyleSheet,\n  View,\n  Image,\n  Pressable,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport {\n  AntDesign,\n  Ionicons,\n  Feather,\n  FontAwesome,\n  MaterialIcons,\n  Fontisto,\n} from \"@expo/vector-icons\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport Socket, { CreateSocketConnection } from \"../../src/utils/socket\";\nimport { getColors } from \"../../constants/Colors\";\nimport { Cipher, Decipher } from \"../../middleware/crypto\";\nimport { Userpic } from \"react-native-userpic\";\n\nconst badgeProps = {\n  size: 25,\n  borderRadius: 50,\n  animate: true,\n};\n\nexport default function Chat({\n  navigation,\n  route,\n}: RootStackScreenProps<\"Chat\">) {\n  const [socket, setSocket] = useState();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [chat, setChat] = useState();\n  const [online, setOnline] = useState(false);\n  const [userTyping, setUserTyping] = useState(false);\n\n  const { user } = useContext(UserContext);\n  const { chats, updateChats } = useContext(ChatsContext);\n  const colors = getColors();\n  const scrollViewRef = useRef();\n\n  useEffect(() => {\n    const chatId = route.params.id;\n    const socketConnection = CreateSocketConnection({ userId: user.id });\n    setSocket(socketConnection);\n\n    if (chatId) {\n      const thisChat = chats.filter((c) => c.id === chatId)[0];\n      if (thisChat) {\n        setChat(thisChat);\n      } else {\n        setChat(new Socket.sendHalkMessage());\n      }\n\n      socketConnection.on(\"receiveMessage\", (msg) => {\n        if (thisChat) {\n          if (thisChat.messages.some((m) => m.id === msg.id)) return;\n          thisChat.messages.push(msg);\n          updateChats({ chats });\n        }\n\n        setMessages((oldMessages) => [...oldMessages, msg]);\n      });\n    }\n  }, [user, chats]);\n\n  useEffect(() => {\n    if (chat && socket) {\n      socket.emit(\"joinRoom\", { room: chat.id, otherUser: chat.user.id });\n      socket.emit(\"verifyIfUserIsOnline\", { userId: chat.user.id });\n      socket.on(\"receiveIfUserIsOnline\", (callback) => setOnline(callback));\n      setMessages((oldMessages) => [...oldMessages, ...chat.messages]);\n      socket.on(\"readMessage\", (p) => {\n        const thisChat = chats.filter((c) => c.id === p.chat)[0];\n        if (thisChat) {\n          thisChat.messages.filter((m) => !m.read).map((m) => (m.read = true));\n          updateChats({ chats });\n        }\n      });\n    }\n  }, [chat]);\n\n  useEffect(() => {\n    if (!socket) return;\n    if (text.length === 0) {\n      socket.emit(\"userTyping\", {\n        room: chat.id,\n        typing: false,\n        userId: user.id,\n      });\n    } else {\n      socket.emit(\"userTyping\", {\n        room: chat.id,\n        typing: true,\n        userId: user.id,\n      });\n    }\n\n    socket.on(\"userTyping\", (t) => {\n      if (t.userId === user.id) return;\n      setUserTyping(t.typing);\n    });\n  }, [text]);\n\n  function sendMessage() {\n    if (!text) return;\n    const timeNow = new Date().getTime();\n    const message = {\n      author: user,\n      content: Cipher(text, chat.key),\n      createdAt: timeNow,\n      id: `${timeNow}${Math.floor(\n        Math.random() * (100000000 - 1000000 + 1) + 1000000\n      )}`,\n      read: false,\n    };\n\n    if (chat.newChat) {\n      socket.emit(\"sendMessage\", {\n        room: chat.id,\n        toUser: chat.user.id,\n        message,\n        newChat: true,\n        key: chat.key,\n      });\n      const thisChat = chats.filter((c) => c.id === chat.id)[0];\n      delete thisChat.newChat;\n      updateChats({ chats });\n    } else {\n      socket.emit(\"sendMessage\", {\n        room: chat.id,\n        toUser: chat.user.id,\n        message,\n      });\n    }\n\n    setText(\"\");\n  }\n\n  return (\n    <View style={styles.container}>\n      {!chat ? (\n        <></>\n      ) : (\n        <>\n          <View\n            style={[\n              styles.topContainer,\n              { backgroundColor: colors.defaultColors.card },\n            ]}\n          >\n            <View style={styles.topContainerLeft}>\n              <Pressable\n                style={({ pressed }) => [\n                  styles.backButton,\n                  { opacity: pressed ? 0.5 : 1 },\n                ]}\n                onPress={() => navigation.navigate(\"Root\")}\n              >\n                <AntDesign name=\"arrowleft\" size={25} color={colors.tint} />\n              </Pressable>\n\n              <TouchableOpacity\n                onPress={() =>\n                  navigation.navigate(\"Profile\", {\n                    id: chat.user.id,\n                  })\n                }\n                style={styles.userProfile}\n              >\n                <Userpic\n                  size={40}\n                  name={chat.user.profile.name}\n                  source={{ uri: chat.user.profile.avatar }}\n                  colorize={true}\n                  borderRadius=\"50%\"\n                  badge={true}\n                  badgeColor={online ? \"#00ff0d\" : \"#919191\"}\n                  badgePosition={\"bottom-right\"}\n                  badgeProps={badgeProps}\n                  style={{ marginRight: 10 }}\n                />\n                <View style={{ alignItems: \"flex-start\" }}>\n                  <Text style={{ fontWeight: \"bold\" }}>\n                    {chat.user.profile.name}\n                  </Text>\n                  {userTyping ? (\n                    <Text style={styles.isOnline}>Digitando...</Text>\n                  ) : (\n                    <Text style={styles.isOnline}>\n                      {online ? \"online\" : \"\"}\n                    </Text>\n                  )}\n                </View>\n              </TouchableOpacity>\n            </View>\n\n            <View style={styles.topContainerRight}>\n              <Pressable\n                style={({ pressed }) => [\n                  styles.backButton,\n                  { opacity: pressed ? 0.5 : 1 },\n                ]}\n                onPress={() => {}}\n              >\n                <Ionicons name=\"call\" size={24} color={colors.tint} />\n              </Pressable>\n              <Pressable\n                style={({ pressed }) => [\n                  styles.backButton,\n                  { opacity: pressed ? 0.5 : 1 },\n                ]}\n                onPress={() => {}}\n              >\n                <FontAwesome\n                  name=\"video-camera\"\n                  size={24}\n                  color={colors.tint}\n                />\n              </Pressable>\n              <Pressable\n                style={({ pressed }) => [\n                  styles.backButton,\n                  { opacity: pressed ? 0.5 : 1 },\n                ]}\n                onPress={() => {}}\n              >\n                <Feather name=\"more-vertical\" size={24} color={colors.tint} />\n              </Pressable>\n            </View>\n          </View>\n\n          <ScrollView\n            style={styles.messageContainer}\n            ref={scrollViewRef}\n            onContentSizeChange={() =>\n              scrollViewRef.current.scrollToEnd({ animated: true })\n            }\n            showsVerticalScrollIndicator={false}\n            showsHorizontalScrollIndicator={false}\n          >\n            {messages.map((message, index) => {\n              const itsMyMessage = message.author.id === user.id ? true : false;\n              let content = chat.key\n                ? Decipher(message.content, chat.key)\n                : \"Nova mensagem\";\n              const messageTime = new Date(\n                message.createdAt\n              ).toLocaleTimeString();\n\n              let previousMessageIsMy =\n                messages[index - 1]?.author.id === message.author.id;\n              let nextMessageIsMy =\n                messages[index + 1]?.author.id === message.author.id;\n\n                let borders = {};\n\n                if(itsMyMessage) {\n                  //work with right border\n                  borders.borderTopRightRadius = previousMessageIsMy && !nextMessageIsMy ? 10 : 20;\n                  borders.borderBottomRightRadius = !previousMessageIsMy && nextMessageIsMy ? 10 : 20;\n\n                  if(previousMessageIsMy && nextMessageIsMy) {\n                    borders.borderTopRightRadius = 5;\n                    borders.borderBottomRightRadius = 5;\n                  }\n                } else {\n                  //work with left border\n                  borders.borderTopLeftRadius = previousMessageIsMy && !nextMessageIsMy ? 10 : 20;\n                  borders.borderBottomLeftRadius = !previousMessageIsMy && nextMessageIsMy ? 10 : 20;\n\n                  if(previousMessageIsMy && nextMessageIsMy) {\n                    borders.borderTopLeftRadius = 5;\n                    borders.borderBottomLeftRadius = 5;\n                  }\n                }\n\n              return (\n                <View\n                  style={itsMyMessage ? styles.myMessage : styles.otherMessage}\n                  key={index}\n                >\n                  <View style={styles.messageCoco}>\n                    <Pressable\n                      style={[\n                        styles.message, borders,\n                        {\n                          backgroundColor: itsMyMessage\n                            ? \"#2f95dc\"\n                            : colors.defaultColors.card,\n                        },\n                      ]}\n                    >\n                      <Text\n                        style={{\n                          maxWidth: \"100%\",\n                          color: itsMyMessage\n                            ? \"white\"\n                            : colors.defaultColors.text,\n                        }}\n                      >\n                        {content}\n                      </Text>\n                    </Pressable>\n                    <View\n                      style={[\n                        styles.messageProps,\n                        {\n                          justifyContent: itsMyMessage\n                            ? \"flex-end\"\n                            : \"flex-start\",\n                        },\n                      ]}\n                    >\n                      {nextMessageIsMy ? (\n                        <></>\n                      ) : (\n                        <>\n                          <Text style={styles.messageCreatedAt}>\n                            {messageTime.slice(0, 5)}\n                          </Text>\n                          {itsMyMessage ? (\n                            <Ionicons\n                              name=\"checkmark-done\"\n                              size={20}\n                              color={message.read ? \"#04f500\" : \"gray\"}\n                              style={{ marginRight: 2 }}\n                            />\n                          ) : (\n                            <></>\n                          )}\n                        </>\n                      )}\n                    </View>\n                  </View>\n                </View>\n              );\n            })}\n          </ScrollView>\n\n          <View\n            style={[\n              styles.bottomContainer,\n              { backgroundColor: colors.defaultColors.card },\n            ]}\n          >\n            <View style={styles.buttonContentLeft}>\n              <TouchableOpacity style={styles.blueButton} onPress={() => {}}>\n                <Fontisto name=\"camera\" size={20} color=\"white\" />\n              </TouchableOpacity>\n              <TextInput\n                style={styles.inputMessage}\n                placeholder=\"Mensagem...\"\n                value={text}\n                onChangeText={(value) => setText(value)}\n                onSubmitEditing={() => sendMessage()}\n              />\n            </View>\n\n            {text ? (\n              <TouchableOpacity\n                style={styles.blueButton}\n                onPress={() => sendMessage()}\n              >\n                <FontAwesome name=\"send\" size={24} color=\"white\" />\n              </TouchableOpacity>\n            ) : (\n              <View style={styles.othersMedias}>\n                <TouchableOpacity onPress={() => {}}>\n                  <Ionicons\n                    name=\"ios-add-circle-outline\"\n                    size={26}\n                    color={colors.tint}\n                  />\n                </TouchableOpacity>\n                <TouchableOpacity style={{ marginLeft: 8 }} onPress={() => {}}>\n                  <MaterialIcons\n                    name=\"keyboard-voice\"\n                    size={26}\n                    color={colors.tint}\n                  />\n                </TouchableOpacity>\n              </View>\n            )}\n          </View>\n        </>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n  },\n  topContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 5,\n    justifyContent: \"space-between\",\n  },\n  topContainerLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  topContainerRight: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  messageContainer: {\n    flex: 1,\n    marginHorizontal: 10,\n    flexDirection: \"column-reverse\",\n    marginBottom: 55,\n  },\n  bottomContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    backgroundColor: \"rgb(18, 18, 18)\",\n    justifyContent: \"space-between\",\n    borderRadius: 50,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: 5,\n    margin: 5,\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: \"#222\",\n  },\n  myMessage: {\n    justifyContent: \"flex-end\",\n    flexDirection: \"revert\",\n  },\n  otherMessage: {\n    width: \"fit-content\",\n    maxWidth: \"85%\",\n  },\n  userIcon: {\n    width: 40,\n    height: 40,\n    borderRadius: 100,\n    marginHorizontal: 5,\n  },\n  userProfile: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  backButton: {\n    padding: 5,\n    borderRadius: 100,\n  },\n  blueButton: {\n    backgroundColor: \"#2f95dc\",\n    padding: 8,\n    borderRadius: 100,\n  },\n  othersMedias: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  inputMessage: {\n    paddingVertical: 8,\n    width: \"100%\",\n    marginLeft: 10,\n  },\n  message: {\n    padding: 7,\n    borderRadius: 20,\n    flexDirection: \"row\",\n    marginBottom: 2,\n    alignItems: \"baseline\",\n    flexWrap: \"wrap\",\n  },\n  messageCreatedAt: {\n    fontSize: 10,\n    marginHorizontal: 5,\n    marginTop: 5,\n  },\n  buttonContentLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  isOnline: {\n    fontSize: 13,\n  },\n  messageProps: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  messageCoco: {\n    maxWidth: \"75%\",\n  }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}