{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text } from \"./Themed\";\nimport { isPossiblePhoneNumber, isValidPhoneNumber } from \"libphonenumber-js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function VerifyPhoneFormat(_ref) {\n  var phone = _ref.phone,\n      navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  function Verify() {\n    if (!phone || !navigation) return null;\n\n    if (isPossiblePhoneNumber(phone) && isValidPhoneNumber(phone)) {\n      return _jsx(View, {\n        style: styles.centeredView,\n        children: _jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: modalVisible,\n          onRequestClose: function onRequestClose() {\n            setModalVisible(!modalVisible);\n          },\n          children: _jsx(View, {\n            style: styles.centeredView,\n            children: _jsxs(View, {\n              style: styles.modalView,\n              children: [_jsxs(Text, {\n                style: styles.modalText,\n                children: [\"Voc\\xEA confirma \", phone, \" como seu n\\xFAmero?\"]\n              }), _jsxs(View, {\n                style: styles.buttonsContainer,\n                children: [_jsx(Pressable, {\n                  onPress: function onPress() {\n                    return setModalVisible(!modalVisible);\n                  },\n                  children: _jsx(Text, {\n                    style: [styles.button, {\n                      color: \"red\"\n                    }],\n                    children: \"Cancel\"\n                  })\n                }), _jsx(Pressable, {\n                  onPress: function onPress() {\n                    setModalVisible(!modalVisible);\n                    navigation.navigate(\"ReceiveCode\");\n                  },\n                  children: _jsx(Text, {\n                    style: [styles.button, {\n                      color: \"lime\"\n                    }],\n                    children: \"Confirmar\"\n                  })\n                })]\n              })]\n            })\n          })\n        })\n      });\n    } else {\n      return _jsx(View, {\n        style: styles.centeredView,\n        children: _jsx(Modal, {\n          animationType: \"slide\",\n          transparent: true,\n          visible: modalVisible,\n          onRequestClose: function onRequestClose() {\n            setModalVisible(!modalVisible);\n          },\n          children: _jsx(View, {\n            style: styles.centeredView,\n            children: _jsxs(View, {\n              style: styles.modalView,\n              children: [_jsx(Text, {\n                style: styles.modalText,\n                children: \"N\\xFAmero inval\\xEDdo, tente novamente.\"\n              }), _jsx(View, {\n                style: styles.buttonsContainer,\n                children: _jsx(Pressable, {\n                  onPress: function onPress() {\n                    return setModalVisible(!modalVisible);\n                  },\n                  children: _jsx(Text, {\n                    style: [styles.button, {\n                      color: \"lime\"\n                    }],\n                    children: \"Ok\"\n                  })\n                })\n              })]\n            })\n          })\n        })\n      });\n    }\n  }\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(Pressable, {\n      style: [styles.nextButton, {\n        opacity: !phone ? 0.5 : 1\n      }],\n      onPress: function onPress() {\n        return setModalVisible(modalVisible ? false : true);\n      },\n      children: _jsx(Text, {\n        children: \"Continue\"\n      })\n    }), _jsx(Verify, {})]\n  });\n}\nvar styles = StyleSheet.create({\n  nextButton: {\n    backgroundColor: \"#2f95dc\",\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    position: \"absolute\",\n    borderRadius: 100,\n    bottom: 20\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 15,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  title: {\n    fontSize: 14\n  },\n  button: {\n    fontSize: 12\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"names":["React","useState","Text","isPossiblePhoneNumber","isValidPhoneNumber","VerifyPhoneFormat","phone","navigation","modalVisible","setModalVisible","Verify","styles","centeredView","modalView","modalText","buttonsContainer","button","color","navigate","nextButton","opacity","StyleSheet","create","backgroundColor","paddingVertical","paddingHorizontal","position","borderRadius","bottom","flex","justifyContent","alignItems","margin","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","title","fontSize","buttonOpen","buttonClose","textStyle","fontWeight","textAlign","marginBottom","flexDirection"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/src/components/verifyPhoneFormat.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, Modal, Pressable, StyleSheet } from \"react-native\";\nimport { Text } from \"./Themed\";\nimport {\n  isPossiblePhoneNumber,\n  isValidPhoneNumber,\n  validatePhoneNumberLength,\n} from \"libphonenumber-js\";\n\nexport default function VerifyPhoneFormat({ phone, navigation }: any) {\n  const [modalVisible, setModalVisible] = useState(false);\n\n  function Verify() {\n    if (!phone || !navigation) return null;\n\n    if (\n      isPossiblePhoneNumber(phone) &&\n      isValidPhoneNumber(phone)\n    ) {\n      return (\n        <View style={styles.centeredView}>\n          <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={modalVisible}\n            onRequestClose={() => {\n              setModalVisible(!modalVisible);\n            }}\n          >\n            <View style={styles.centeredView}>\n              <View style={styles.modalView}>\n                <Text style={styles.modalText}>\n                  Você confirma {phone} como seu número?\n                </Text>\n                <View style={styles.buttonsContainer}>\n                  <Pressable onPress={() => setModalVisible(!modalVisible)}>\n                    <Text style={[styles.button, { color: \"red\" }]}>\n                      Cancel\n                    </Text>\n                  </Pressable>\n                  <Pressable\n                    onPress={() => {\n                      setModalVisible(!modalVisible);\n                      navigation.navigate(\"ReceiveCode\");\n                    }}\n                  >\n                    <Text style={[styles.button, { color: \"lime\" }]}>\n                      Confirmar\n                    </Text>\n                  </Pressable>\n                </View>\n              </View>\n            </View>\n          </Modal>\n        </View>\n      );\n    } else {\n      return (\n        <View style={styles.centeredView}>\n          <Modal\n            animationType=\"slide\"\n            transparent={true}\n            visible={modalVisible}\n            onRequestClose={() => {\n              setModalVisible(!modalVisible);\n            }}\n          >\n            <View style={styles.centeredView}>\n              <View style={styles.modalView}>\n                <Text style={styles.modalText}>\n                  Número invalído, tente novamente.\n                </Text>\n                <View style={styles.buttonsContainer}>\n                  <Pressable onPress={() => setModalVisible(!modalVisible)}>\n                    <Text style={[styles.button, { color: \"lime\" }]}>Ok</Text>\n                  </Pressable>\n                </View>\n              </View>\n            </View>\n          </Modal>\n        </View>\n      );\n    }\n  }\n\n  return (\n    <>\n      <Pressable\n        style={[styles.nextButton, { opacity: !phone ? 0.5 : 1 }]}\n        onPress={() => setModalVisible(modalVisible ? false : true)}\n      >\n        <Text>Continue</Text>\n      </Pressable>\n      <Verify />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  nextButton: {\n    backgroundColor: \"#2f95dc\",\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    position: \"absolute\",\n    borderRadius: 100,\n    bottom: 20,\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 15,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  title: {\n    fontSize: 14,\n  },\n  button: {\n    fontSize: 12,\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\",\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\",\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"100%\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}