{"ast":null,"code":"import React, { useContext, useEffect } from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { Text } from \"../../src/components/Themed\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport NewChatButton from \"../../src/components/newChat\";\nimport { getColors } from \"../../constants/Colors\";\nimport Socket, { CreateSocketConnection } from \"../../src/utils/socket\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function Chats(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      logged = _useContext.logged,\n      updateUser = _useContext.updateUser;\n\n  var _useContext2 = useContext(ChatsContext),\n      chats = _useContext2.chats,\n      updateChats = _useContext2.updateChats;\n\n  var colors = getColors();\n  useEffect(function () {\n    var socketConnection = CreateSocketConnection();\n    socketConnection.emit(\"connection\", {\n      userId: user.id\n    });\n    socketConnection.on(\"receiveMessage\", function (msg) {\n      if (msg) {\n        console.log(\"nova mensagem de \", msg.author.name);\n        var thisChat = chats.filter(function (c) {\n          return c.user === msg.author.id;\n        })[0];\n\n        if (thisChat) {\n          thisChat.messages.push(msg);\n          updateChats({\n            chats: chats\n          });\n        }\n      }\n    });\n    socketConnection.on(\"newChat\", function (_ref2) {\n      var newChat = _ref2.newChat;\n\n      if (newChat) {\n        chats.push(newChat);\n        updateChats({\n          chats: chats\n        });\n      }\n    });\n  }, []);\n\n  function ChatContainer(_ref3) {\n    var chat = _ref3.chat;\n    if (!chat.id) return;\n    var lastMessage = chat.messages[chat.messages.length - 1];\n    if (!lastMessage) return null;\n    var unredMessages = chat.messages.filter(function (m) {\n      return !m.read;\n    });\n    var messageTime = new Date(lastMessage.createdAt).toLocaleTimeString();\n    return _jsxs(Pressable, {\n      style: function style(_ref4) {\n        var pressed = _ref4.pressed;\n        return [styles.chat, {\n          backgroundColor: pressed ? colors.defaultColors.card : \"transparent\"\n        }];\n      },\n      onPress: function onPress() {\n        return navigation.navigate(\"Chat\", {\n          id: chat.id\n        });\n      },\n      children: [_jsxs(View, {\n        style: styles.leftContent,\n        children: [_jsx(Image, {\n          source: {\n            uri: chat.user.profile.avatar\n          },\n          style: styles.userIcon\n        }), _jsxs(View, {\n          style: {\n            justifyContent: \"center\"\n          },\n          children: [_jsx(Text, {\n            style: styles.username,\n            children: chat.user.profile.name\n          }), lastMessage.author.id === user.id ? _jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              alignItems: 'flex-end'\n            },\n            children: [_jsx(Ionicons, {\n              name: \"checkmark-done\",\n              size: 20,\n              color: \"gray\",\n              style: {\n                marginRight: 2\n              }\n            }), _jsx(Text, {\n              style: styles.messageContent,\n              children: lastMessage.content.length > 28 ? lastMessage.content.slice(0, 28) + \"...\" : lastMessage.content\n            })]\n          }) : _jsx(Text, {\n            children: lastMessage.content.length > 30 ? lastMessage.content.slice(0, 30) + \"...\" : lastMessage.content\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.rightContent,\n        children: [_jsx(Text, {\n          style: styles.messageDate,\n          children: messageTime.slice(0, 5)\n        }), !unredMessages.length ? _jsx(_Fragment, {}) : _jsx(Text, {\n          style: styles.unread,\n          children: unredMessages.length\n        })]\n      })]\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [!logged ? _jsx(_Fragment, {\n      children: navigation.navigate(\"Welcome\")\n    }) : _jsx(ScrollView, {\n      style: {\n        padding: 5\n      },\n      children: !chats.length ? _jsx(ChatContainer, {\n        chat: new Socket.sendHalkMessage()\n      }) : _jsx(_Fragment, {\n        children: chats.map(function (chat, index) {\n          return _jsx(ChatContainer, {\n            chat: chat\n          }, index);\n        })\n      })\n    }), _jsx(NewChatButton, {\n      navigation: navigation\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  chat: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    padding: 5\n  },\n  leftContent: {\n    flexDirection: \"row\"\n  },\n  userIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 100,\n    marginRight: 10\n  },\n  username: {\n    fontWeight: 'bold'\n  },\n  messageContent: {\n    fontSize: 13,\n    opacity: 0.7,\n    alignItems: \"center\"\n  },\n  rightContent: {\n    alignItems: \"center\"\n  },\n  messageDate: {\n    fontSize: 11,\n    marginBottom: 3\n  },\n  unread: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    minWidth: 15,\n    minHeight: 15,\n    textAlign: \"center\",\n    color: \"white\"\n  }\n});","map":{"version":3,"names":["React","useContext","useEffect","UserContext","ChatsContext","Text","Ionicons","NewChatButton","getColors","Socket","CreateSocketConnection","Chats","navigation","user","logged","updateUser","chats","updateChats","colors","socketConnection","emit","userId","id","on","msg","console","log","author","name","thisChat","filter","c","messages","push","newChat","ChatContainer","chat","lastMessage","length","unredMessages","m","read","messageTime","Date","createdAt","toLocaleTimeString","pressed","styles","backgroundColor","defaultColors","card","navigate","leftContent","uri","profile","avatar","userIcon","justifyContent","username","flexDirection","alignItems","marginRight","messageContent","content","slice","rightContent","messageDate","unread","container","padding","sendHalkMessage","map","index","StyleSheet","create","flex","borderRadius","width","height","fontWeight","fontSize","opacity","marginBottom","minWidth","minHeight","textAlign","color"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/app/chats.tsx"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { Pressable, View, StyleSheet, ScrollView, Image } from \"react-native\";\nimport { RootTabScreenProps } from \"../../types\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { Text } from \"../../src/components/Themed\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport NewChatButton from \"../../src/components/newChat\";\nimport { getColors } from \"../../constants/Colors\";\nimport Socket, { CreateSocketConnection } from \"../../src/utils/socket\";\n\nexport default function Chats({ navigation }: RootTabScreenProps<\"Chats\">) {\n  const { user, logged, updateUser } = useContext(UserContext);\n  const { chats, updateChats } = useContext(ChatsContext);\n  const colors = getColors();\n\n  useEffect(() => {\n    const socketConnection = CreateSocketConnection();\n    socketConnection.emit(\"connection\", { userId: user.id });\n    socketConnection.on(\"receiveMessage\", (msg) => {\n      if(msg) {\n        console.log(\"nova mensagem de \", msg.author.name);\n        const thisChat = chats.filter((c) => c.user === msg.author.id)[0];\n        if(thisChat) {\n          thisChat.messages.push(msg);\n          updateChats({ chats });\n        }\n      }\n    });\n    socketConnection.on(\"newChat\", ({ newChat }) => {\n      if(newChat) {\n        chats.push(newChat);\n        updateChats({ chats });\n      }\n    });\n  }, []);\n\n  function ChatContainer({ chat }) {\n    if (!chat.id) return;\n    const lastMessage = chat.messages[chat.messages.length - 1];\n    if(!lastMessage) return null;\n    const unredMessages = chat.messages.filter((m) => !m.read);\n    const messageTime = new Date(lastMessage.createdAt).toLocaleTimeString();\n\n    return (\n      <Pressable\n        style={({ pressed }) => [\n          styles.chat,\n          {\n            backgroundColor: pressed\n              ? colors.defaultColors.card\n              : \"transparent\",\n          },\n        ]}\n        onPress={() =>\n          navigation.navigate(\"Chat\", {\n            id: chat.id,\n          })\n        }\n      >\n        <View style={styles.leftContent}>\n          <Image\n            source={{ uri: chat.user.profile.avatar }}\n            style={styles.userIcon}\n          />\n          <View style={{ justifyContent: \"center\" }}>\n            <Text style={styles.username}>{chat.user.profile.name}</Text>\n            {lastMessage.author.id === user.id ? (\n              <View style={{flexDirection: 'row', alignItems: 'flex-end'}}>\n                <Ionicons name=\"checkmark-done\" size={20} color=\"gray\" style={{marginRight: 2}} />\n                <Text style={styles.messageContent}>\n                  {lastMessage.content.length > 28\n                    ? lastMessage.content.slice(0, 28) + \"...\"\n                    : lastMessage.content}\n                </Text>\n              </View>\n            ) : (\n              <Text>\n                {lastMessage.content.length > 30\n                  ? lastMessage.content.slice(0, 30) + \"...\"\n                  : lastMessage.content}\n              </Text>\n            )}\n          </View>\n        </View>\n        <View style={styles.rightContent}>\n          <Text style={styles.messageDate}>{messageTime.slice(0, 5)}</Text>\n          {!unredMessages.length ? (\n            <></>\n          ) : (\n            <Text style={styles.unread}>{unredMessages.length}</Text>\n          )}\n        </View>\n      </Pressable>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      {!logged ? (\n        <>{navigation.navigate(\"Welcome\")}</>\n      ) : (\n        <ScrollView style={{ padding: 5 }}>\n          {!chats.length ? (\n            <ChatContainer chat={new Socket.sendHalkMessage()} />\n          ) : (\n            <>\n              {chats.map((chat, index) => (\n                <ChatContainer chat={chat} key={index} />\n              ))}\n            </>\n          )}\n        </ScrollView>\n      )}\n      <NewChatButton navigation={navigation} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  chat: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    padding: 5,\n  },\n  leftContent: {\n    flexDirection: \"row\",\n  },\n  userIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 100,\n    marginRight: 10,\n  },\n  username: {\n    fontWeight: 'bold',\n  },\n  messageContent: {\n    fontSize: 13,\n    opacity: 0.7,\n    alignItems: \"center\",\n  },\n  rightContent: {\n    alignItems: \"center\",\n  },\n  messageDate: {\n    fontSize: 11,\n    marginBottom: 3,\n  },\n  unread: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    minWidth: 15,\n    minHeight: 15,\n    textAlign: \"center\",\n    color: \"white\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}