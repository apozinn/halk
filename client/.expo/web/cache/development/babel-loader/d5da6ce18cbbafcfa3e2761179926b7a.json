{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from \"./Themed\";\nimport { Userpic } from \"react-native-userpic\";\nimport { Decipher } from \"../../middleware/crypto\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Chat = function (_Component) {\n  _inherits(Chat, _Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this, props);\n    _this.scrollViewRef = React.createRef();\n    _this.badgeProps = {\n      size: 25,\n      borderRadius: 50,\n      animate: true\n    };\n    _this.state = {\n      visible: false,\n      isOnline: false,\n      scrollOffset: null\n    };\n    _this.user = props.user;\n    _this.chats = props.chats;\n    _this.updateChats = props.updateChats;\n    _this.chat = props.chat;\n    _this.navigation = props.navigation;\n    _this.socket = props.socket;\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"ModalChat\",\n    value: function ModalChat() {\n      return _jsx(Text, {\n        children: \"cu\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var lastMessage = this.chat.messages[this.chat.messages.length - 1];\n      if (!lastMessage) return null;\n      var unredMessages = this.chat.messages.filter(function (m) {\n        return m.read === false;\n      });\n      var messageTime = new Date(lastMessage.createdAt).toLocaleTimeString();\n\n      if (this.socket) {\n        this.socket.emit(\"verifyIfUserIsOnline\", {\n          userId: this.chat.user.id\n        });\n        this.socket.on(\"receiveIfUserIsOnline\", function (callback) {\n          return _this2.setState({\n            isOnline: callback\n          });\n        });\n      }\n\n      var content = this.chat.key ? Decipher(lastMessage.content, this.chat.key) : \"Nova mensagem\";\n      return _jsxs(TouchableOpacity, {\n        style: styles.chatContainer,\n        onPress: function onPress() {\n          _this2.navigation.navigate(\"Chat\", {\n            id: _this2.chat.id\n          });\n        },\n        onLongPress: function onLongPress() {\n          return _this2.open();\n        },\n        children: [_jsx(_Fragment, {\n          children: this.ModalChat()\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Userpic, {\n            size: 40,\n            name: this.chat.user.profile.name,\n            source: {\n              uri: this.chat.user.profile.avatar\n            },\n            colorize: true,\n            borderRadius: \"50%\",\n            badge: true,\n            badgeColor: this.state.isOnline ? \"#00ff0d\" : \"#919191\",\n            badgePosition: \"bottom-right\",\n            badgeProps: this.badgeProps,\n            style: {\n              marginRight: 10\n            }\n          }), _jsxs(View, {\n            style: {\n              justifyContent: \"center\"\n            },\n            children: [_jsx(Text, {\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: this.chat.user.profile.name\n            }), lastMessage.author.id === this.user.id ? _jsxs(View, {\n              style: {\n                flexDirection: \"row\",\n                alignItems: \"center\"\n              },\n              children: [_jsx(Ionicons, {\n                name: \"checkmark-done\",\n                size: 20,\n                color: lastMessage.read ? \"#2f95dc\" : \"gray\",\n                style: {\n                  marginRight: 2\n                }\n              }), _jsx(Text, {\n                style: styles.messageContent,\n                children: content.length > 28 ? content.slice(0, 28) + \"...\" : content\n              })]\n            }) : _jsx(Text, {\n              children: content.length > 30 ? content.slice(0, 30) + \"...\" : content\n            })]\n          })]\n        }), _jsxs(View, {\n          style: {\n            alignItems: \"center\"\n          },\n          children: [_jsx(Text, {\n            style: styles.messageDate,\n            children: messageTime.slice(0, 5)\n          }), !unredMessages.length ? _jsx(_Fragment, {}) : _jsx(Text, {\n            style: styles.unread,\n            children: unredMessages.length\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nvar styles = StyleSheet.create({\n  chatContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    padding: 5\n  },\n  messageContent: {\n    fontSize: 13,\n    opacity: 0.7,\n    alignItems: \"center\"\n  },\n  messageDate: {\n    fontSize: 11,\n    marginBottom: 3\n  },\n  unread: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    minWidth: 15,\n    minHeight: 15,\n    textAlign: \"center\",\n    color: \"white\"\n  },\n  modal: {\n    justifyContent: \"flex-end\",\n    margin: 0\n  },\n  scrollableModal: {\n    height: 400\n  },\n  scrollableModalContent1: {\n    height: 200,\n    backgroundColor: \"#87BBE0\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderTopRadius: 10\n  },\n  scrollableModalText1: {\n    fontSize: 20,\n    color: \"white\"\n  },\n  scrollableModalContent2: {\n    height: 200,\n    backgroundColor: \"#A9DCD3\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  scrollableModalText2: {\n    fontSize: 20,\n    color: \"white\"\n  }\n});\nexport default Chat;","map":{"version":3,"names":["React","Component","Text","Userpic","Decipher","Ionicons","Chat","props","scrollViewRef","createRef","badgeProps","size","borderRadius","animate","state","visible","isOnline","scrollOffset","user","chats","updateChats","chat","navigation","socket","lastMessage","messages","length","unredMessages","filter","m","read","messageTime","Date","createdAt","toLocaleTimeString","emit","userId","id","on","callback","setState","content","key","styles","chatContainer","navigate","open","ModalChat","flexDirection","profile","name","uri","avatar","marginRight","justifyContent","fontWeight","author","alignItems","messageContent","slice","messageDate","unread","StyleSheet","create","padding","fontSize","opacity","marginBottom","backgroundColor","minWidth","minHeight","textAlign","color","modal","margin","scrollableModal","height","scrollableModalContent1","borderTopRadius","scrollableModalText1","scrollableModalContent2","scrollableModalText2"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/src/components/chat.tsx"],"sourcesContent":["import React, { Component, ReactElement, useState } from \"react\";\nimport { StyleSheet, TouchableOpacity, View, ScrollView } from \"react-native\";\nimport { Text } from \"./Themed\";\nimport { Userpic } from \"react-native-userpic\";\nimport CreateSocketConnectio from \"../utils/socket\";\nimport { Cipher, Decipher } from \"../../middleware/crypto\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Modal from \"react-native-modal\";\n\nclass Chat extends Component {\n  public scrollViewRef: React.RefObject<ScrollView> = React.createRef();\n  public badgeProps = {\n    size: 25,\n    borderRadius: 50,\n    animate: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      isOnline: false,\n      scrollOffset: null,\n    };\n\n    this.user = props.user;\n    this.chats = props.chats;\n    this.updateChats = props.updateChats;\n\n    this.chat = props.chat;\n    this.navigation = props.navigation;\n    this.socket = props.socket;\n  }\n\n  \n\n  ModalChat() {\n    return (\n      <Text>cu</Text>\n    );\n  }\n\n  render() {\n    const lastMessage = this.chat.messages[this.chat.messages.length - 1];\n    if (!lastMessage) return null;\n    const unredMessages = this.chat.messages.filter((m) => m.read === false);\n    const messageTime = new Date(lastMessage.createdAt).toLocaleTimeString();\n\n    if (this.socket) {\n      this.socket.emit(\"verifyIfUserIsOnline\", { userId: this.chat.user.id });\n      this.socket.on(\"receiveIfUserIsOnline\", (callback) =>\n        this.setState({ isOnline: callback })\n      );\n    }\n\n    let content = this.chat.key\n      ? Decipher(lastMessage.content, this.chat.key)\n      : \"Nova mensagem\";\n\n    return (\n      <TouchableOpacity\n        style={styles.chatContainer}\n        onPress={() => {\n          this.navigation.navigate(\"Chat\", {\n            id: this.chat.id,\n          });\n        }}\n        onLongPress={() => this.open()}\n      >\n        <>{this.ModalChat()}</>\n        <View style={{ flexDirection: \"row\" }}>\n          <Userpic\n            size={40}\n            name={this.chat.user.profile.name}\n            source={{ uri: this.chat.user.profile.avatar }}\n            colorize={true}\n            borderRadius=\"50%\"\n            badge={true}\n            badgeColor={this.state.isOnline ? \"#00ff0d\" : \"#919191\"}\n            badgePosition={\"bottom-right\"}\n            badgeProps={this.badgeProps}\n            style={{ marginRight: 10 }}\n          />\n          <View style={{ justifyContent: \"center\" }}>\n            <Text style={{ fontWeight: \"bold\" }}>\n              {this.chat.user.profile.name}\n            </Text>\n            {lastMessage.author.id === this.user.id ? (\n              <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                <Ionicons\n                  name=\"checkmark-done\"\n                  size={20}\n                  color={lastMessage.read ? \"#2f95dc\" : \"gray\"}\n                  style={{ marginRight: 2 }}\n                />\n                <Text style={styles.messageContent}>\n                  {content.length > 28 ? content.slice(0, 28) + \"...\" : content}\n                </Text>\n              </View>\n            ) : (\n              <Text>\n                {content.length > 30 ? content.slice(0, 30) + \"...\" : content}\n              </Text>\n            )}\n          </View>\n        </View>\n        <View style={{ alignItems: \"center\" }}>\n          <Text style={styles.messageDate}>{messageTime.slice(0, 5)}</Text>\n          {!unredMessages.length ? (\n            <></>\n          ) : (\n            <Text style={styles.unread}>{unredMessages.length}</Text>\n          )}\n        </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  chatContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    padding: 5,\n  },\n  messageContent: {\n    fontSize: 13,\n    opacity: 0.7,\n    alignItems: \"center\",\n  },\n  messageDate: {\n    fontSize: 11,\n    marginBottom: 3,\n  },\n  unread: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    minWidth: 15,\n    minHeight: 15,\n    textAlign: \"center\",\n    color: \"white\",\n  },\n  modal: {\n    justifyContent: \"flex-end\",\n    margin: 0,\n  },\n  scrollableModal: {\n    height: 400,\n  },\n  scrollableModalContent1: {\n    height: 200,\n    backgroundColor: \"#87BBE0\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderTopRadius: 10,\n  },\n  scrollableModalText1: {\n    fontSize: 20,\n    color: \"white\",\n  },\n  scrollableModalContent2: {\n    height: 200,\n    backgroundColor: \"#A9DCD3\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  scrollableModalText2: {\n    fontSize: 20,\n    color: \"white\",\n  },\n});\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}