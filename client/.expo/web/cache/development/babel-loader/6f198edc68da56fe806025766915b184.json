{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { AntDesign, Ionicons, Feather, FontAwesome, MaterialIcons, Fontisto } from \"@expo/vector-icons\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { SocketContext } from \"../../src/contexts/socket\";\nimport { SocketController } from \"../../src/utils/socket\";\nimport { getColors } from \"../../constants/Colors\";\nimport { Userpic } from \"react-native-userpic\";\nimport MessagesContainer from \"../../src/components/messagesContainer\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar badgeProps = {\n  size: 25,\n  borderRadius: 50,\n  animate: true\n};\nexport default function Chat(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var _useContext2 = useContext(ChatsContext),\n      chats = _useContext2.chats,\n      updateChats = _useContext2.updateChats;\n\n  var socket = useContext(SocketContext);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      chat = _useState6[0],\n      setChat = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      online = _useState8[0],\n      setOnline = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userTyping = _useState10[0],\n      setUserTyping = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      lastLength = _useState12[0],\n      setLastLength = _useState12[1];\n\n  var colors = getColors();\n  var scrollViewRef = useRef();\n  useEffect(function () {\n    if (!user || !chats || !socket) return;\n    var chatId = route.params.id;\n\n    if (chatId) {\n      var thisChat = chats.filter(function (c) {\n        return c.id === chatId;\n      })[0];\n\n      if (thisChat) {\n        setChat(thisChat);\n      } else setChat(new SocketController.sendHalkMessage());\n    } else navigation.goBack();\n\n    socket.on(\"receiveMessage\", function (msg) {\n      console.log(chat.messages.length, lastLength);\n      if (chat.messages.some(function (m) {\n        return m.id === msg.id;\n      })) return;\n      chats.filter(function (c) {\n        return c.id === chatId;\n      }).map(function (c) {\n        return c.messages.push(msg);\n      });\n      updateChats({\n        chats: chats\n      });\n    });\n  }, []);\n  useEffect(function () {\n    if (chat && socket) {\n      new SocketController.joinedChat({\n        chats: chats,\n        chat: chat,\n        socket: socket\n      });\n      socket.on(\"receiveIfUserIsOnline\", function (callback) {\n        return setOnline(callback);\n      });\n    }\n  }, [chat]);\n  useEffect(function () {\n    if (!socket || !chat) return;\n\n    if (text.length === 0) {\n      socket.emit(\"userTyping\", {\n        room: chat.id,\n        typing: false,\n        userId: user.id\n      });\n    } else {\n      socket.emit(\"userTyping\", {\n        room: chat.id,\n        typing: true,\n        userId: user.id\n      });\n    }\n\n    socket.on(\"userTyping\", function (t) {\n      if (t.userId === user.id) return;\n      setUserTyping(t.typing);\n    });\n  }, [text]);\n\n  function sendMessage() {\n    if (!text) return;\n    new SocketController.sendMessage({\n      user: user,\n      chats: chats,\n      updateChats: updateChats,\n      chat: chat,\n      socket: socket,\n      text: text\n    });\n    setText(\"\");\n  }\n\n  useEffect(function () {\n    console.log(\"eita porra\");\n  }, [chats]);\n  return _jsx(View, {\n    style: styles.container,\n    children: !chat ? _jsx(_Fragment, {}) : _jsxs(_Fragment, {\n      children: [_jsxs(View, {\n        style: [styles.topContainer, {\n          backgroundColor: colors.defaultColors.card\n        }],\n        children: [_jsxs(View, {\n          style: styles.topContainerLeft,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {\n              return navigation.navigate(\"Root\");\n            },\n            children: _jsx(AntDesign, {\n              name: \"arrowleft\",\n              size: 25,\n              color: colors.tint\n            })\n          }), _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigation.navigate(\"Profile\", {\n                id: chat.user.id\n              });\n            },\n            style: styles.userProfile,\n            children: [_jsx(Userpic, {\n              size: 40,\n              name: chat.user.profile.name,\n              source: {\n                uri: chat.user.profile.avatar\n              },\n              colorize: true,\n              borderRadius: \"50%\",\n              badge: true,\n              badgeColor: online ? \"#00ff0d\" : \"#919191\",\n              badgePosition: \"bottom-right\",\n              badgeProps: badgeProps,\n              style: {\n                marginRight: 10\n              }\n            }), _jsxs(View, {\n              style: {\n                alignItems: \"flex-start\"\n              },\n              children: [_jsx(Text, {\n                style: {\n                  fontWeight: \"bold\"\n                },\n                children: chat.user.profile.name\n              }), userTyping ? _jsx(Text, {\n                style: styles.isOnline,\n                children: \"Digitando...\"\n              }) : _jsx(Text, {\n                style: styles.isOnline,\n                children: online ? \"online\" : \"\"\n              })]\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.topContainerRight,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {},\n            children: _jsx(Ionicons, {\n              name: \"call\",\n              size: 24,\n              color: colors.tint\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {},\n            children: _jsx(FontAwesome, {\n              name: \"video-camera\",\n              size: 24,\n              color: colors.tint\n            })\n          }), _jsx(TouchableOpacity, {\n            style: styles.button,\n            onPress: function onPress() {},\n            children: _jsx(Feather, {\n              name: \"more-vertical\",\n              size: 24,\n              color: colors.tint\n            })\n          })]\n        })]\n      }), _jsx(MessagesContainer, {\n        user: user,\n        chats: chats,\n        updateChats: updateChats,\n        chat: chat,\n        colors: colors\n      }), _jsxs(View, {\n        style: [styles.bottomContainer, {\n          backgroundColor: colors.defaultColors.card\n        }],\n        children: [_jsxs(View, {\n          style: styles.buttonContentLeft,\n          children: [_jsx(TouchableOpacity, {\n            style: styles.blueButton,\n            onPress: function onPress() {},\n            children: _jsx(Fontisto, {\n              name: \"camera\",\n              size: 20,\n              color: \"white\"\n            })\n          }), _jsx(TextInput, {\n            style: styles.inputMessage,\n            placeholder: \"Mensagem...\",\n            value: text,\n            onChangeText: function onChangeText(value) {\n              return setText(value);\n            },\n            onSubmitEditing: function onSubmitEditing() {\n              return sendMessage();\n            },\n            maxLength: 4100\n          })]\n        }), text ? _jsx(TouchableOpacity, {\n          style: styles.blueButton,\n          onPress: function onPress() {\n            return sendMessage();\n          },\n          children: _jsx(FontAwesome, {\n            name: \"send\",\n            size: 24,\n            color: \"white\"\n          })\n        }) : _jsxs(View, {\n          style: styles.othersMedias,\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {},\n            children: _jsx(Ionicons, {\n              name: \"ios-add-circle-outline\",\n              size: 26,\n              color: colors.tint\n            })\n          }), _jsx(TouchableOpacity, {\n            style: {\n              marginLeft: 8\n            },\n            onPress: function onPress() {},\n            children: _jsx(MaterialIcons, {\n              name: \"keyboard-voice\",\n              size: 26,\n              color: colors.tint\n            })\n          })]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight\n  },\n  topContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 5,\n    justifyContent: \"space-between\"\n  },\n  topContainerLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  topContainerRight: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  messageContainer: {\n    flex: 1,\n    marginHorizontal: 10,\n    flexDirection: \"column-reverse\",\n    marginBottom: 55\n  },\n  bottomContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    backgroundColor: \"rgb(18, 18, 18)\",\n    justifyContent: \"space-between\",\n    borderRadius: 50,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: 5,\n    margin: 5\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: \"#222\"\n  },\n  userIcon: {\n    width: 40,\n    height: 40,\n    borderRadius: 100,\n    marginHorizontal: 5\n  },\n  userProfile: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  button: {\n    padding: 5\n  },\n  blueButton: {\n    backgroundColor: \"#2f95dc\",\n    padding: 8,\n    borderRadius: 100\n  },\n  othersMedias: {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  },\n  inputMessage: {\n    paddingVertical: 8,\n    width: \"100%\",\n    marginLeft: 10\n  },\n  buttonContentLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"80%\"\n  },\n  isOnline: {\n    fontSize: 13\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","useContext","useRef","AntDesign","Ionicons","Feather","FontAwesome","MaterialIcons","Fontisto","TextInput","Text","UserContext","ChatsContext","SocketContext","SocketController","getColors","Userpic","MessagesContainer","badgeProps","size","borderRadius","animate","Chat","navigation","route","user","chats","updateChats","socket","messages","setMessages","text","setText","chat","setChat","online","setOnline","userTyping","setUserTyping","lastLength","setLastLength","colors","scrollViewRef","chatId","params","id","thisChat","filter","c","sendHalkMessage","goBack","on","msg","console","log","length","some","m","map","push","joinedChat","callback","emit","room","typing","userId","t","sendMessage","styles","container","topContainer","backgroundColor","defaultColors","card","topContainerLeft","button","navigate","tint","userProfile","profile","name","uri","avatar","marginRight","alignItems","fontWeight","isOnline","topContainerRight","bottomContainer","buttonContentLeft","blueButton","inputMessage","value","othersMedias","marginLeft","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","flexDirection","padding","justifyContent","messageContainer","marginHorizontal","marginBottom","position","bottom","left","right","margin","messageCard","borderWidth","borderColor","userIcon","width","height","paddingVertical","fontSize"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/chat/chat.tsx"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport {\n  Button,\n  StatusBar,\n  StyleSheet,\n  View,\n  Image,\n  Pressable,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport {\n  AntDesign,\n  Ionicons,\n  Feather,\n  FontAwesome,\n  MaterialIcons,\n  Fontisto,\n} from \"@expo/vector-icons\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { SocketContext } from \"../../src/contexts/socket\";\nimport { SocketController } from \"../../src/utils/socket\";\nimport { getColors } from \"../../constants/Colors\";\nimport { Cipher, Decipher } from \"../../middleware/crypto\";\nimport { Userpic } from \"react-native-userpic\";\nimport MessagesContainer from \"../../src/components/messagesContainer\";\n\nconst badgeProps = {\n  size: 25,\n  borderRadius: 50,\n  animate: true,\n};\n\nexport default function Chat({ navigation, route }) {\n  const { user } = useContext(UserContext);\n  const { chats, updateChats } = useContext(ChatsContext);\n  const socket = useContext(SocketContext);\n\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [chat, setChat] = useState();\n  const [online, setOnline] = useState(false);\n  const [userTyping, setUserTyping] = useState(false);\n  const [lastLength, setLastLength] = useState(0);\n\n  const colors = getColors();\n  const scrollViewRef = useRef();\n\n  useEffect(() => {\n    if (!user || !chats || !socket) return;\n\n    const chatId = route.params.id;\n    if (chatId) {\n      var thisChat = chats.filter((c) => c.id === chatId)[0];\n      if (thisChat) {\n        setChat(thisChat);\n      } else setChat(new SocketController.sendHalkMessage());\n    } else navigation.goBack();\n\n    socket.on(\"receiveMessage\", (msg) => {\n      console.log(chat.messages.length, lastLength);\n      if (chat.messages.some((m) => m.id === msg.id)) return;\n      chats.filter((c) => c.id === chatId).map((c) => c.messages.push(msg));\n      updateChats({ chats });\n    });\n  }, []);\n\n  useEffect(() => {\n    if (chat && socket) {\n      new SocketController.joinedChat({ chats, chat, socket });\n      socket.on(\"receiveIfUserIsOnline\", (callback) => setOnline(callback));\n    }\n  }, [chat]);\n\n  useEffect(() => {\n    if (!socket || !chat) return;\n    if (text.length === 0) {\n      socket.emit(\"userTyping\", {\n        room: chat.id,\n        typing: false,\n        userId: user.id,\n      });\n    } else {\n      socket.emit(\"userTyping\", {\n        room: chat.id,\n        typing: true,\n        userId: user.id,\n      });\n    }\n\n    socket.on(\"userTyping\", (t) => {\n      if (t.userId === user.id) return;\n      setUserTyping(t.typing);\n    });\n  }, [text]);\n\n  function sendMessage() {\n    if (!text) return;\n    new SocketController.sendMessage({\n      user,\n      chats,\n      updateChats,\n      chat,\n      socket,\n      text,\n    });\n    setText(\"\");\n  }\n\n  useEffect(() => {\n    console.log(\"eita porra\");\n  }, [chats]);\n\n  return (\n    <View style={styles.container}>\n      {!chat ? (\n        <></>\n      ) : (\n        <>\n          <View\n            style={[\n              styles.topContainer,\n              { backgroundColor: colors.defaultColors.card },\n            ]}\n          >\n            <View style={styles.topContainerLeft}>\n              <TouchableOpacity\n                style={styles.button}\n                onPress={() => navigation.navigate(\"Root\")}\n              >\n                <AntDesign name=\"arrowleft\" size={25} color={colors.tint} />\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                onPress={() =>\n                  navigation.navigate(\"Profile\", {\n                    id: chat.user.id,\n                  })\n                }\n                style={styles.userProfile}\n              >\n                <Userpic\n                  size={40}\n                  name={chat.user.profile.name}\n                  source={{ uri: chat.user.profile.avatar }}\n                  colorize={true}\n                  borderRadius=\"50%\"\n                  badge={true}\n                  badgeColor={online ? \"#00ff0d\" : \"#919191\"}\n                  badgePosition={\"bottom-right\"}\n                  badgeProps={badgeProps}\n                  style={{ marginRight: 10 }}\n                />\n                <View style={{ alignItems: \"flex-start\" }}>\n                  <Text style={{ fontWeight: \"bold\" }}>\n                    {chat.user.profile.name}\n                  </Text>\n                  {userTyping ? (\n                    <Text style={styles.isOnline}>Digitando...</Text>\n                  ) : (\n                    <Text style={styles.isOnline}>\n                      {online ? \"online\" : \"\"}\n                    </Text>\n                  )}\n                </View>\n              </TouchableOpacity>\n            </View>\n\n            <View style={styles.topContainerRight}>\n              <TouchableOpacity style={styles.button} onPress={() => {}}>\n                <Ionicons name=\"call\" size={24} color={colors.tint} />\n              </TouchableOpacity>\n              <TouchableOpacity style={styles.button} onPress={() => {}}>\n                <FontAwesome\n                  name=\"video-camera\"\n                  size={24}\n                  color={colors.tint}\n                />\n              </TouchableOpacity>\n              <TouchableOpacity style={styles.button} onPress={() => {}}>\n                <Feather name=\"more-vertical\" size={24} color={colors.tint} />\n              </TouchableOpacity>\n            </View>\n          </View>\n          \n          <MessagesContainer {...{ user, chats, updateChats, chat, colors }} />\n\n          <View\n            style={[\n              styles.bottomContainer,\n              { backgroundColor: colors.defaultColors.card },\n            ]}\n          >\n            <View style={styles.buttonContentLeft}>\n              <TouchableOpacity style={styles.blueButton} onPress={() => {}}>\n                <Fontisto name=\"camera\" size={20} color=\"white\" />\n              </TouchableOpacity>\n              <TextInput\n                style={styles.inputMessage}\n                placeholder=\"Mensagem...\"\n                value={text}\n                onChangeText={(value) => setText(value)}\n                onSubmitEditing={() => sendMessage()}\n                maxLength={4100}\n              />\n            </View>\n\n            {text ? (\n              <TouchableOpacity\n                style={styles.blueButton}\n                onPress={() => sendMessage()}\n              >\n                <FontAwesome name=\"send\" size={24} color=\"white\" />\n              </TouchableOpacity>\n            ) : (\n              <View style={styles.othersMedias}>\n                <TouchableOpacity onPress={() => {}}>\n                  <Ionicons\n                    name=\"ios-add-circle-outline\"\n                    size={26}\n                    color={colors.tint}\n                  />\n                </TouchableOpacity>\n                <TouchableOpacity style={{ marginLeft: 8 }} onPress={() => {}}>\n                  <MaterialIcons\n                    name=\"keyboard-voice\"\n                    size={26}\n                    color={colors.tint}\n                  />\n                </TouchableOpacity>\n              </View>\n            )}\n          </View>\n        </>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n  },\n  topContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 5,\n    justifyContent: \"space-between\",\n  },\n  topContainerLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  topContainerRight: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  messageContainer: {\n    flex: 1,\n    marginHorizontal: 10,\n    flexDirection: \"column-reverse\",\n    marginBottom: 55,\n  },\n  bottomContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    position: \"absolute\",\n    backgroundColor: \"rgb(18, 18, 18)\",\n    justifyContent: \"space-between\",\n    borderRadius: 50,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    padding: 5,\n    margin: 5,\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: \"#222\",\n  },\n  userIcon: {\n    width: 40,\n    height: 40,\n    borderRadius: 100,\n    marginHorizontal: 5,\n  },\n  userProfile: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  button: {\n    padding: 5,\n  },\n  blueButton: {\n    backgroundColor: \"#2f95dc\",\n    padding: 8,\n    borderRadius: 100,\n  },\n  othersMedias: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  inputMessage: {\n    paddingVertical: 8,\n    width: \"100%\",\n    marginLeft: 10,\n  },\n  buttonContentLeft: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    width: \"80%\",\n  },\n  isOnline: {\n    fontSize: 13,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}