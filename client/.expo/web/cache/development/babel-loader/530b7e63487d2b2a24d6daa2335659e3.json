{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"withModal\", \"disableNativeModal\"];\nimport * as React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { AnimatedModal } from \"./AnimatedModal\";\nimport { Modal } from \"./Modal\";\nimport { useTheme } from \"./CountryTheme\";\nimport { CountryModalContext } from \"./CountryModalProvider\";\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nexport var CountryModal = function CountryModal(_ref) {\n  var children = _ref.children,\n      withModal = _ref.withModal,\n      disableNativeModal = _ref.disableNativeModal,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useTheme = useTheme(),\n      backgroundColor = _useTheme.backgroundColor;\n\n  var _React$useContext = React.useContext(CountryModalContext),\n      teleport = _React$useContext.teleport;\n\n  var content = React.createElement(SafeAreaView, {\n    style: [styles.container, {\n      backgroundColor: backgroundColor\n    }]\n  }, children);\n  React.useEffect(function () {\n    if (disableNativeModal) {\n      teleport(React.createElement(AnimatedModal, Object.assign({}, props), content));\n    }\n  }, [disableNativeModal]);\n\n  if (withModal) {\n    if (Platform.OS === 'web') {\n      return React.createElement(Modal, Object.assign({}, props), content);\n    }\n\n    if (disableNativeModal) {\n      return null;\n    }\n\n    return React.createElement(Modal, Object.assign({}, props), content);\n  }\n\n  return content;\n};\nCountryModal.defaultProps = {\n  animationType: 'slide',\n  animated: true,\n  withModal: true,\n  disableNativeModal: false\n};","map":{"version":3,"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,SAASC,aAAT;AACA,SAASC,KAAT;AACA,SAASC,QAAT;AACA,SAASC,mBAAT;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE;EADG;AADoB,CAAlB,CAAf;AAMA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OASvB;EAAA,IARHC,QAQG,QARHA,QAQG;EAAA,IAPHC,SAOG,QAPHA,SAOG;EAAA,IANHC,kBAMG,QANHA,kBAMG;EAAA,IALAC,KAKA;;EACH,gBAA4BX,QAAQ,EAApC;EAAA,IAAQY,eAAR,aAAQA,eAAR;;EACA,wBAAqBf,KAAK,CAACgB,UAAN,CAAiBZ,mBAAjB,CAArB;EAAA,IAAQa,QAAR,qBAAQA,QAAR;;EACA,IAAMC,OAAO,GACXlB,oBAACmB,YAAD,EAAa;IAACC,KAAK,EAAE,CAACf,MAAM,CAACG,SAAR,EAAmB;MAAEO,eAAe,EAAfA;IAAF,CAAnB;EAAR,CAAb,EACGJ,QADH,CADF;EAKAX,KAAK,CAACqB,SAAN,CAAgB,YAAK;IACnB,IAAIR,kBAAJ,EAAwB;MACtBI,QAAS,CAACjB,oBAACC,aAAD,EAAcqB,kBAAKR,KAAL,CAAd,EAA2BI,OAA3B,CAAD,CAAT;IACD;EACF,CAJD,EAIG,CAACL,kBAAD,CAJH;;EAKA,IAAID,SAAJ,EAAe;IACb,IAAIW,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;MACzB,OAAOxB,oBAACE,KAAD,EAAMoB,kBAAKR,KAAL,CAAN,EAAmBI,OAAnB,CAAP;IACD;;IACD,IAAIL,kBAAJ,EAAwB;MACtB,OAAO,IAAP;IACD;;IACD,OAAOb,oBAACE,KAAD,EAAMoB,kBAAKR,KAAL,CAAN,EAAmBI,OAAnB,CAAP;EACD;;EACD,OAAOA,OAAP;AACD,CAhCM;AAkCPR,YAAY,CAACe,YAAb,GAA4B;EAC1BC,aAAa,EAAE,OADW;EAE1BC,QAAQ,EAAE,IAFgB;EAG1Bf,SAAS,EAAE,IAHe;EAI1BC,kBAAkB,EAAE;AAJM,CAA5B","names":["React","AnimatedModal","Modal","useTheme","CountryModalContext","styles","StyleSheet","create","container","flex","CountryModal","children","withModal","disableNativeModal","props","backgroundColor","useContext","teleport","content","SafeAreaView","style","useEffect","Object","Platform","OS","defaultProps","animationType","animated"],"sourceRoot":"","sources":["../src/CountryModal.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}