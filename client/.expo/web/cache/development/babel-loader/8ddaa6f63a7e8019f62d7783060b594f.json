{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { Platform } from 'expo-modules-core';\nexport var userMediaRequested = false;\nexport var mountedInstances = [];\nfunction requestLegacyUserMediaAsync(_x) {\n  return _requestLegacyUserMediaAsync.apply(this, arguments);\n}\nfunction _requestLegacyUserMediaAsync() {\n  _requestLegacyUserMediaAsync = _asyncToGenerator(function* (props) {\n    var optionalSource = function optionalSource(id) {\n      return {\n        optional: [{\n          sourceId: id\n        }]\n      };\n    };\n    var constraintToSourceId = function constraintToSourceId(constraint) {\n      var deviceId = constraint.deviceId;\n      if (typeof deviceId === 'string') {\n        return deviceId;\n      }\n      if (Array.isArray(deviceId) && deviceId.length > 0) {\n        return deviceId[0];\n      }\n      if (typeof deviceId === 'object' && deviceId.ideal) {\n        return deviceId.ideal;\n      }\n      return null;\n    };\n    var sources = yield new Promise(function (resolve) {\n      return (\n        MediaStreamTrack.getSources(function (sources) {\n          return resolve(sources);\n        })\n      );\n    });\n    var audioSource = null;\n    var videoSource = null;\n    sources.forEach(function (source) {\n      if (source.kind === 'audio') {\n        audioSource = source.id;\n      } else if (source.kind === 'video') {\n        videoSource = source.id;\n      }\n    });\n    var audioSourceId = constraintToSourceId(props.audioConstraints);\n    if (audioSourceId) {\n      audioSource = audioSourceId;\n    }\n    var videoSourceId = constraintToSourceId(props.videoConstraints);\n    if (videoSourceId) {\n      videoSource = videoSourceId;\n    }\n    return [optionalSource(audioSource), optionalSource(videoSource)];\n  });\n  return _requestLegacyUserMediaAsync.apply(this, arguments);\n}\nfunction sourceSelectedAsync(_x2, _x3, _x4) {\n  return _sourceSelectedAsync.apply(this, arguments);\n}\nfunction _sourceSelectedAsync() {\n  _sourceSelectedAsync = _asyncToGenerator(function* (isMuted, audioConstraints, videoConstraints) {\n    var constraints = {\n      video: typeof videoConstraints !== 'undefined' ? videoConstraints : true\n    };\n    if (!isMuted) {\n      constraints.audio = typeof audioConstraints !== 'undefined' ? audioConstraints : true;\n    }\n    return yield getAnyUserMediaAsync(constraints);\n  });\n  return _sourceSelectedAsync.apply(this, arguments);\n}\nexport function requestUserMediaAsync(_x5) {\n  return _requestUserMediaAsync.apply(this, arguments);\n}\nfunction _requestUserMediaAsync() {\n  _requestUserMediaAsync = _asyncToGenerator(function* (props) {\n    var isMuted = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (canGetUserMedia()) {\n      return yield sourceSelectedAsync(isMuted, props.audio, props.video);\n    }\n    var _yield$requestLegacyU = yield requestLegacyUserMediaAsync(props),\n      _yield$requestLegacyU2 = _slicedToArray(_yield$requestLegacyU, 2),\n      audio = _yield$requestLegacyU2[0],\n      video = _yield$requestLegacyU2[1];\n    return yield sourceSelectedAsync(isMuted, audio, video);\n  });\n  return _requestUserMediaAsync.apply(this, arguments);\n}\nexport function getAnyUserMediaAsync(_x6) {\n  return _getAnyUserMediaAsync.apply(this, arguments);\n}\nfunction _getAnyUserMediaAsync() {\n  _getAnyUserMediaAsync = _asyncToGenerator(function* (constraints) {\n    var ignoreConstraints = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    try {\n      return yield getUserMediaAsync(_objectSpread(_objectSpread({}, constraints), {}, {\n        video: ignoreConstraints || constraints.video\n      }));\n    } catch (error) {\n      if (!ignoreConstraints && error.name === 'ConstraintNotSatisfiedError') {\n        return yield getAnyUserMediaAsync(constraints, true);\n      }\n      throw error;\n    }\n  });\n  return _getAnyUserMediaAsync.apply(this, arguments);\n}\nexport function getUserMediaAsync(_x7) {\n  return _getUserMediaAsync.apply(this, arguments);\n}\nfunction _getUserMediaAsync() {\n  _getUserMediaAsync = _asyncToGenerator(function* (constraints) {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      return navigator.mediaDevices.getUserMedia(constraints);\n    }\n    var _getUserMedia = navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'] || navigator['msGetUserMedia'];\n    return new Promise(function (resolve, reject) {\n      return _getUserMedia.call(navigator, constraints, resolve, reject);\n    });\n  });\n  return _getUserMediaAsync.apply(this, arguments);\n}\nexport function canGetUserMedia() {\n  return (\n    Platform.isDOMAvailable &&\n    !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia || navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'] || navigator['msGetUserMedia'])\n  );\n}\nexport function isFrontCameraAvailableAsync(_x8) {\n  return _isFrontCameraAvailableAsync.apply(this, arguments);\n}\nfunction _isFrontCameraAvailableAsync() {\n  _isFrontCameraAvailableAsync = _asyncToGenerator(function* (devices) {\n    return yield supportsCameraType(['front', 'user', 'facetime'], 'user', devices);\n  });\n  return _isFrontCameraAvailableAsync.apply(this, arguments);\n}\nexport function isBackCameraAvailableAsync(_x9) {\n  return _isBackCameraAvailableAsync.apply(this, arguments);\n}\nfunction _isBackCameraAvailableAsync() {\n  _isBackCameraAvailableAsync = _asyncToGenerator(function* (devices) {\n    return yield supportsCameraType(['back', 'rear'], 'environment', devices);\n  });\n  return _isBackCameraAvailableAsync.apply(this, arguments);\n}\nfunction supportsCameraType(_x10, _x11, _x12) {\n  return _supportsCameraType.apply(this, arguments);\n}\nfunction _supportsCameraType() {\n  _supportsCameraType = _asyncToGenerator(function* (labels, type, devices) {\n    if (!devices) {\n      if (!navigator.mediaDevices.enumerateDevices) {\n        return null;\n      }\n      devices = yield navigator.mediaDevices.enumerateDevices();\n    }\n    var cameras = devices.filter(function (t) {\n      return t.kind === 'videoinput';\n    });\n    var _cameras$filter = cameras.filter(function (camera) {\n        return labels.some(function (label) {\n          return camera.label.toLowerCase().includes(label);\n        });\n      }),\n      _cameras$filter2 = _slicedToArray(_cameras$filter, 1),\n      hasCamera = _cameras$filter2[0];\n    var _cameras$filter3 = cameras.filter(function (camera) {\n        if (!('getCapabilities' in camera)) {\n          return null;\n        }\n        var capabilities = camera.getCapabilities();\n        if (!capabilities.facingMode) {\n          return null;\n        }\n        return capabilities.facingMode.find(function (_) {\n          return type;\n        });\n      }),\n      _cameras$filter4 = _slicedToArray(_cameras$filter3, 1),\n      isCapable = _cameras$filter4[0];\n    return (isCapable == null ? void 0 : isCapable.deviceId) || (hasCamera == null ? void 0 : hasCamera.deviceId) || null;\n  });\n  return _supportsCameraType.apply(this, arguments);\n}","map":{"version":3,"mappings":"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","names":["Platform","userMediaRequested","mountedInstances","requestLegacyUserMediaAsync","props","optionalSource","id","optional","sourceId","constraintToSourceId","constraint","deviceId","Array","isArray","length","ideal","sources","Promise","resolve","MediaStreamTrack","getSources","audioSource","videoSource","forEach","source","kind","audioSourceId","audioConstraints","videoSourceId","videoConstraints","sourceSelectedAsync","isMuted","constraints","video","audio","getAnyUserMediaAsync","requestUserMediaAsync","canGetUserMedia","ignoreConstraints","getUserMediaAsync","error","name","navigator","mediaDevices","getUserMedia","_getUserMedia","reject","call","isDOMAvailable","isFrontCameraAvailableAsync","devices","supportsCameraType","isBackCameraAvailableAsync","labels","type","enumerateDevices","cameras","filter","t","camera","some","label","toLowerCase","includes","hasCamera","capabilities","getCapabilities","facingMode","find","_","isCapable"],"sourceRoot":"","sources":["../src/WebUserMediaManager.ts"],"sourcesContent":["/* eslint-env browser */\n/**\n * A web-only module for ponyfilling the UserMedia API.\n */\nimport { Platform } from 'expo-modules-core';\n\nexport const userMediaRequested: boolean = false;\n\nexport const mountedInstances: any[] = [];\n\nasync function requestLegacyUserMediaAsync(props): Promise<any[]> {\n  const optionalSource = (id) => ({ optional: [{ sourceId: id }] });\n\n  const constraintToSourceId = (constraint) => {\n    const { deviceId } = constraint;\n\n    if (typeof deviceId === 'string') {\n      return deviceId;\n    }\n\n    if (Array.isArray(deviceId) && deviceId.length > 0) {\n      return deviceId[0];\n    }\n\n    if (typeof deviceId === 'object' && deviceId.ideal) {\n      return deviceId.ideal;\n    }\n\n    return null;\n  };\n\n  const sources: any[] = await new Promise((resolve) =>\n    // @ts-ignore: https://caniuse.com/#search=getSources Chrome for Android (78) & Samsung Internet (10.1) use this\n    MediaStreamTrack.getSources((sources) => resolve(sources))\n  );\n\n  let audioSource = null;\n  let videoSource = null;\n\n  sources.forEach((source) => {\n    if (source.kind === 'audio') {\n      audioSource = source.id;\n    } else if (source.kind === 'video') {\n      videoSource = source.id;\n    }\n  });\n\n  const audioSourceId = constraintToSourceId(props.audioConstraints);\n  if (audioSourceId) {\n    audioSource = audioSourceId;\n  }\n\n  const videoSourceId = constraintToSourceId(props.videoConstraints);\n  if (videoSourceId) {\n    videoSource = videoSourceId;\n  }\n\n  return [optionalSource(audioSource), optionalSource(videoSource)];\n}\n\nasync function sourceSelectedAsync(\n  isMuted: boolean,\n  audioConstraints?: MediaTrackConstraints | boolean,\n  videoConstraints?: MediaTrackConstraints | boolean\n): Promise<MediaStream> {\n  const constraints: MediaStreamConstraints = {\n    video: typeof videoConstraints !== 'undefined' ? videoConstraints : true,\n  };\n\n  if (!isMuted) {\n    constraints.audio = typeof audioConstraints !== 'undefined' ? audioConstraints : true;\n  }\n\n  return await getAnyUserMediaAsync(constraints);\n}\n\nexport async function requestUserMediaAsync(\n  props: { audio?: any; video?: any },\n  isMuted: boolean = true\n): Promise<MediaStream> {\n  if (canGetUserMedia()) {\n    return await sourceSelectedAsync(isMuted, props.audio, props.video);\n  }\n  const [audio, video] = await requestLegacyUserMediaAsync(props);\n  return await sourceSelectedAsync(isMuted, audio, video);\n}\n\nexport async function getAnyUserMediaAsync(\n  constraints: MediaStreamConstraints,\n  ignoreConstraints: boolean = false\n): Promise<MediaStream> {\n  try {\n    return await getUserMediaAsync({\n      ...constraints,\n      video: ignoreConstraints || constraints.video,\n    });\n  } catch (error) {\n    if (!ignoreConstraints && error.name === 'ConstraintNotSatisfiedError') {\n      return await getAnyUserMediaAsync(constraints, true);\n    }\n    throw error;\n  }\n}\n\nexport async function getUserMediaAsync(constraints: MediaStreamConstraints): Promise<MediaStream> {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  const _getUserMedia =\n    navigator['mozGetUserMedia'] || navigator['webkitGetUserMedia'] || navigator['msGetUserMedia'];\n  return new Promise((resolve, reject) =>\n    _getUserMedia.call(navigator, constraints, resolve, reject)\n  );\n}\n\nexport function canGetUserMedia(): boolean {\n  return (\n    // SSR\n    Platform.isDOMAvailable &&\n    // Has any form of media API\n    !!(\n      (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) ||\n      navigator['mozGetUserMedia'] ||\n      navigator['webkitGetUserMedia'] ||\n      navigator['msGetUserMedia']\n    )\n  );\n}\n\nexport async function isFrontCameraAvailableAsync(\n  devices?: MediaDeviceInfo[]\n): Promise<null | string> {\n  return await supportsCameraType(['front', 'user', 'facetime'], 'user', devices);\n}\n\nexport async function isBackCameraAvailableAsync(\n  devices?: MediaDeviceInfo[]\n): Promise<null | string> {\n  return await supportsCameraType(['back', 'rear'], 'environment', devices);\n}\n\nasync function supportsCameraType(\n  labels: string[],\n  type: string,\n  devices?: MediaDeviceInfo[]\n): Promise<null | string> {\n  if (!devices) {\n    if (!navigator.mediaDevices.enumerateDevices) {\n      return null;\n    }\n    devices = await navigator.mediaDevices.enumerateDevices();\n  }\n  const cameras = devices.filter((t) => t.kind === 'videoinput');\n  const [hasCamera] = cameras.filter((camera) =>\n    labels.some((label) => camera.label.toLowerCase().includes(label))\n  );\n  const [isCapable] = cameras.filter((camera) => {\n    if (!('getCapabilities' in camera)) {\n      return null;\n    }\n\n    const capabilities = (camera as any).getCapabilities();\n    if (!capabilities.facingMode) {\n      return null;\n    }\n\n    return capabilities.facingMode.find((_: string) => type);\n  });\n\n  return isCapable?.deviceId || hasCamera?.deviceId || null;\n}\n"]},"metadata":{},"sourceType":"module"}