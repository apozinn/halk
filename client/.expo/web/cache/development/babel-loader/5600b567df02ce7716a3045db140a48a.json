{"ast":null,"code":"import crypto from 'crypto-js';\nexport function Decipher(text, key) {\n  var cryptoInfo = crypto.AES.encrypt(JSON.stringify({\n    string: string\n  }), key).toString();\n  console.log({\n    cryptoInfo: cryptoInfo\n  });\n  var info2 = crypto.AES.decrypt(cryptoInfo, key).toString(crypto.enc.Utf8);\n  console.log({\n    info2: info2\n  });\n  var info3 = JSON.parse(info2);\n  console.log({\n    str: info3.str\n  });\n}\nexport function Cipher(string, key) {\n  var cryptoInfo = crypto.AES.encrypt(JSON.stringify({\n    string: string\n  }), key).toString();\n  console.log({\n    cryptoInfo: cryptoInfo\n  });\n  var info2 = crypto.AES.decrypt(cryptoInfo, key).toString(crypto.enc.Utf8);\n  console.log({\n    info2: info2\n  });\n  var info3 = JSON.parse(info2);\n  console.log({\n    str: info3.str\n  });\n}","map":{"version":3,"names":["crypto","Decipher","text","key","cryptoInfo","AES","encrypt","JSON","stringify","string","toString","console","log","info2","decrypt","enc","Utf8","info3","parse","str","Cipher"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/middleware/crypto.ts"],"sourcesContent":[" import crypto from 'crypto-js';\n\nexport function Decipher(text, key) {\n  /*const bytes = CryptoJS.AES.decrypt(text, key);\n  const decipherText = bytes.toString(CryptoJS.enc.Utf8);\n  return decipherText;*/\n\n  const cryptoInfo = crypto.AES.encrypt(JSON.stringify({ string }), key).toString();\n\n    console.log({ cryptoInfo });\n    const info2 = crypto.AES.decrypt(cryptoInfo, key).toString(crypto.enc.Utf8);\n\n    console.log({ info2 });\n\n    const info3 = JSON.parse(info2);\n\n    console.log({ str: info3.str });\n}\n\n export function Cipher(string, key) {\n    const cryptoInfo = crypto.AES.encrypt(JSON.stringify({ string }), key).toString();\n\n    console.log({ cryptoInfo });\n    const info2 = crypto.AES.decrypt(cryptoInfo, key).toString(crypto.enc.Utf8);\n\n    console.log({ info2 });\n\n    const info3 = JSON.parse(info2);\n\n    console.log({ str: info3.str });\n }"],"mappings":"AAAC,OAAOA,MAAP,MAAmB,WAAnB;AAED,OAAO,SAASC,QAAT,CAAkBC,IAAlB,EAAwBC,GAAxB,EAA6B;EAKlC,IAAMC,UAAU,GAAGJ,MAAM,CAACK,GAAP,CAAWC,OAAX,CAAmBC,IAAI,CAACC,SAAL,CAAe;IAAEC,MAAM,EAANA;EAAF,CAAf,CAAnB,EAA+CN,GAA/C,EAAoDO,QAApD,EAAnB;EAEEC,OAAO,CAACC,GAAR,CAAY;IAAER,UAAU,EAAVA;EAAF,CAAZ;EACA,IAAMS,KAAK,GAAGb,MAAM,CAACK,GAAP,CAAWS,OAAX,CAAmBV,UAAnB,EAA+BD,GAA/B,EAAoCO,QAApC,CAA6CV,MAAM,CAACe,GAAP,CAAWC,IAAxD,CAAd;EAEAL,OAAO,CAACC,GAAR,CAAY;IAAEC,KAAK,EAALA;EAAF,CAAZ;EAEA,IAAMI,KAAK,GAAGV,IAAI,CAACW,KAAL,CAAWL,KAAX,CAAd;EAEAF,OAAO,CAACC,GAAR,CAAY;IAAEO,GAAG,EAAEF,KAAK,CAACE;EAAb,CAAZ;AACH;AAEA,OAAO,SAASC,MAAT,CAAgBX,MAAhB,EAAwBN,GAAxB,EAA6B;EACjC,IAAMC,UAAU,GAAGJ,MAAM,CAACK,GAAP,CAAWC,OAAX,CAAmBC,IAAI,CAACC,SAAL,CAAe;IAAEC,MAAM,EAANA;EAAF,CAAf,CAAnB,EAA+CN,GAA/C,EAAoDO,QAApD,EAAnB;EAEAC,OAAO,CAACC,GAAR,CAAY;IAAER,UAAU,EAAVA;EAAF,CAAZ;EACA,IAAMS,KAAK,GAAGb,MAAM,CAACK,GAAP,CAAWS,OAAX,CAAmBV,UAAnB,EAA+BD,GAA/B,EAAoCO,QAApC,CAA6CV,MAAM,CAACe,GAAP,CAAWC,IAAxD,CAAd;EAEAL,OAAO,CAACC,GAAR,CAAY;IAAEC,KAAK,EAALA;EAAF,CAAZ;EAEA,IAAMI,KAAK,GAAGV,IAAI,CAACW,KAAL,CAAWL,KAAX,CAAd;EAEAF,OAAO,CAACC,GAAR,CAAY;IAAEO,GAAG,EAAEF,KAAK,CAACE;EAAb,CAAZ;AACF"},"metadata":{},"sourceType":"module"}