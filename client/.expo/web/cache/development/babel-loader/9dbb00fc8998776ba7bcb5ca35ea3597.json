{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"size\", \"color\", \"borderRadius\", \"animate\", \"value\", \"limit\", \"style\", \"textStyle\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useEffect, useState } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { clamp, getRadius } from \"./helpers\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar minSize = 15;\nvar maxSize = 40;\nexport var Badge = function Badge(_ref) {\n  var _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 20 : _ref$size,\n    _ref$color = _ref.color,\n    color = _ref$color === void 0 ? '#ff3b30' : _ref$color,\n    _ref$borderRadius = _ref.borderRadius,\n    borderRadius = _ref$borderRadius === void 0 ? '50%' : _ref$borderRadius,\n    _ref$animate = _ref.animate,\n    animate = _ref$animate === void 0 ? true : _ref$animate,\n    value = _ref.value,\n    _ref$limit = _ref.limit,\n    limit = _ref$limit === void 0 ? 99 : _ref$limit,\n    style = _ref.style,\n    textStyle = _ref.textStyle,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var toValue = value ? 1 : 0;\n  var _useState = useState(function () {\n      return new Animated.Value(toValue);\n    }),\n    _useState2 = _slicedToArray(_useState, 1),\n    animatedValue = _useState2[0];\n  useEffect(function () {\n    Animated.spring(animatedValue, {\n      tension: 60,\n      friction: 6,\n      toValue: toValue,\n      useNativeDriver: true\n    }).start();\n  }, [animatedValue, toValue]);\n  if (!value) {\n    return null;\n  }\n  var content = null;\n  var height = styles.root.minHeight;\n  if (typeof value === 'number' || typeof value === 'string') {\n    height = clamp(Math.round(size), minSize, maxSize);\n    var fontSize = PixelRatio.roundToNearestPixel(height * 0.6);\n    var displayValue = typeof value === 'number' && limit && value > limit ? limit + \"+\" : value;\n    var textStyles = [{\n      fontSize: fontSize,\n      marginHorizontal: fontSize / 2\n    }, styles.text, textStyle];\n    content = _jsx(Text, {\n      style: textStyles,\n      numberOfLines: 1,\n      children: displayValue\n    });\n  }\n  var rootStyles = [{\n    height: height,\n    minWidth: height,\n    backgroundColor: color,\n    borderRadius: getRadius(borderRadius, height)\n  }, styles.root, style];\n  if (animate) {\n    rootStyles.push({\n      transform: [{\n        scale: animatedValue\n      }]\n    });\n  }\n  return _jsx(Animated.View, _objectSpread(_objectSpread({}, props), {}, {\n    style: rootStyles,\n    children: content\n  }));\n};\nvar styles = StyleSheet.create({\n  root: {\n    minHeight: 10,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '400',\n    fontFamily: 'System',\n    includeFontPadding: false,\n    textAlignVertical: 'center',\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","clamp","getRadius","minSize","maxSize","Badge","size","color","borderRadius","animate","value","limit","style","textStyle","props","toValue","Animated","Value","animatedValue","spring","tension","friction","useNativeDriver","start","content","height","styles","root","minHeight","Math","round","fontSize","PixelRatio","roundToNearestPixel","displayValue","textStyles","marginHorizontal","text","rootStyles","minWidth","backgroundColor","push","transform","scale","StyleSheet","create","alignSelf","alignItems","justifyContent","fontWeight","fontFamily","includeFontPadding","textAlignVertical"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/node_modules/react-native-userpic/src/Badge.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Animated,\n  PixelRatio,\n  StyleProp,\n  StyleSheet,\n  Text,\n  TextStyle,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\n\nimport { clamp, getRadius } from './helpers';\n\nconst minSize = 15;\nconst maxSize = 40;\n\nexport interface BadgeProps extends ViewProps {\n  size?: number;\n  color?: string;\n  borderRadius?: number | string;\n  animate?: boolean;\n  value?: number | boolean | string;\n  limit?: number | boolean;\n  style?: StyleProp<ViewStyle>;\n  textStyle?: StyleProp<TextStyle>;\n}\n\nexport const Badge: React.FC<BadgeProps> = ({\n  size = 20,\n  color = '#ff3b30',\n  borderRadius = '50%',\n  animate = true,\n  value,\n  limit = 99,\n  style,\n  textStyle,\n  ...props\n}) => {\n  const toValue = value ? 1 : 0;\n  const [animatedValue] = useState(() => new Animated.Value(toValue));\n\n  useEffect(() => {\n    Animated.spring(animatedValue, {\n      tension: 60,\n      friction: 6,\n      toValue: toValue,\n      useNativeDriver: true,\n    }).start();\n  }, [animatedValue, toValue]);\n\n  if (!value) {\n    return null;\n  }\n\n  let content = null;\n  let height = styles.root.minHeight;\n\n  if (typeof value === 'number' || typeof value === 'string') {\n    height = clamp(Math.round(size), minSize, maxSize);\n\n    const fontSize = PixelRatio.roundToNearestPixel(height * 0.6);\n    const displayValue = typeof value === 'number' && limit && value > limit ? `${limit}+` : value;\n    const textStyles = [\n      {\n        fontSize,\n        marginHorizontal: fontSize / 2,\n      },\n      styles.text,\n      textStyle,\n    ];\n\n    content = (\n      <Text style={textStyles} numberOfLines={1}>\n        {displayValue}\n      </Text>\n    );\n  }\n\n  const rootStyles = [\n    {\n      height,\n      minWidth: height,\n      backgroundColor: color,\n      borderRadius: getRadius(borderRadius, height),\n    },\n    styles.root,\n    style,\n  ];\n\n  if (animate) {\n    rootStyles.push({ transform: [{ scale: animatedValue as any }] });\n  }\n\n  return (\n    <Animated.View {...props} style={rootStyles}>\n      {content}\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  root: {\n    minHeight: 10,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    color: '#fff',\n    fontWeight: '400',\n    fontFamily: 'System',\n    includeFontPadding: false,\n    textAlignVertical: 'center',\n    backgroundColor: 'transparent',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}