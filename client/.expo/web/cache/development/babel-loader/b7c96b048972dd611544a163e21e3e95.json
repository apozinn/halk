{"ast":null,"code":"import React, { useContext, useEffect } from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { Text } from \"../../src/components/Themed\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport NewChatButton from \"../../src/components/newChat\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Chats(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      logged = _useContext.logged,\n      updateUser = _useContext.updateUser;\n\n  var _useContext2 = useContext(ChatsContext),\n      chats = _useContext2.chats;\n\n  useEffect(function () {}, [chats, user]);\n\n  function ChatContainer(chat) {\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var lastMessage = chat.messages[chat.messages.length - 1];\n    var unredMessages = chat.messages.filter(function (m) {\n      return m.unred;\n    });\n    return _jsxs(Pressable, {\n      style: function style(_ref2) {\n        var pressed = _ref2.pressed;\n        return [styles.chat, {\n          backgroundColor: pressed ? \"#222\" : \"transparent\"\n        }];\n      },\n      children: [_jsxs(View, {\n        style: styles.leftContent,\n        children: [_jsx(Image, {\n          source: {\n            uri: chat.user.profile.avatar\n          },\n          style: styles.userIcon\n        }), _jsxs(View, {\n          style: {\n            justifyContent: \"center\"\n          },\n          children: [_jsx(Text, {\n            style: styles.username,\n            children: chat.user.profile.name\n          }), _jsxs(Text, {\n            style: styles.messageContent,\n            children: [lastMessage.user.id === user.id ? _jsx(Ionicons, {\n              name: \"checkmark-done\",\n              size: 24,\n              color: \"#222\"\n            }) : _jsx(_Fragment, {}), lastMessage.content]\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.rightContent,\n        children: [_jsx(Text, {\n          style: styles.messageDate,\n          children: lastMessage.createdAt\n        }), !unredMessages.length ? _jsx(_Fragment, {}) : _jsx(Text, {\n          style: styles.unread,\n          children: unredMessages.length\n        })]\n      })]\n    }, index);\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [!logged ? _jsx(_Fragment, {\n      children: navigation.navigate(\"Welcome\")\n    }) : _jsx(ScrollView, {\n      style: {\n        padding: 5\n      },\n      children: !chats.length ? _jsx(NewChat, {\n        chat: new Socket().sendHalkMessage()\n      }) : _jsx(_Fragment, {\n        children: chats.map(function (chat, index) {\n          return _jsx(NewChat, {\n            chat: chat,\n            index: index\n          });\n        })\n      })\n    }), _jsx(NewChatButton, {\n      navigation: navigation\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  chat: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    padding: 5\n  },\n  leftContent: {\n    flexDirection: \"row\"\n  },\n  userIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 100,\n    marginRight: 10\n  },\n  username: {},\n  messageContent: {\n    fontSize: 13,\n    opacity: 0.7\n  },\n  rightContent: {\n    alignItems: \"center\"\n  },\n  messageDate: {\n    fontSize: 11,\n    marginBottom: 3\n  },\n  unread: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    minWidth: 15,\n    minHeight: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"names":["React","useContext","useEffect","UserContext","ChatsContext","Text","Ionicons","NewChatButton","Chats","navigation","user","logged","updateUser","chats","ChatContainer","chat","index","lastMessage","messages","length","unredMessages","filter","m","unred","pressed","styles","backgroundColor","leftContent","uri","profile","avatar","userIcon","justifyContent","username","name","messageContent","id","content","rightContent","messageDate","createdAt","unread","container","navigate","padding","Socket","sendHalkMessage","map","StyleSheet","create","flex","flexDirection","alignItems","borderRadius","width","height","marginRight","fontSize","opacity","marginBottom","minWidth","minHeight","textAlign"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/app/chats.tsx"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { Pressable, View, StyleSheet, ScrollView, Image } from \"react-native\";\nimport { RootTabScreenProps } from \"../../types\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { Text } from \"../../src/components/Themed\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport NewChatButton from '../../src/components/newChat';\n\nexport default function Chats({ navigation }: RootTabScreenProps<\"Chats\">) {\n  const { user, logged, updateUser } = useContext(UserContext);\n  const { chats } = useContext(ChatsContext);\n\n  useEffect(() => {}, [chats, user]);\n\n\n  function ChatContainer(chat, index=0) {\n    const lastMessage = chat.messages[chat.messages.length - 1];\n    const unredMessages = chat.messages.filter((m) => m.unred);\n\n    return (\n      <Pressable\n        style={({ pressed }) => [\n          styles.chat,\n          { backgroundColor: pressed ? \"#222\" : \"transparent\" },\n        ]}\n        key={index}\n      >\n        <View style={styles.leftContent}>\n          <Image\n            source={{ uri: chat.user.profile.avatar }}\n            style={styles.userIcon}\n          />\n          <View style={{ justifyContent: \"center\" }}>\n            <Text style={styles.username}>\n              {chat.user.profile.name}\n            </Text>\n            <Text style={styles.messageContent}>\n              {lastMessage.user.id === user.id ? (\n                <Ionicons\n                  name=\"checkmark-done\"\n                  size={24}\n                  color=\"#222\"\n                />\n              ) : (\n                <></>\n              )}\n              {lastMessage.content}\n            </Text>\n          </View>\n        </View>\n        <View style={styles.rightContent}>\n          <Text style={styles.messageDate}>\n            {lastMessage.createdAt}\n          </Text>\n          {!unredMessages.length ? (\n            <></>\n          ) : (\n            <Text style={styles.unread}>\n              {unredMessages.length}\n            </Text>\n          )}\n        </View>\n      </Pressable>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      {!logged ? (\n        <>{navigation.navigate(\"Welcome\")}</>\n      ) : (\n        <ScrollView style={{ padding: 5 }}>\n\n        {!chats.length ? <NewChat chat={new Socket().sendHalkMessage()}/> : (\n          <>\n            {chats.map((chat, index) => <NewChat chat={chat} index={index}/>)}\n          </>\n        )}\n\n        </ScrollView>\n      )}\n      <NewChatButton navigation={navigation}/>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  chat: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    padding: 5,\n  },\n  leftContent: {\n    flexDirection: \"row\",\n  },\n  userIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 100,\n    marginRight: 10,\n  },\n  username: {},\n  messageContent: {\n    fontSize: 13,\n    opacity: 0.7,\n  },\n  rightContent: {\n    alignItems: \"center\",\n  },\n  messageDate: {\n    fontSize: 11,\n    marginBottom: 3,\n  },\n  unread: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    minWidth: 15,\n    minHeight: 15,\n    textAlign: \"center\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}