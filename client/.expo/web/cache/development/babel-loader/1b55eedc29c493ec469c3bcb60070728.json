{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useMemo, useRef } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar findIndex = function findIndex(_ref, map) {\n  var locationX = _ref.locationX,\n    locationY = _ref.locationY;\n  for (var _ref2 of Object.entries(map)) {\n    var _ref3 = _slicedToArray(_ref2, 2);\n    var index = _ref3[0];\n    var _ref3$ = _ref3[1];\n    var x = _ref3$.x;\n    var y = _ref3$.y;\n    var xEnd = _ref3$.xEnd;\n    var yEnd = _ref3$.yEnd;\n    if (x < locationX && locationX < xEnd && y < locationY && locationY < yEnd) {\n      return parseInt(index, 10);\n    }\n  }\n  return -1;\n};\nexport var useClearByFocusCell = function useClearByFocusCell(options) {\n  var valueRef = useRef(options);\n  var cellsLayouts = useRef({});\n  valueRef.current = options;\n  var clearCodeByCoords = function clearCodeByCoords(coords) {\n    var index = findIndex(coords, cellsLayouts.current);\n    if (index !== -1) {\n      var _valueRef$current = valueRef.current,\n        value = _valueRef$current.value,\n        setValue = _valueRef$current.setValue;\n      var text = (value || '').slice(0, index);\n      setValue(text);\n    }\n  };\n  var getCellOnLayoutHandler = function getCellOnLayoutHandler(index) {\n    return function (event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n        width = _event$nativeEvent$la.width,\n        height = _event$nativeEvent$la.height,\n        x = _event$nativeEvent$la.x,\n        y = _event$nativeEvent$la.y;\n      cellsLayouts.current[\"\" + index] = {\n        x: x,\n        xEnd: x + width,\n        y: y,\n        yEnd: y + height\n      };\n    };\n  };\n  var onPressOut = function onPressOut(event) {\n    return clearCodeByCoords(event.nativeEvent);\n  };\n  var onClick = function onClick(event) {\n    var _event$target$getClie = event.target.getClientRects(),\n      _event$target$getClie2 = _slicedToArray(_event$target$getClie, 1),\n      offset = _event$target$getClie2[0];\n    var locationX = event.clientX - offset.left;\n    var locationY = event.clientY - offset.top;\n    clearCodeByCoords({\n      locationX: locationX,\n      locationY: locationY\n    });\n  };\n  return [\n  useMemo(function () {\n    return Platform.select({\n      web: {\n        onClick: onClick\n      },\n      default: {\n        onPressOut: onPressOut\n      }\n    });\n  }, []), getCellOnLayoutHandler];\n};","map":{"version":3,"names":["useMemo","useRef","findIndex","map","locationX","locationY","Object","entries","index","x","y","xEnd","yEnd","parseInt","useClearByFocusCell","options","valueRef","cellsLayouts","current","clearCodeByCoords","coords","value","setValue","text","slice","getCellOnLayoutHandler","event","nativeEvent","layout","width","height","onPressOut","onClick","target","getClientRects","offset","clientX","left","clientY","top","Platform","select","web","default"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/node_modules/react-native-confirmation-code-field/esm/useClearByFocusCell.js"],"sourcesContent":["import {useMemo, useRef} from 'react';\nimport {Platform} from 'react-native';\nconst findIndex = ({locationX, locationY}, map) => {\n  for (const [index, {x, y, xEnd, yEnd}] of Object.entries(map)) {\n    if (\n      x < locationX &&\n      locationX < xEnd &&\n      y < locationY &&\n      locationY < yEnd\n    ) {\n      return parseInt(index, 10);\n    }\n  }\n  return -1;\n};\nexport const useClearByFocusCell = (options) => {\n  const valueRef = useRef(options);\n  const cellsLayouts = useRef({});\n  valueRef.current = options;\n  const clearCodeByCoords = (coords) => {\n    const index = findIndex(coords, cellsLayouts.current);\n    if (index !== -1) {\n      const {value, setValue} = valueRef.current;\n      const text = (value || '').slice(0, index);\n      setValue(text);\n    }\n  };\n  const getCellOnLayoutHandler = (index) => (event) => {\n    const {width, height, x, y} = event.nativeEvent.layout;\n    cellsLayouts.current[`${index}`] = {\n      x,\n      xEnd: x + width,\n      y,\n      yEnd: y + height,\n    };\n  };\n  const onPressOut = (event) => clearCodeByCoords(event.nativeEvent);\n  // For support react-native-web\n  const onClick = (event) => {\n    // @ts-expect-error: not types for getClientRects\n    const [offset] = event.target.getClientRects();\n    const locationX = event.clientX - offset.left;\n    const locationY = event.clientY - offset.top;\n    clearCodeByCoords({locationX, locationY});\n  };\n  return [\n    // @ts-expect-error: for web support\n    useMemo(() => Platform.select({web: {onClick}, default: {onPressOut}}), []),\n    getCellOnLayoutHandler,\n  ];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}