{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport io from \"socket.io-client\";\nexport var SocketController = function () {\n  function SocketController(props) {\n    _classCallCheck(this, SocketController);\n\n    this.user = props.user;\n    this.updateUser = props.updateUser;\n    this.chats = props.chats;\n    this.updateChats = props.updateChats;\n    this.socket = props.socket;\n    this.loadEvents();\n  }\n\n  _createClass(SocketController, [{\n    key: \"loadEvents\",\n    value: function loadEvents() {\n      var _this = this;\n\n      this.socket.on(\"receiveMessage\", function (msg) {\n        console.log(msg.chat.id);\n\n        var chat = _this.chats.filter(function (c) {\n          return c.id === msg.chat.id;\n        })[0];\n\n        if (chat) {\n          chat.messages.push(msg);\n          console.log(chat);\n\n          _this.updateChats({\n            chats: _this.chats\n          });\n        }\n      });\n      this.socket.on(\"newChat\", function (_ref) {\n        var newChat = _ref.newChat;\n\n        _this.chats.push(newChat);\n\n        _this.updateChats({\n          chats: _this.chats\n        });\n      });\n      this.socket.on(\"readMessage\", function (payload) {\n        var chat = _this.chats.filter(function (c) {\n          return c.id === payload.chat.id;\n        })[0];\n\n        if (chat) {\n          chat.messages.filter(function (m) {\n            return m.read === false;\n          }).map(function (m) {\n            return m.read = true;\n          });\n\n          _this.updateChats({\n            chats: _this.chats\n          });\n        }\n      });\n    }\n  }], [{\n    key: \"sendHalkMessage\",\n    value: function sendHalkMessage() {\n      var timeNow = new Date().getTime();\n      var halkUser = {\n        id: \"0\",\n        phone: \"+00\",\n        profile: {\n          name: \"Halk\",\n          username: \"Halk\",\n          avatar: require(\"../../assets/images/icon.png\"),\n          bio: \"Official account of the team Halk\"\n        }\n      };\n      var halkChat = {\n        id: \"a384b2bc-1a3b-49d3-bdf5-1be72350c494\",\n        user: halkUser,\n        key: \"0000\",\n        messages: [{\n          author: halkUser,\n          content: \"Welcome to halk!\",\n          createdAt: timeNow,\n          id: \"\" + timeNow + Math.floor(Math.random() * (100000000 - 1000000 + 1) + 1000000),\n          read: false\n        }]\n      };\n      return halkChat;\n    }\n  }]);\n\n  return SocketController;\n}();\nexport function CreateSocketConnection(_ref2) {\n  var userId = _ref2.userId;\n  var socket = io(\"http://localhost:3000\", {\n    transports: [\"websocket\"],\n    auth: {\n      userId: userId\n    }\n  });\n  return socket;\n}","map":{"version":3,"names":["io","SocketController","props","user","updateUser","chats","updateChats","socket","loadEvents","on","msg","console","log","chat","id","filter","c","messages","push","newChat","payload","m","read","map","timeNow","Date","getTime","halkUser","phone","profile","name","username","avatar","require","bio","halkChat","key","author","content","createdAt","Math","floor","random","CreateSocketConnection","userId","transports","auth"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/src/utils/socket.ts"],"sourcesContent":["import io from \"socket.io-client\";\nimport * as uuid from \"uuid\";\n\nexport class SocketController {\n  constructor(props) {\n    this.user = props.user;\n    this.updateUser = props.updateUser;\n    this.chats = props.chats;\n    this.updateChats = props.updateChats;\n    this.socket = props.socket;\n\n    this.loadEvents();\n  }\n\n  public loadEvents() {\n    this.socket.on(\"receiveMessage\", (msg) => {\n      console.log(msg.chat.id);\n\n      const chat = this.chats.filter((c) => c.id === msg.chat.id)[0];\n\n      if(chat) {\n        chat.messages.push(msg);\n        console.log(chat);\n        this.updateChats({ chats: this.chats });\n      }\n    });\n\n    this.socket.on(\"newChat\", ({ newChat}) => {\n      this.chats.push(newChat);\n      this.updateChats({ chats: this.chats });\n    });\n\n    this.socket.on(\"readMessage\", (payload) => {\n      const chat = this.chats.filter((c) => c.id === payload.chat.id)[0];\n      if(chat) {\n        chat.messages.filter((m) => m.read === false).map((m) => m.read = true);\n        this.updateChats({ chats: this.chats });\n      }\n    })\n  }\n\n  static sendHalkMessage() {\n    const timeNow = new Date().getTime();\n    const halkUser = {\n      id: \"0\",\n      phone: \"+00\",\n      profile: {\n        name: \"Halk\",\n        username: \"Halk\",\n        avatar: require(\"../../assets/images/icon.png\"),\n        bio: \"Official account of the team Halk\",\n      },\n    };\n\n    const halkChat = {\n      id: \"a384b2bc-1a3b-49d3-bdf5-1be72350c494\",\n      user: halkUser,\n      key: \"0000\",\n      messages: [\n        {\n          author: halkUser,\n          content: \"Welcome to halk!\",\n          createdAt: timeNow,\n          id: `${timeNow}${Math.floor(\n            Math.random() * (100000000 - 1000000 + 1) + 1000000\n          )}`,\n          read: false,\n        },\n      ],\n    };\n\n    return halkChat;\n  }\n}\n\nexport function CreateSocketConnection({ userId }) {\n  const socket = io(\"http://localhost:3000\", {\n    transports: [\"websocket\"],\n    auth: {\n      userId,\n    },\n  });\n\n  return socket;\n}\n"],"mappings":";;AAAA,OAAOA,EAAP,MAAe,kBAAf;AAGA,WAAaC,gBAAb;EACE,0BAAYC,KAAZ,EAAmB;IAAA;;IACjB,KAAKC,IAAL,GAAYD,KAAK,CAACC,IAAlB;IACA,KAAKC,UAAL,GAAkBF,KAAK,CAACE,UAAxB;IACA,KAAKC,KAAL,GAAaH,KAAK,CAACG,KAAnB;IACA,KAAKC,WAAL,GAAmBJ,KAAK,CAACI,WAAzB;IACA,KAAKC,MAAL,GAAcL,KAAK,CAACK,MAApB;IAEA,KAAKC,UAAL;EACD;;EATH;IAAA;IAAA,OAWE,sBAAoB;MAAA;;MAClB,KAAKD,MAAL,CAAYE,EAAZ,CAAe,gBAAf,EAAiC,UAACC,GAAD,EAAS;QACxCC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,EAArB;;QAEA,IAAMD,IAAI,GAAG,KAAI,CAACR,KAAL,CAAWU,MAAX,CAAkB,UAACC,CAAD;UAAA,OAAOA,CAAC,CAACF,EAAF,KAASJ,GAAG,CAACG,IAAJ,CAASC,EAAzB;QAAA,CAAlB,EAA+C,CAA/C,CAAb;;QAEA,IAAGD,IAAH,EAAS;UACPA,IAAI,CAACI,QAAL,CAAcC,IAAd,CAAmBR,GAAnB;UACAC,OAAO,CAACC,GAAR,CAAYC,IAAZ;;UACA,KAAI,CAACP,WAAL,CAAiB;YAAED,KAAK,EAAE,KAAI,CAACA;UAAd,CAAjB;QACD;MACF,CAVD;MAYA,KAAKE,MAAL,CAAYE,EAAZ,CAAe,SAAf,EAA0B,gBAAgB;QAAA,IAAbU,OAAa,QAAbA,OAAa;;QACxC,KAAI,CAACd,KAAL,CAAWa,IAAX,CAAgBC,OAAhB;;QACA,KAAI,CAACb,WAAL,CAAiB;UAAED,KAAK,EAAE,KAAI,CAACA;QAAd,CAAjB;MACD,CAHD;MAKA,KAAKE,MAAL,CAAYE,EAAZ,CAAe,aAAf,EAA8B,UAACW,OAAD,EAAa;QACzC,IAAMP,IAAI,GAAG,KAAI,CAACR,KAAL,CAAWU,MAAX,CAAkB,UAACC,CAAD;UAAA,OAAOA,CAAC,CAACF,EAAF,KAASM,OAAO,CAACP,IAAR,CAAaC,EAA7B;QAAA,CAAlB,EAAmD,CAAnD,CAAb;;QACA,IAAGD,IAAH,EAAS;UACPA,IAAI,CAACI,QAAL,CAAcF,MAAd,CAAqB,UAACM,CAAD;YAAA,OAAOA,CAAC,CAACC,IAAF,KAAW,KAAlB;UAAA,CAArB,EAA8CC,GAA9C,CAAkD,UAACF,CAAD;YAAA,OAAOA,CAAC,CAACC,IAAF,GAAS,IAAhB;UAAA,CAAlD;;UACA,KAAI,CAAChB,WAAL,CAAiB;YAAED,KAAK,EAAE,KAAI,CAACA;UAAd,CAAjB;QACD;MACF,CAND;IAOD;EApCH;IAAA;IAAA,OAsCE,2BAAyB;MACvB,IAAMmB,OAAO,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAhB;MACA,IAAMC,QAAQ,GAAG;QACfb,EAAE,EAAE,GADW;QAEfc,KAAK,EAAE,KAFQ;QAGfC,OAAO,EAAE;UACPC,IAAI,EAAE,MADC;UAEPC,QAAQ,EAAE,MAFH;UAGPC,MAAM,EAAEC,OAAO,gCAHR;UAIPC,GAAG,EAAE;QAJE;MAHM,CAAjB;MAWA,IAAMC,QAAQ,GAAG;QACfrB,EAAE,EAAE,sCADW;QAEfX,IAAI,EAAEwB,QAFS;QAGfS,GAAG,EAAE,MAHU;QAIfnB,QAAQ,EAAE,CACR;UACEoB,MAAM,EAAEV,QADV;UAEEW,OAAO,EAAE,kBAFX;UAGEC,SAAS,EAAEf,OAHb;UAIEV,EAAE,OAAKU,OAAL,GAAegB,IAAI,CAACC,KAAL,CACfD,IAAI,CAACE,MAAL,MAAiB,YAAY,OAAZ,GAAsB,CAAvC,IAA4C,OAD7B,CAJnB;UAOEpB,IAAI,EAAE;QAPR,CADQ;MAJK,CAAjB;MAiBA,OAAOa,QAAP;IACD;EArEH;;EAAA;AAAA;AAwEA,OAAO,SAASQ,sBAAT,QAA4C;EAAA,IAAVC,MAAU,SAAVA,MAAU;EACjD,IAAMrC,MAAM,GAAGP,EAAE,CAAC,uBAAD,EAA0B;IACzC6C,UAAU,EAAE,CAAC,WAAD,CAD6B;IAEzCC,IAAI,EAAE;MACJF,MAAM,EAANA;IADI;EAFmC,CAA1B,CAAjB;EAOA,OAAOrC,MAAP;AACD"},"metadata":{},"sourceType":"module"}