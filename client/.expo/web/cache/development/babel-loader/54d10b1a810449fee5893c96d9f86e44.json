{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput } from \"../../src/components/Themed\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { SocketContext } from \"../../src/contexts/socket\";\nimport { SocketController } from \"../../src/utils/socket\";\nimport { getColors } from \"../../constants/Colors\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar badgeProps = {\n  size: 25,\n  borderRadius: 50,\n  animate: true\n};\nexport default function Chat(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var _useContext2 = useContext(ChatsContext),\n      chats = _useContext2.chats,\n      updateChats = _useContext2.updateChats;\n\n  var socket = useContext(SocketContext);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      chat = _useState6[0],\n      setChat = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      online = _useState8[0],\n      setOnline = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      userTyping = _useState10[0],\n      setUserTyping = _useState10[1];\n\n  var colors = getColors();\n  var scrollViewRef = useRef();\n  useEffect(function () {\n    if (!user || !chats || !socket) return;\n    var chatId = route.params.id;\n\n    if (chatId) {\n      var thisChat = chats.filter(function (c) {\n        return c.id === chatId;\n      })[0];\n\n      if (thisChat) {\n        setChat(thisChat);\n      } else setChat(new SocketController.sendHalkMessage());\n    } else navigation.goBack();\n\n    socket.on(\"receiveMessage\", function (msg) {\n      console.log(msg);\n    });\n  }, []);\n  useEffect(function () {\n    if (chat && socket) {\n      new SocketController.joinedChat({\n        chats: chats,\n        chat: chat,\n        socket: socket\n      });\n      socket.on(\"receiveIfUserIsOnline\", function (callback) {\n        return setOnline(callback);\n      });\n    }\n  }, [chat]);\n\n  function sendMessage() {\n    new SocketController.sendMessage({\n      chats: chats,\n      chat: chat,\n      socket: socket\n    });\n  }\n\n  return _jsx(View, {\n    children: !chat ? _jsx(_Fragment, {}) : _jsxs(_Fragment, {\n      children: [_jsx(TextInput, {\n        placeholder: \"mensagem\",\n        onSubmitEditing: function onSubmitEditing() {\n          return sendMessage();\n        }\n      }), chat.messages.map(function (message) {\n        console.log(message);\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","useContext","useRef","TextInput","UserContext","ChatsContext","SocketContext","SocketController","getColors","badgeProps","size","borderRadius","animate","Chat","navigation","route","user","chats","updateChats","socket","messages","setMessages","text","setText","chat","setChat","online","setOnline","userTyping","setUserTyping","colors","scrollViewRef","chatId","params","id","thisChat","filter","c","sendHalkMessage","goBack","on","msg","console","log","joinedChat","callback","sendMessage","map","message"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/chat/chat.tsx"],"sourcesContent":["import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport {\n  Button,\n  StatusBar,\n  StyleSheet,\n  View,\n  Image,\n  Pressable,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport {\n  AntDesign,\n  Ionicons,\n  Feather,\n  FontAwesome,\n  MaterialIcons,\n  Fontisto,\n} from \"@expo/vector-icons\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { SocketContext } from \"../../src/contexts/socket\";\nimport { SocketController } from \"../../src/utils/socket\";\nimport { getColors } from \"../../constants/Colors\";\nimport { Cipher, Decipher } from \"../../middleware/crypto\";\nimport { Userpic } from \"react-native-userpic\";\n\nconst badgeProps = {\n  size: 25,\n  borderRadius: 50,\n  animate: true,\n};\n\nexport default function Chat({ navigation, route }) {\n  const { user } = useContext(UserContext);\n  const { chats, updateChats } = useContext(ChatsContext);\n  const socket = useContext(SocketContext);\n\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [chat, setChat] = useState();\n  const [online, setOnline] = useState(false);\n  const [userTyping, setUserTyping] = useState(false);\n\n  const colors = getColors();\n  const scrollViewRef = useRef();\n\n  useEffect(() => {\n    if (!user || !chats || !socket) return;\n\n    const chatId = route.params.id;\n    if (chatId) {\n      var thisChat = chats.filter((c) => c.id === chatId)[0];\n      if (thisChat) {\n        setChat(thisChat);\n      } else setChat(new SocketController.sendHalkMessage());\n    } else navigation.goBack();\n\n    socket.on(\"receiveMessage\", (msg) => {\n      console.log(msg);\n    });\n  }, []);\n\n  useEffect(() => {\n    if (chat && socket) {\n      new SocketController.joinedChat({ chats, chat, socket });\n      socket.on(\"receiveIfUserIsOnline\", (callback) => setOnline(callback));\n    }\n  }, [chat]);\n\n  function sendMessage() {\n    new SocketController.sendMessage({ chats, chat, socket });\n  }\n\n  return (\n    <View>\n    {!chat ? <></> : (<>\n      <TextInput placeholder=\"mensagem\" onSubmitEditing={() => sendMessage()} />\n      {chat.messages.map((message) => {\n        console.log(message);\n      })}\n    </>)}\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}