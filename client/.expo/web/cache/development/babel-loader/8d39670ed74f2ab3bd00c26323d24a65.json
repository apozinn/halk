{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Chat(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      chat = _useState2[0],\n      setChat = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      socket = _useState4[0],\n      setSocket = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messages = _useState6[0],\n      setMessages = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      text = _useState8[0],\n      setText = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      value = _useState10[0],\n      setValue = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      name = _useState12[0],\n      setName = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      ready = _useState14[0],\n      setReady = _useState14[1];\n\n  var _useState15 = useState(),\n      _useState16 = _slicedToArray(_useState15, 2),\n      otherUser = _useState16[0],\n      setOtherUser = _useState16[1];\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var _useContext2 = useContext(ChatsContext),\n      chats = _useContext2.chats;\n\n  useEffect(function () {\n    var chatId = route.params.id;\n\n    if (chatId) {\n      if (chatId === '0' || !chats.length) {\n        setChat({\n          id: '0',\n          user: {\n            id: '00000000000000000000000',\n            phone: '000000000000000',\n            profile: {\n              name: 'Halk',\n              username: 'halk',\n              avatar: '',\n              bio: ''\n            }\n          },\n          messages: [{\n            content: 'Welcome to halk',\n            author: {\n              id: '00000000000000000000000',\n              phone: '000000000000000',\n              profile: {\n                name: 'Halk',\n                username: 'halk',\n                avatar: '',\n                bio: ''\n              }\n            }\n          }]\n        });\n      } else {\n        var thisChat = chats.filter(function (c) {\n          return c.id === chatId;\n        });\n\n        if (thisChat) {\n          setChat(thisChat);\n        } else navigation.navigate(\"Root\");\n      }\n    } else navigation.navigate(\"Root\");\n  }, [user]);\n  useEffect(function () {\n    return console.log(chat);\n  }, [chat]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.topContainer\n    }), _jsx(View, {\n      style: styles.messageContainer\n    }), _jsx(View, {\n      style: styles.bottomBar\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight\n  },\n  topContainer: {},\n  leftContent: {},\n  rightContent: {},\n  otherUserInfo: {},\n  otherUserName: {},\n  messageContainer: {},\n  bottomBar: {},\n  messageCard: {\n    borderWidth: 1,\n    borderColor: \"#222\"\n  },\n  myMessage: {\n    backgroundColor: \"blue\"\n  },\n  otherMessage: {\n    backgroundColor: \"gray\"\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","useContext","UserContext","ChatsContext","Chat","navigation","route","chat","setChat","socket","setSocket","messages","setMessages","text","setText","value","setValue","name","setName","ready","setReady","otherUser","setOtherUser","user","chats","chatId","params","id","length","phone","profile","username","avatar","bio","content","author","thisChat","filter","c","navigate","console","log","styles","container","topContainer","messageContainer","bottomBar","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","leftContent","rightContent","otherUserInfo","otherUserName","messageCard","borderWidth","borderColor","myMessage","backgroundColor","otherMessage"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/chat/chat.tsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { Button, StatusBar, StyleSheet, View } from \"react-native\";\nimport { AntDesign, Ionicons, Feather, FontAwesome } from \"@expo/vector-icons\";\nimport { RootStackScreenProps } from \"../../types\";\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport Socket from \"../../src/utils/socket\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\n\nexport default function Chat({ navigation, route }: RootStackScreenProps<\"Chat\">) {\n  const [chat, setChat] = useState();\n  const [socket, setSocket] = useState();\n  const [messages, setMessages] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [ready, setReady] = useState(false);\n  const [otherUser, setOtherUser] = useState();\n\n  const { user } = useContext(UserContext);\n  const { chats } =  useContext(ChatsContext);\n\n  useEffect(() => {\n    const chatId = route.params.id;\n\n    if(chatId) {\n      if(chatId === '0' || !chats.length) {\n        setChat({\n          id: '0',\n          user: {\n            id: '00000000000000000000000',\n            phone: '000000000000000',\n            profile: {\n              name: 'Halk',\n              username: 'halk',\n              avatar: '',\n              bio: '',\n            }\n          },\n          messages: [\n            {\n              content: 'Welcome to halk',\n              author: {\n                id: '00000000000000000000000',\n                phone: '000000000000000',\n                profile: {\n                  name: 'Halk',\n                  username: 'halk',\n                  avatar: '',\n                  bio: '',\n                }\n              },\n            }\n          ],\n        });\n      } else {\n        const thisChat = chats.filter(c => c.id === chatId);\n        if(thisChat) {\n          setChat(thisChat);\n        } else navigation.navigate(\"Root\");\n      }\n    } else navigation.navigate(\"Root\");\n  }, [user]);\n\n  useEffect(() => console.log(chat), [chat]);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.topContainer}></View>\n\n      <View style={styles.messageContainer}></View>\n\n      <View style={styles.bottomBar}></View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n  },\n  topContainer: {},\n  leftContent: {},\n  rightContent: {},\n  otherUserInfo: {},\n  otherUserName: {},\n  messageContainer: {},\n  bottomBar: {},\n  messageCard: {\n    borderWidth: 1,\n    borderColor: \"#222\",\n  },\n  myMessage: {\n    backgroundColor: \"blue\",\n  },\n  otherMessage: {\n    backgroundColor: \"gray\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}