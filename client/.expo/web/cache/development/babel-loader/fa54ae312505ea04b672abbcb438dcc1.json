{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, memo } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Flag } from \"./Flag\";\nimport { useContext } from \"./CountryContext\";\nimport { CountryText } from \"./CountryText\";\nimport { useTheme } from \"./CountryTheme\";\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start'\n  },\n  containerWithEmoji: {\n    marginTop: 0\n  },\n  containerWithoutEmoji: {\n    marginTop: 5\n  },\n  flagWithSomethingContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center'\n  },\n  something: {\n    fontSize: 16\n  }\n});\n\nvar FlagText = function FlagText(props) {\n  return React.createElement(CountryText, Object.assign({}, props, {\n    style: styles.something\n  }));\n};\n\nvar FlagWithSomething = memo(function (_ref) {\n  var countryCode = _ref.countryCode,\n      withEmoji = _ref.withEmoji,\n      withCountryNameButton = _ref.withCountryNameButton,\n      withCurrencyButton = _ref.withCurrencyButton,\n      withCallingCodeButton = _ref.withCallingCodeButton,\n      withFlagButton = _ref.withFlagButton,\n      flagSize = _ref.flagSize,\n      placeholder = _ref.placeholder;\n\n  var _useContext = useContext(),\n      translation = _useContext.translation,\n      getCountryInfoAsync = _useContext.getCountryInfoAsync;\n\n  var _useState = useState({\n    countryName: '',\n    currency: '',\n    callingCode: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var countryName = state.countryName,\n      currency = state.currency,\n      callingCode = state.callingCode;\n  useEffect(function () {\n    if (countryCode) {\n      getCountryInfoAsync({\n        countryCode: countryCode,\n        translation: translation\n      }).then(setState).catch(console.warn);\n    }\n  }, [countryCode, withCountryNameButton, withCurrencyButton, withCallingCodeButton]);\n  return React.createElement(View, {\n    style: styles.flagWithSomethingContainer\n  }, countryCode ? React.createElement(Flag, Object.assign({}, {\n    withEmoji: withEmoji,\n    countryCode: countryCode,\n    withFlagButton: withFlagButton,\n    flagSize: flagSize\n  })) : React.createElement(FlagText, null, placeholder), withCountryNameButton && countryName ? React.createElement(FlagText, null, countryName + ' ') : null, withCurrencyButton && currency ? React.createElement(FlagText, null, \"(\" + currency + \") \") : null, withCallingCodeButton && callingCode ? React.createElement(FlagText, null, \"+\" + callingCode) : null);\n});\nexport var FlagButton = function FlagButton(_ref2) {\n  var withEmoji = _ref2.withEmoji,\n      withCountryNameButton = _ref2.withCountryNameButton,\n      withCallingCodeButton = _ref2.withCallingCodeButton,\n      withCurrencyButton = _ref2.withCurrencyButton,\n      withFlagButton = _ref2.withFlagButton,\n      countryCode = _ref2.countryCode,\n      containerButtonStyle = _ref2.containerButtonStyle,\n      onOpen = _ref2.onOpen,\n      placeholder = _ref2.placeholder;\n\n  var _useTheme = useTheme(),\n      flagSize = _useTheme.flagSizeButton;\n\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.7,\n    onPress: onOpen\n  }, React.createElement(View, {\n    style: [styles.container, withEmoji ? styles.containerWithEmoji : styles.containerWithoutEmoji, containerButtonStyle]\n  }, React.createElement(FlagWithSomething, Object.assign({}, {\n    countryCode: countryCode,\n    withEmoji: withEmoji,\n    withCountryNameButton: withCountryNameButton,\n    withCallingCodeButton: withCallingCodeButton,\n    withCurrencyButton: withCurrencyButton,\n    withFlagButton: withFlagButton,\n    flagSize: flagSize,\n    placeholder: placeholder\n  }))));\n};\nFlagButton.defaultProps = {\n  withEmoji: true,\n  withCountryNameButton: false,\n  withCallingCodeButton: false,\n  withCurrencyButton: false,\n  withFlagButton: true\n};","map":{"version":3,"mappings":"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","names":["React","useState","useEffect","memo","Flag","useContext","CountryText","useTheme","styles","StyleSheet","create","container","alignItems","justifyContent","containerWithEmoji","marginTop","containerWithoutEmoji","flagWithSomethingContainer","flexDirection","flexWrap","something","fontSize","FlagText","props","Object","style","FlagWithSomething","countryCode","withEmoji","withCountryNameButton","withCurrencyButton","withCallingCodeButton","withFlagButton","flagSize","placeholder","translation","getCountryInfoAsync","countryName","currency","callingCode","state","setState","then","catch","console","warn","View","FlagButton","containerButtonStyle","onOpen","flagSizeButton","TouchableOpacity","activeOpacity","onPress","defaultProps"],"sourceRoot":"","sources":["../src/FlagButton.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}