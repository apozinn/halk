{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from \"../Themed\";\nimport { Userpic } from \"react-native-userpic\";\nimport { Decipher } from \"../../../middleware/crypto\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ChatContainer = function (_Component) {\n  _inherits(ChatContainer, _Component);\n\n  var _super = _createSuper(ChatContainer);\n\n  function ChatContainer(props) {\n    var _this;\n\n    _classCallCheck(this, ChatContainer);\n\n    _this = _super.call(this, props);\n    _this.badgeProps = {\n      size: 25,\n      borderRadius: 50,\n      animate: true\n    };\n    _this.states = {};\n    _this.chat = props.chat;\n    _this.navigation = props.navigation;\n    _this.socket = props.socket;\n    _this.user = props.user;\n    _this.chats = props.chats;\n    return _this;\n  }\n\n  _createClass(ChatContainer, [{\n    key: \"EditChat\",\n    value: function EditChat() {\n      return _jsx(_Fragment, {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var lastMessage = this.chat.messages[this.chat.messages.length - 1];\n      if (!lastMessage) return null;\n      var unredMessages = this.chat.messages.filter(function (m) {\n        return m.read === false;\n      });\n      var messageTime = new Date(lastMessage.createdAt).toLocaleTimeString();\n\n      var _useState = useState(false),\n          _useState2 = _slicedToArray(_useState, 2),\n          isOnline = _useState2[0],\n          setIsOnline = _useState2[1];\n\n      if (this.socket) {\n        this.socket.emit(\"verifyIfUserIsOnline\", {\n          userId: chat.user.id\n        });\n        this.socket.on(\"receiveIfUserIsOnline\", function (callback) {\n          return setIsOnline(callback);\n        });\n      }\n\n      var content = this.chat.key ? Decipher(lastMessage.content, this.chat.key) : \"Nova mensagem\";\n      return _jsxs(TouchableOpacity, {\n        style: styles.chatContainer,\n        onPress: function onPress() {},\n        onLongPress: function onLongPress() {},\n        children: [_jsx(this.EditChat, {}), _jsx(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: _jsx(Userpic, {\n            size: 40,\n            name: this.chat.user.profile.name,\n            source: {\n              uri: this.chat.user.profile.avatar\n            },\n            colorize: true,\n            borderRadius: \"50%\",\n            badge: true,\n            badgeColor: isOnline ? \"#00ff0d\" : \"#919191\",\n            badgePosition: \"bottom-right\",\n            badgeProps: this.badgeProps,\n            style: {\n              marginRight: 10\n            }\n          })\n        }), _jsxs(View, {\n          style: {\n            justifyContent: \"center\"\n          },\n          children: [_jsx(Text, {\n            style: styles.username,\n            children: this.chat.user.profile.name\n          }), lastMessage.author.id === user.id ? _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              alignItems: \"center\"\n            },\n            children: [_jsx(Ionicons, {\n              name: \"checkmark-done\",\n              size: 20,\n              color: lastMessage.read ? \"#2f95dc\" : \"gray\",\n              style: {\n                marginRight: 2\n              }\n            }), _jsx(Text, {\n              style: styles.messageContent,\n              children: content.length > 28 ? content.slice(0, 28) + \"...\" : content\n            })]\n          }) : _jsx(Text, {\n            children: content.length > 30 ? content.slice(0, 30) + \"...\" : content\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return ChatContainer;\n}(Component);\n\nvar styles = StyleSheet.create({\n  chatContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    padding: 5\n  }\n});\nexport default ChatContainer;","map":{"version":3,"names":["React","Component","useState","Text","Userpic","Decipher","ChatContainer","props","badgeProps","size","borderRadius","animate","states","chat","navigation","socket","user","chats","lastMessage","messages","length","unredMessages","filter","m","read","messageTime","Date","createdAt","toLocaleTimeString","isOnline","setIsOnline","emit","userId","id","on","callback","content","key","styles","chatContainer","flexDirection","profile","name","uri","avatar","marginRight","justifyContent","username","author","alignItems","messageContent","slice","StyleSheet","create","padding"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/src/components/chat/chatContainer.tsx"],"sourcesContent":["import React, { Component, ReactElement, useState, useContext } from \"react\";\nimport { StyleSheet, TouchableOpacity, View } from \"react-native\";\nimport { Text } from \"../Themed\";\nimport { Userpic } from \"react-native-userpic\";\nimport CreateSocketConnectio from '../../utils/socket';\nimport { UserContext } from '../../contexts/user';\nimport { ChatsContext } from '../../contexts/chats';\nimport { Cipher, Decipher } from '../../../middleware/crypto';\n\nclass ChatContainer extends Component {\n  badgeProps = {\n    size: 25,\n    borderRadius: 50,\n    animate: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this.states = {};\n\n    this.chat = props.chat;\n    this.navigation = props.navigation;\n\n    this.socket = props.socket;\n    this.user = props.user;\n    this.chats = props.chats;\n  }\n\n  EditChat(): ReactElement<any> {\n    return (\n      <></>\n    );\n  }\n\n  render(): ReactElement<any> {\n    const lastMessage = this.chat.messages[this.chat.messages.length - 1];\n    if (!lastMessage) return null;\n    const unredMessages = this.chat.messages.filter((m) => m.read === false);\n    const messageTime = new Date(lastMessage.createdAt).toLocaleTimeString();\n    const [isOnline, setIsOnline] = useState(false);\n\n    if (this.socket) {\n      this.socket.emit(\"verifyIfUserIsOnline\", { userId: chat.user.id });\n      this.socket.on(\"receiveIfUserIsOnline\", (callback) => setIsOnline(callback));\n    }\n\n    let content = this.chat.key\n      ? Decipher(lastMessage.content, this.chat.key)\n      : \"Nova mensagem\";\n\n    return (\n      <TouchableOpacity\n        style={styles.chatContainer}\n        onPress={() => {}}\n        onLongPress={() => {}}\n      >\n      <this.EditChat/>\n      <View style={{ flexDirection: \"row\" }}>\n\n      <Userpic\n        size={40}\n        name={this.chat.user.profile.name}\n        source={{ uri: this.chat.user.profile.avatar }}\n        colorize={true}\n        borderRadius=\"50%\"\n        badge={true}\n        badgeColor={isOnline ? \"#00ff0d\" : \"#919191\"}\n        badgePosition={\"bottom-right\"}\n        badgeProps={this.badgeProps}\n        style={{ marginRight: 10 }}\n      />\n      </View>\n      <View style={{ justifyContent: \"center\" }}>\n        <Text style={styles.username}>{this.chat.user.profile.name}</Text>\n        {lastMessage.author.id === user.id ? (\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n            <Ionicons\n              name=\"checkmark-done\"\n              size={20}\n              color={lastMessage.read ? \"#2f95dc\" : \"gray\"}\n              style={{ marginRight: 2 }}\n            />\n            <Text style={styles.messageContent}>\n              {content.length > 28 ? content.slice(0, 28) + \"...\" : content}\n            </Text>\n          </View>\n        ) : (\n          <Text>\n            {content.length > 30 ? content.slice(0, 30) + \"...\" : content}\n          </Text>\n        )}\n      </View>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  chatContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    padding: 5,\n  },\n});\n\nexport default ChatContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}