{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport io from 'socket.io-client';\nimport { TextInput, Text } from \"../../src/components/Themed\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar socketEndpoint = \"http://localhost:3000\";\nexport default function Chat(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState('Chat Web'),\n      _useState2 = _slicedToArray(_useState, 1),\n      title = _useState2[0];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      messages = _useState8[0],\n      setMessages = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      hasConnection = _useState10[0],\n      setConnection = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      time = _useState12[0],\n      setTime = _useState12[1];\n\n  useEffect(function () {\n    var socket = io(socketEndpoint, {\n      transports: [\"websocket\"]\n    });\n    socket.io.on(\"open\", function () {\n      return setConnection(true);\n    });\n    socket.io.on(\"close\", function () {\n      return setConnection(false);\n    });\n    socket.on(\"time-msg\", function (data) {\n      setTime(new Date(data.time).toString());\n    });\n    return function didUnmount() {\n      socket.disconnect();\n      socket.removeAllListeners();\n    };\n  }, []);\n\n  function validateInput() {\n    return name.length > 0 && text.length > 0;\n  }\n\n  function sendMessage() {\n    if (validateInput()) {\n      var message = {\n        name: name,\n        text: text\n      };\n      socket.emit('msgToServer', message);\n      setText('');\n    }\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      value: name,\n      onChangeText: function onChangeText(value) {\n        return setName(value);\n      },\n      placeholder: \"enter your name\"\n    }), _jsx(View, {\n      style: styles.messageCard,\n      children: messages.map(function (message) {\n        if (message.name === name) {\n          return _jsxs(Text, {\n            children: [message.name, \" \", message.text]\n          });\n        }\n\n        return _jsxs(Text, {\n          children: [message.name, \" \", message.text]\n        });\n      })\n    }), _jsx(TextInput, {\n      value: text,\n      onChangeText: function onChangeText(value) {\n        return setText(value);\n      },\n      placeholder: \"Send a message\"\n    }), _jsx(Button, {\n      title: \"Send\",\n      onPress: function onPress() {\n        return sendMessage();\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: '#222'\n  },\n  myMessage: {\n    backgroundColor: 'blue'\n  },\n  otherMessage: {\n    backgroundColor: 'gray'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","io","TextInput","Text","socketEndpoint","Chat","navigation","title","name","setName","text","setText","messages","setMessages","hasConnection","setConnection","time","setTime","socket","transports","on","data","Date","toString","didUnmount","disconnect","removeAllListeners","validateInput","length","sendMessage","message","emit","styles","container","value","messageCard","map","StyleSheet","create","flex","marginTop","StatusBar","currentHeight","borderWidth","borderColor","myMessage","backgroundColor","otherMessage"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/screens/chat/chat.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, StatusBar, StyleSheet, View } from \"react-native\";\nimport { RootStackScreenProps } from \"../../types\";\nimport * as uuid from 'uuid';\nimport io from 'socket.io-client';\nimport { TextInput, Text } from '../../src/components/Themed';\n\ninterface Message {\n  id: string;\n  name: string;\n  text: string;\n}\n\ninterface Payload {\n  name: string;\n  text: string;\n}\n\nconst socketEndpoint = \"http://localhost:3000\";\n\nexport default function Chat({ navigation }: RootStackScreenProps<\"Chat\">) {\n  const [title] = useState('Chat Web');\n  const [name, setName] = useState('');\n  const [text, setText] = useState('');\n  const [messages, setMessages] = useState<Message[]>([]);\n\nconst [hasConnection, setConnection] = useState(false);\n  const [time, setTime] = useState(null);\n\n  useEffect(() => {\n const socket = io(socketEndpoint, {\n      transports: [\"websocket\"],\n    });\n\n    socket.io.on(\"open\", () => setConnection(true));\n    socket.io.on(\"close\", () => setConnection(false));\n\n    socket.on(\"time-msg\", (data) => {\n      setTime(new Date(data.time).toString());\n    });\n\n    return function didUnmount() {\n      socket.disconnect();\n      socket.removeAllListeners();\n    };\n  }, []);\n\n  function validateInput() {\nreturn name.length > 0 && text.length > 0;\n  }\n\n  function sendMessage() {\nif (validateInput()) {\n      const message: Payload = {\n        name,\n        text,\n      };\n\n      socket.emit('msgToServer', message);\n      setText('');\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <TextInput value={name} onChangeText={(value) => setName(value)} placeholder=\"enter your name\"/>\n      <View style={styles.messageCard}>\n      {messages.map(message => {\n            if (message.name === name) {\n              return (\n                <Text>\n                  {message.name} {message.text}\n                </Text>\n              );\n            }\n\n            return (\n              <Text>\n                {message.name} {message.text}\n              </Text>\n            );\n          })}\n      </View>\n      <TextInput value={text} onChangeText={(value) => setText(value)} placeholder='Send a message'/>\n      <Button title='Send' onPress={() => sendMessage()}/>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: StatusBar.currentHeight,\n  },\n  messageCard: {\n    borderWidth: 1,\n    borderColor: '#222',\n  },\n  myMessage: {\n    backgroundColor: 'blue',\n  },\n  otherMessage: {\n    backgroundColor: 'gray',\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}