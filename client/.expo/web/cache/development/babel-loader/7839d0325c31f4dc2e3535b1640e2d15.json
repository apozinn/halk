{"ast":null,"code":"import React, { useContext, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { Text } from \"../../src/components/Themed\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Chats(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      logged = _useContext.logged,\n      updateUser = _useContext.updateUser;\n\n  var _useContext2 = useContext(ChatsContext),\n      chats = _useContext2.chats;\n\n  useEffect(function () {}, [chats, user]);\n  return _jsx(View, {\n    style: styles.container,\n    children: !logged ? _jsx(_Fragment, {\n      children: navigation.navigate(\"Welcome\")\n    }) : _jsx(ScrollView, {\n      children: !chats.length ? _jsxs(View, {\n        style: styles.chat,\n        children: [_jsxs(View, {\n          style: styles.leftContent,\n          children: [_jsx(Image, {\n            source: require(\"../../assets/images/icon.png\"),\n            style: styles.userIcon\n          }), _jsxs(View, {\n            children: [_jsx(Text, {\n              style: styles.username,\n              children: \"Halk\"\n            }), _jsx(Text, {\n              style: styles.messageContent,\n              children: \"Welcome to halk!\"\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.rightContent,\n          children: [_jsxs(Text, {\n            style: styles.messageDate,\n            children: [new Date().getHour(), \":\", new Date().getMinutes()]\n          }), _jsx(Text, {\n            style: styles.unread,\n            children: \"1\"\n          })]\n        })]\n      }) : _jsx(_Fragment, {\n        children: chats.map(function (chat, index) {\n          return _jsx(View, {\n            style: styles.chat\n          }, index);\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  chat: {\n    margim: 10,\n    flexDirection: \"row\",\n    justifyContent: 'space-between'\n  },\n  leftContent: {\n    flexDirection: 'row'\n  },\n  userIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 100,\n    marginRight: 10\n  },\n  username: {},\n  messageContent: {\n    fontSize: 13,\n    opacity: 0.8\n  },\n  rightContent: {},\n  messageDate: {\n    fontSize: 11\n  },\n  unread: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    width: 10,\n    height: 10,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useContext","useEffect","UserContext","ChatsContext","Text","Chats","navigation","user","logged","updateUser","chats","styles","container","navigate","length","chat","leftContent","require","userIcon","username","messageContent","rightContent","messageDate","Date","getHour","getMinutes","unread","map","index","StyleSheet","create","flex","margim","flexDirection","justifyContent","width","height","borderRadius","marginRight","fontSize","opacity","backgroundColor","textAlign"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/app/chats.tsx"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport { Pressable, View, StyleSheet, ScrollView } from \"react-native\";\nimport { RootTabScreenProps } from \"../../types\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { Text } from \"../../src/components/Themed\";\n\nexport default function Chats({ navigation }: RootTabScreenProps<\"Chats\">) {\n  const { user, logged, updateUser } = useContext(UserContext);\n  const { chats } = useContext(ChatsContext);\n\n  useEffect(() => {}, [chats, user]);\n\n  return (\n    <View style={styles.container}>\n      {!logged ? (\n        <>{navigation.navigate(\"Welcome\")}</>\n      ) : (\n        <ScrollView>\n          {!chats.length ? (\n            <View style={styles.chat}>\n              <View style={styles.leftContent}>\n              <Image source={require('../../assets/images/icon.png')} style={styles.userIcon}/>\n                <View>\n                <Text style={styles.username}>Halk</Text>\n                <Text style={styles.messageContent}>Welcome to halk!</Text>\n                </View>\n              </View>\n              <View style={styles.rightContent}>\n              <Text style={styles.messageDate}>{new Date().getHour()}:{new Date().getMinutes()}</Text>\n              <Text style={styles.unread}>1</Text>\n              </View>\n            </View>\n          ) : (\n            <>\n              {chats.map((chat, index) => (\n                <View style={styles.chat} key={index}></View>\n              ))}\n            </>\n          )}\n        </ScrollView>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  chat: {\n    margim: 10,\n    flexDirection: \"row\",\n    justifyContent: 'space-between',\n  },\n  leftContent: {\n    flexDirection: 'row',\n  },\n  userIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 100,\n    marginRight: 10,\n  },\n  username: {},\n  messageContent: {\n    fontSize: 13,\n    opacity: 0.8,\n  },\n  rightContent: {},\n  messageDate: {\n    fontSize: 11,\n  },\n  unread: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    width: 10,\n    height: 10,\n    textAlign: 'center',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}