{"ast":null,"code":"import crypto from 'crypto';\nexport function Cipher(text, password) {\n  var cipher = crypto.createCipher('aes-128-cbc', password);\n  var payloadString = cipher.update(text, 'utf8', 'hex');\n  return payloadString;\n}\nexport function Decipher(text, password) {\n  var decipher = crypto.createDecipher('aes-128-cbc', password);\n  var payloadString = decipher.update(text, 'hex', 'utf8');\n  return payloadString;\n}","map":{"version":3,"names":["crypto","Cipher","text","password","cipher","createCipher","payloadString","update","Decipher","decipher","createDecipher"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/middleware/crypto.ts"],"sourcesContent":["import crypto from 'crypto';\n\nexport function Cipher(text, password) {\n  const cipher = crypto.createCipher('aes-128-cbc', password);\n  const payloadString = cipher.update(text, 'utf8', 'hex');\n  return payloadString;\n}\n\nexport function Decipher(text, password) {\n  const decipher = crypto.createDecipher('aes-128-cbc', password);\n  const payloadString = decipher.update(text, 'hex', 'utf8');\n  return payloadString;\n}\n"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,SAASC,MAAT,CAAgBC,IAAhB,EAAsBC,QAAtB,EAAgC;EACrC,IAAMC,MAAM,GAAGJ,MAAM,CAACK,YAAP,CAAoB,aAApB,EAAmCF,QAAnC,CAAf;EACA,IAAMG,aAAa,GAAGF,MAAM,CAACG,MAAP,CAAcL,IAAd,EAAoB,MAApB,EAA4B,KAA5B,CAAtB;EACA,OAAOI,aAAP;AACD;AAED,OAAO,SAASE,QAAT,CAAkBN,IAAlB,EAAwBC,QAAxB,EAAkC;EACvC,IAAMM,QAAQ,GAAGT,MAAM,CAACU,cAAP,CAAsB,aAAtB,EAAqCP,QAArC,CAAjB;EACA,IAAMG,aAAa,GAAGG,QAAQ,CAACF,MAAT,CAAgBL,IAAhB,EAAsB,KAAtB,EAA6B,MAA7B,CAAtB;EACA,OAAOI,aAAP;AACD"},"metadata":{},"sourceType":"module"}