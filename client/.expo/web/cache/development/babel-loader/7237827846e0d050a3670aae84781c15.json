{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { Text } from \"../../src/components/Themed\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport NewChatButton from \"../../src/components/newChat\";\nimport { getColors } from \"../../constants/Colors\";\nimport Socket, { CreateSocketConnection } from \"../../src/utils/socket\";\nimport { Decipher } from \"../../middleware/crypto\";\nimport { Userpic } from \"react-native-userpic\";\nimport EditChat from \"../../src/components/chat/editChat\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar badgeProps = {\n  size: 25,\n  borderRadius: 50,\n  animate: true\n};\nexport default function Chats(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      socket = _useState2[0],\n      setSocket = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      requestEditChat = _useState4[0],\n      setRequestEditChat = _useState4[1];\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      logged = _useContext.logged,\n      updateUser = _useContext.updateUser;\n\n  var _useContext2 = useContext(ChatsContext),\n      chats = _useContext2.chats,\n      updateChats = _useContext2.updateChats;\n\n  var colors = getColors();\n  useEffect(function () {\n    var socketConnection = CreateSocketConnection({\n      userId: user.id\n    });\n    setSocket(socketConnection);\n    socketConnection.on(\"newChat\", function (_ref2) {\n      var newChat = _ref2.newChat;\n\n      if (newChat) {\n        chats.push(newChat);\n        updateChats({\n          chats: chats\n        });\n      }\n    });\n    socketConnection.on(\"receiveMessage\", function (msg) {\n      if (msg) {\n        var thisChat = chats.filter(function (c) {\n          return c.user.id === msg.author.id;\n        })[0];\n\n        if (thisChat) {\n          if (thisChat.messages.some(function (m) {\n            return m.id === msg.id;\n          })) return;\n          thisChat.messages.push(msg);\n          updateChats({\n            chats: chats\n          });\n        }\n      }\n    });\n    socketConnection.on(\"readMessage\", function (p) {\n      console.log(p);\n    });\n  }, []);\n\n  function ChatContainer(_ref3) {\n    var chat = _ref3.chat;\n    if (!chat.id) return;\n    var lastMessage = chat.messages[chat.messages.length - 1];\n    if (!lastMessage) return null;\n    var unredMessages = chat.messages.filter(function (m) {\n      return !m.read;\n    });\n    var messageTime = new Date(lastMessage.createdAt).toLocaleTimeString();\n\n    var _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isOnline = _useState6[0],\n        setIsOnline = _useState6[1];\n\n    if (socket) {\n      socket.emit(\"verifyIfUserIsOnline\", {\n        userId: chat.user.id\n      });\n      socket.on(\"receiveIfUserIsOnline\", function (callback) {\n        return setIsOnline(callback);\n      });\n    }\n\n    var content = chat.key ? Decipher(lastMessage.content, chat.key) : \"Nova mensagem\";\n    return _jsxs(Pressable, {\n      style: function style(_ref4) {\n        var pressed = _ref4.pressed;\n        return [styles.chat, {\n          backgroundColor: pressed ? colors.defaultColors.card : \"transparent\"\n        }];\n      },\n      onPress: function onPress() {\n        return navigation.navigate(\"Chat\", {\n          id: chat.id\n        });\n      },\n      onLongPress: function onLongPress() {\n        return setRequestEditChat(requestEditChat ? false : true);\n      },\n      children: [_jsx(EditChat, {\n        chat: chat,\n        navigation: navigation,\n        requestEditChat: requestEditChat\n      }), _jsxs(View, {\n        style: styles.leftContent,\n        children: [_jsx(Userpic, {\n          size: 40,\n          name: chat.user.profile.name,\n          source: {\n            uri: chat.user.profile.avatar\n          },\n          colorize: true,\n          borderRadius: \"50%\",\n          badge: true,\n          badgeColor: isOnline ? \"#00ff0d\" : \"#919191\",\n          badgePosition: \"bottom-right\",\n          badgeProps: badgeProps,\n          style: {\n            marginRight: 10\n          }\n        }), _jsxs(View, {\n          style: {\n            justifyContent: \"center\"\n          },\n          children: [_jsx(Text, {\n            style: styles.username,\n            children: chat.user.profile.name\n          }), lastMessage.author.id === user.id ? _jsxs(View, {\n            style: {\n              flexDirection: \"row\",\n              alignItems: \"center\"\n            },\n            children: [_jsx(Ionicons, {\n              name: \"checkmark-done\",\n              size: 20,\n              color: \"gray\",\n              style: {\n                marginRight: 2\n              }\n            }), _jsx(Text, {\n              style: styles.messageContent,\n              children: content.length > 28 ? content.slice(0, 28) + \"...\" : content\n            })]\n          }) : _jsx(Text, {\n            children: content.length > 30 ? content.slice(0, 30) + \"...\" : content\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.rightContent,\n        children: [_jsx(Text, {\n          style: styles.messageDate,\n          children: messageTime.slice(0, 5)\n        }), !unredMessages.length ? _jsx(_Fragment, {}) : _jsx(Text, {\n          style: styles.unread,\n          children: unredMessages.length\n        })]\n      })]\n    });\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [!logged ? _jsx(_Fragment, {\n      children: navigation.navigate(\"Welcome\")\n    }) : _jsx(ScrollView, {\n      style: {\n        padding: 5\n      },\n      children: !chats.length ? _jsx(ChatContainer, {\n        chat: new Socket.sendHalkMessage()\n      }) : _jsx(_Fragment, {\n        children: chats.map(function (chat, index) {\n          return _jsx(ChatContainer, {\n            chat: chat\n          }, index);\n        })\n      })\n    }), _jsx(NewChatButton, {\n      navigation: navigation\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  chat: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    padding: 5\n  },\n  leftContent: {\n    flexDirection: \"row\"\n  },\n  userIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 100,\n    marginRight: 10\n  },\n  username: {\n    fontWeight: \"bold\"\n  },\n  messageContent: {\n    fontSize: 13,\n    opacity: 0.7,\n    alignItems: \"center\"\n  },\n  rightContent: {\n    alignItems: \"center\"\n  },\n  messageDate: {\n    fontSize: 11,\n    marginBottom: 3\n  },\n  unread: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    minWidth: 15,\n    minHeight: 15,\n    textAlign: \"center\",\n    color: \"white\"\n  }\n});","map":{"version":3,"names":["React","useContext","useEffect","useState","UserContext","ChatsContext","Text","Ionicons","NewChatButton","getColors","Socket","CreateSocketConnection","Decipher","Userpic","EditChat","badgeProps","size","borderRadius","animate","Chats","navigation","socket","setSocket","requestEditChat","setRequestEditChat","user","logged","updateUser","chats","updateChats","colors","socketConnection","userId","id","on","newChat","push","msg","thisChat","filter","c","author","messages","some","m","p","console","log","ChatContainer","chat","lastMessage","length","unredMessages","read","messageTime","Date","createdAt","toLocaleTimeString","isOnline","setIsOnline","emit","callback","content","key","pressed","styles","backgroundColor","defaultColors","card","navigate","leftContent","profile","name","uri","avatar","marginRight","justifyContent","username","flexDirection","alignItems","messageContent","slice","rightContent","messageDate","unread","container","padding","sendHalkMessage","map","index","StyleSheet","create","flex","userIcon","width","height","fontWeight","fontSize","opacity","marginBottom","minWidth","minHeight","textAlign","color"],"sources":["/home/samuel/Documentos/projetos/mobile/halk/client/screens/app/chats.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Pressable, View, StyleSheet, ScrollView, Image } from \"react-native\";\nimport { RootTabScreenProps } from \"../../types\";\nimport { UserContext } from \"../../src/contexts/user\";\nimport { ChatsContext } from \"../../src/contexts/chats\";\nimport { Text } from \"../../src/components/Themed\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport NewChatButton from \"../../src/components/newChat\";\nimport { getColors } from \"../../constants/Colors\";\nimport Socket, { CreateSocketConnection } from \"../../src/utils/socket\";\nimport { Cipher, Decipher } from \"../../middleware/crypto\";\nimport { Userpic } from \"react-native-userpic\";\nimport EditChat from '../../src/components/chat/editChat';\n\nconst badgeProps = {\n  size: 25,\n  borderRadius: 50,\n  animate: true,\n};\n\nexport default function Chats({ navigation }: RootTabScreenProps<\"Chats\">) {\n  const [socket, setSocket] = useState();\n  const [requestEditChat, setRequestEditChat]= useState(false);\n\n  const { user, logged, updateUser } = useContext(UserContext);\n  const { chats, updateChats } = useContext(ChatsContext);\n  const colors = getColors();\n\n  useEffect(() => {\n    const socketConnection = CreateSocketConnection({ userId: user.id });\n    setSocket(socketConnection);\n\n    socketConnection.on(\"newChat\", ({ newChat }) => {\n      if (newChat) {\n        chats.push(newChat);\n        updateChats({ chats });\n      }\n    });\n    socketConnection.on(\"receiveMessage\", (msg) => {\n      if (msg) {\n        const thisChat = chats.filter((c) => c.user.id === msg.author.id)[0];\n        if (thisChat) {\n          if (thisChat.messages.some((m) => m.id === msg.id)) return;\n          thisChat.messages.push(msg);\n          updateChats({ chats });\n        }\n      }\n    });\n    socketConnection.on(\"readMessage\", (p) => {\n      console.log(p);\n    });\n  }, []);\n\n  function ChatContainer({ chat }) {\n    if (!chat.id) return;\n    const lastMessage = chat.messages[chat.messages.length - 1];\n    if (!lastMessage) return null;\n    const unredMessages = chat.messages.filter((m) => !m.read);\n    const messageTime = new Date(lastMessage.createdAt).toLocaleTimeString();\n    const [isOnline, setIsOnline] = useState(false);\n\n    if (socket) {\n      socket.emit(\"verifyIfUserIsOnline\", { userId: chat.user.id });\n      socket.on(\"receiveIfUserIsOnline\", (callback) => setIsOnline(callback));\n    }\n\n    let content = chat.key\n      ? Decipher(lastMessage.content, chat.key)\n      : \"Nova mensagem\";\n\n    return (\n      <Pressable\n        style={({ pressed }) => [\n          styles.chat,\n          {\n            backgroundColor: pressed\n              ? colors.defaultColors.card\n              : \"transparent\",\n          },\n        ]}\n        onPress={() =>\n          navigation.navigate(\"Chat\", {\n            id: chat.id,\n          })\n        }\n        onLongPress={() => setRequestEditChat(requestEditChat ? false : true)}\n      >\n      <EditChat {...{chat, navigation, requestEditChat}}/>\n        <View style={styles.leftContent}>\n          <Userpic\n            size={40}\n            name={chat.user.profile.name}\n            source={{ uri: chat.user.profile.avatar }}\n            colorize={true}\n            borderRadius=\"50%\"\n            badge={true}\n            badgeColor={isOnline ? \"#00ff0d\" : \"#919191\"}\n            badgePosition={\"bottom-right\"}\n            badgeProps={badgeProps}\n            style={{ marginRight: 10 }}\n          />\n          <View style={{ justifyContent: \"center\" }}>\n            <Text style={styles.username}>{chat.user.profile.name}</Text>\n            {lastMessage.author.id === user.id ? (\n              <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\n                <Ionicons\n                  name=\"checkmark-done\"\n                  size={20}\n                  color=\"gray\"\n                  style={{ marginRight: 2 }}\n                />\n                <Text style={styles.messageContent}>\n                  {content.length > 28 ? content.slice(0, 28) + \"...\" : content}\n                </Text>\n              </View>\n            ) : (\n              <Text>\n                {content.length > 30 ? content.slice(0, 30) + \"...\" : content}\n              </Text>\n            )}\n          </View>\n        </View>\n        <View style={styles.rightContent}>\n          <Text style={styles.messageDate}>{messageTime.slice(0, 5)}</Text>\n          {!unredMessages.length ? (\n            <></>\n          ) : (\n            <Text style={styles.unread}>{unredMessages.length}</Text>\n          )}\n        </View>\n      </Pressable>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      {!logged ? (\n        <>{navigation.navigate(\"Welcome\")}</>\n      ) : (\n        <ScrollView style={{ padding: 5 }}>\n          {!chats.length ? (\n            <ChatContainer chat={new Socket.sendHalkMessage()} />\n          ) : (\n            <>\n              {chats.map((chat, index) => (\n                <ChatContainer chat={chat} key={index} />\n              ))}\n            </>\n          )}\n        </ScrollView>\n      )}\n      <NewChatButton navigation={navigation} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  chat: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    padding: 5,\n  },\n  leftContent: {\n    flexDirection: \"row\",\n  },\n  userIcon: {\n    width: 50,\n    height: 50,\n    borderRadius: 100,\n    marginRight: 10,\n  },\n  username: {\n    fontWeight: \"bold\",\n  },\n  messageContent: {\n    fontSize: 13,\n    opacity: 0.7,\n    alignItems: \"center\",\n  },\n  rightContent: {\n    alignItems: \"center\",\n  },\n  messageDate: {\n    fontSize: 11,\n    marginBottom: 3,\n  },\n  unread: {\n    backgroundColor: \"#2f95dc\",\n    borderRadius: 100,\n    minWidth: 15,\n    minHeight: 15,\n    textAlign: \"center\",\n    color: \"white\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}